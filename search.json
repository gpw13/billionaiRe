[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) 2020 Seth Caldwell  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. billionaiRe Copyright (C) 2020 Seth Caldwell This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"/articles/scenarios.html","id":"definition","dir":"Articles","previous_headings":"","what":"Definition","title":"Scenarios","text":"Triple Billions billionaiRe package context, scenarios understood alternative, plausible, description future may develop based set defined assumptions. Three sets scenarios can identified: Event-based scenarios: event presumed yet unknown impact Billions (e.g. COVID-19 scenarios). type scenario usually starts last reported value, scenarios provide values points part time series. Trajectory-based scenarios: certain targets trajectories must reached certain date (e.g. Sustainable Development Goal targets, acceleration scenarios technical programs). scenarios start 2019 2018 GPW13 baseline year. Internal use scenarios: scenarios provide ability deal alternative time series kind, include alternative projection methods, update data sources, etc. scenarios might displayed public use, illustrate versatility seeking scenarios. Scenarios must: tidy: row unique combination iso3 country-code, year, indicator, scenario (relevant). Contain data strictly needed calculations billionaiRe billionaiRe require data missing scenario, recycled scenarios (see Data recycling). three special case scenario: routine: stores reported estimated data reference_infilling: stores technical programs projected data (either projected imputed). default: stores main scenario presented dashboard. can include projections imputations. also scenario used data recycling (see Data recycling)","code":""},{"path":"/articles/scenarios.html","id":"data-recycling","dir":"Articles","previous_headings":"","what":"Data recycling","title":"Scenarios","text":"billionaiRe transform_ calculate_ functions (well rapporteur export functions) use provided scenario column group dplyr::group_by. Scenarios contain required data needed billionaiRe calculations. scenario contain required data, functions fail. users billionaiRe, accessing external data tables (xMart Wolrd Health Data Hub) resource intensive computation. means large tables avoided. Recycling data scenarios key avoid storing identical data multiple times used different scenarios. data recycling aims achieve: minimal storage computation. Data recycling infers existence reference scenario, main scenario displayed dashboard. default scenario call default default, parameter (default_scenario) recycle_data(), can modified required. default scenario provides values absent scenarios, along scenario_reported_estimated reported/estimated values (routine default) scenario_reference_infilling values imputed/projected technical programs (reference_infilling default). Data recycling works adding scenarios present scenario_col column values missing first default_scenario, looks scenario_reported_estimated scenario_reported_estimated add values present scenario, preceding scenarios. done series dplyr::anti_join: projections, track change offered git act history contained default scenario given time. interesting log meant default given time future make retrieval history easier.","code":"library(billionaiRe)  df <- load_misc_data(\"test_data/test_data/test_data_2022-03-06T09-30-41.parquet\")  scenario_df <- df %>%   dplyr::filter(scenario == \"covid_dip_lag\")  default_not_in_scenario <- df %>%   dplyr::filter(scenario == \"default\") %>%   dplyr::anti_join(scenario_df, by = c(\"iso3\", \"ind\", \"year\"))  reported_not_in_scenario <- df %>%   dplyr::filter(scenario == \"routine\") %>%   dplyr::anti_join(scenario_df, by = c(\"iso3\", \"ind\", \"year\"))  reported_not_in_default <- dplyr::anti_join(reported_not_in_scenario, default_not_in_scenario,   by = c(\"iso3\", \"ind\", \"year\") )  reference_infilling_not_in_scenario <- df %>%   dplyr::filter(scenario == \"reference_infilling\") %>%   dplyr::anti_join(scenario_df, by = c(\"iso3\", \"ind\", \"year\"))  reference_infilling_not_in_default <- dplyr::anti_join(reference_infilling_not_in_scenario, default_not_in_scenario,   by = c(\"iso3\", \"ind\", \"year\") )  not_in_scenario <- dplyr::bind_rows(default_not_in_scenario, reported_not_in_default) %>%   dplyr::bind_rows(reference_infilling_not_in_default) %>%   dplyr::mutate(recycled = TRUE)"},{"path":"/articles/scenarios.html","id":"implementation-of-data-recycling-in-billionaire","dir":"Articles","previous_headings":"Data recycling","what":"Implementation of data recycling in billionaiRe","title":"Scenarios","text":"Data recycling implemented billionaiRe recycle_data() function. function wraps around recycle_data_scenario_single() (exported public use) run recycling scenarios present input data frame. recycle_data uses similar parameters exported billionaiRe functions. However introduces specific parameters: default_scenario: sets default parameter (see ). default default scenario_reported_estimated: sets reported/estimated scenario (see ). routine default scenario_reference_infilling: sets projected/imputed scenarios. reference_infilling default. include_projection: Boolean set projections included recycling. TRUE default. recycle_campaigns: Boolean set campaign data included recycling. TRUE default. recycle ...parameters added transform_ functions ease recycling. recycle TRUE, data recycled, using eventual parameters passed .... order facilitate cleaning data, recycled column added recycling function identify data points recycled. can removed remove_recycled_data() function takes account specific scenarios. avoid adding ellipses billionaiRe functions opened number unforeseeable issues, formally recycled data can identified thus removed remove_recycled_data(), especially HEP billion. includes mostly carried campaign data. make_default_scenario() function provided combine default_scenario, scenario_reported_estimated, scenario_reference_infilling efficiently.","code":"# Adding a detect_respond raw to avoid warning from recycle_data. detect_respond_afg_2018 <- data.frame(   iso3 = \"AFG\",   ind = \"detect_respond\",   value = 46.66667,   scenario = \"routine\",   type = \"estimated\")  df <- load_misc_data(\"test_data/test_data/test_data_2022-03-06T09-30-41.parquet\") %>%    dplyr::bind_rows(detect_respond_afg_2018)  test_data_hep <- df %>%   recycle_data(billion = \"hep\", include_projection = FALSE) %>%   transform_hep_data(scenario_col = \"scenario\")  # Exactly equivalent to above: test_data_hep_transform <- df %>%   transform_hep_data(scenario_col = \"scenario\", recycle = TRUE, include_projection = FALSE)  dplyr::setdiff(test_data_hep, test_data_hep_transform) #> # A tibble: 0 × 11 #> # … with 11 variables: iso3 <chr>, year <dbl>, ind <chr>, scenario <chr>, #> #   value <dbl>, type <chr>, recycled <lgl>, source <chr>, #> #   transform_value <dbl>, use_dash <lgl>, use_calc <lgl>  test_data_hpop <- df %>%   recycle_data(\"hpop\", include_projection = FALSE)  # Exactly equivalent to above: test_data_hpop_transform <- df %>%   transform_hpop_data(recycle = TRUE, include_projection = FALSE)  dplyr::setdiff(test_data_hep, test_data_hep_transform) #> # A tibble: 0 × 11 #> # … with 11 variables: iso3 <chr>, year <dbl>, ind <chr>, scenario <chr>, #> #   value <dbl>, type <chr>, recycled <lgl>, source <chr>, #> #   transform_value <dbl>, use_dash <lgl>, use_calc <lgl>"},{"path":"/articles/scenarios.html","id":"scenarios-integration-into-data-pipeline","dir":"Articles","previous_headings":"","what":"Scenarios integration into data pipeline","title":"Scenarios","text":"current GPW13 data pipeline composed four main steps: Ingestion Projecting Calculating Exporting integration scenario happens stage 3 (Calculating), rest billionaiRe calculations. Within billionaiRe calculations pipeline, adding scenarios values ideally first steps. However, scenarios, especially event-based trajectory-based scenarios, might require level data recycling run. case, errors produced user try run . add_scenario() function, default_scenario argument can passed provide specific default_scenario. add_scenario functions built range pre-defined set scenarios calculation functions called within add_scenario function. two layers scenario functions can called : base scenario functions: building blocs wrapper functions. instance, scenario_fixed_target sets values linear trajectory towards target certain year, scenario_percent_baseline sets progression baseline fix percentage increase. wrappers functions combine base scenario functions generate complex scenarios like acceleration, sdg, etc.","code":"library(billionaiRe)  test_hep <- df %>%   add_scenario(     scenario_function = \"halt_rise\", # picks from a pre-determined list of scenarios     scenario_col = \"scenario\",     default_scenario = \"covid_dip_lag\"   ) %>% # indicates the scenario used as the default (in addition to `routine` and `reference_infilling`, where relevant).   add_scenario(     scenario_function = \"percent_baseline\", # picks from a pre-determined list of scenarios     percent_change = 10,     scenario_col = \"scenario\",     default_scenario = \"covid_dip_lag\"   ) %>% # indicates the scenario used as the default (in addition to `routine` and `reference_infilling`, where relevant)   recycle_data(     billion = \"hep\", # One function for each billions, so need to specify which one this is applied to.     scenario_col = \"scenario\",     default_scenario = \"covid_dip_lag\",     scenario_reported_estimated = \"routine\",     scenario_reference_infilling = \"reference_infilling\",     include_projection = TRUE,     recycle_campaigns = TRUE   ) %>% # Warnings come from the call to recycle as Afghanistan as in 2018 values for detect_respond. Thus, all scenarios return NAs for Afghanistan for that year as they all require a 2018 value.   transform_hep_data(     scenario_col = \"scenario\",     recycle = FALSE   ) %>% # adds a parameter to `transform_` functions to recycle. In this pipeline it is redundant as data was already recycled.   calculate_hep_components(scenario_col = \"scenario\") %>%   calculate_hep_billion(scenario_col = \"scenario\", end_year = 2025) %>%   dplyr::filter(     ind %in% c(       \"prevent\",       \"espar\",       \"detect_respond\",       \"hep_idx\"     ),     year == 2025   ) #> Warning: detect_respond must be present in df for at least the start_year and end_year, for each country (and scenario when provided) #>       Missing values in AFG: #> # A tibble: 1 × 4 #> # Groups:   iso3, year, scenario [1] #>   iso3   year ind            scenario  #>   <chr> <dbl> <chr>          <chr>     #> 1 AFG    2025 detect_respond halt_rise #> Warning: detect_respond must be present in df for at least the start_year and end_year, for each country (and scenario when provided) #>       Missing values in AFG: #> # A tibble: 1 × 4 #> # Groups:   iso3, year, scenario [1] #>   iso3   year ind            scenario #>   <chr> <dbl> <chr>          <chr>    #> 1 AFG    2025 detect_respond 10_2018 #> Warning: detect_respond must be present in df for at least the start_year and end_year, for each country (and scenario when provided) #>       Missing values in AFG: #> # A tibble: 2 × 4 #> # Groups:   iso3, year, scenario [2] #>   iso3   year ind            scenario  #>   <chr> <dbl> <chr>          <glue>    #> 1 AFG    2025 detect_respond halt_rise #> 2 AFG    2025 detect_respond 10_2018"},{"path":"/articles/scenarios.html","id":"base-scenario-functions","dir":"Articles","previous_headings":"Scenarios integration into data pipeline","what":"Base scenario functions:","title":"Scenarios","text":"target: aims specific target_value target_year latest: takes AROC baseline_year previous year percent_change: applies percent_change AROC baseline_year. scenario_halt_rise: stops rise indicator scenario_percent_baseline: change fixed percentage baseline value target year. Done percentage value percentage points. scenario_linear_change: change fixed percentage point baseline value target year. Done percentage points. scenario_linear_change_col: change fixed percentage point baseline value target year, percentage change value provided column single value. allow instance different change every country, indicator year combinationss. Done percentage points. scenario_quantile: aims change value based quantile’s AROC. scenario_best_in_region: aims AROC best country region. scenario_fixed_target: aims fixed target (e.g. 90, 5, etc.) scenario_fixed_target_col: aims fixed target provided column. functions use parameters. order clean scenarios, series parameters passed functions run properly: small_is_best: TRUE, lower value considered better public health outcome (e.g. adult obesity) keep_better_values: TRUE, values running scenario better , original values kept. upper_limit, lower_limit: trim TRUE, values upper_limit upper_limit values lower_limit hasve lower_limit. trim_year: TRUE values start_year end_year removed.","code":""},{"path":"/articles/scenarios.html","id":"wrappers-functions","dir":"Articles","previous_headings":"Scenarios integration into data pipeline","what":"Wrappers functions:","title":"Scenarios","text":"Currently three wrapper functions implemented: add_scenario wraps around scenarios scenario_function parameter acceleration implements acceleration scenarios defined coordination technical programs. sdg implements acceleration scenarios reach sustainable development goals. base scenario wrapped add_scenario. function calls add_ function indicator data frame. allows apply base scenario indicators data frame, passing indicator specific defaults: Behind scenes, add_scenario first get unique indicators present df, passed add_scenario_indicator(). add_scenario_indicator() find add_scenario_adult_obese function runs df halt_rise. add_scenario_adult_obese passes appropriate parameters scenario_halt_rise. case, mostly pass small_is_best scenario function. ... ellipsis used based parameters functions.","code":"library(billionaiRe)  df <- tibble::tibble(   value = 80:100,   year = 2010:2030,   ind = \"adult_obese\",   iso3 = \"testalia\",   scenario = \"default\" )  add_scenario(df, scenario_function = \"halt_rise\") %>%   dplyr::filter(scenario == \"halt_rise\") #> # A tibble: 8 × 5 #>   value  year ind         iso3     scenario  #>   <dbl> <int> <chr>       <chr>    <glue>    #> 1    88  2018 adult_obese testalia halt_rise #> 2    88  2019 adult_obese testalia halt_rise #> 3    88  2020 adult_obese testalia halt_rise #> 4    88  2021 adult_obese testalia halt_rise #> 5    88  2022 adult_obese testalia halt_rise #> 6    88  2023 adult_obese testalia halt_rise #> 7    88  2024 adult_obese testalia halt_rise #> 8    88  2025 adult_obese testalia halt_rise"},{"path":"/articles/scenarios.html","id":"acceleration-scenarios","dir":"Articles","previous_headings":"Scenarios integration into data pipeline > Wrappers functions:","what":"Acceleration scenarios","title":"Scenarios","text":"Acceleration scenarios special case scenario wraps different base scenario indicator. take consideration specific cases indicator accelerating means individually. can called directly add_scenario indicator level function following accelerate_{indicator} naming convention.","code":""},{"path":"/articles/scenarios.html","id":"scenarios-naming-convention","dir":"Articles","previous_headings":"","what":"Scenarios naming convention","title":"Scenarios","text":"Lower Snake case used Short descriptive names: use verbs much possible Use commonly understood acronyms abbreviations event scenarios start . E.g. covid, pre_covid_bau Sub-event scenarios descriptive word rather numbering undefined markers. : covid_never_return. DON’T: COVID_1 routine reserved reported/estimated data reference_infilling reserved imputed/projected data default reserved main data present dashboard acceleration reserved acceleration scenarios / trajectories sdg reserved sustainable development goals","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Seth Caldwell. Author. Alice Robson. Author. Nelly Biondi. Author. Elliott Messeiller. Author, maintainer. Muhammad Jarir Kanji. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Caldwell S, Robson , Biondi N, Messeiller E, Kanji M (2022). billionaiRe: Calculate Triple Billions. https://www..int/data/triple-billion-dashboard, https://www..int/publications/m/item/thirteenth-general-programme--work-(gpw13)-methods--impact-measurement, https://github.com/gpw13/billionaiRe.","code":"@Manual{,   title = {billionaiRe: Calculate the WHO Triple Billions},   author = {Seth Caldwell and Alice Robson and Nelly Biondi and Elliott Messeiller and Muhammad Jarir Kanji},   year = {2022},   note = {https://www.who.int/data/triple-billion-dashboard, https://www.who.int/publications/m/item/thirteenth-general-programme-of-work-(gpw13)-methods-for-impact-measurement, https://github.com/gpw13/billionaiRe}, }"},{"path":"/index.html","id":"billionaire-","dir":"","previous_headings":"","what":"Calculate the WHO Triple Billions","title":"Calculate the WHO Triple Billions","text":"goal billionaiRe provide easy interface using long format data calculate World Health Organization’s Triple Billions.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Calculate the WHO Triple Billions","text":"can install billionaiRe GitHub : need already installed wppdistro package, stored private repo made public upon request. Please contact kanjim@.int messeillere@.int request access.","code":"remotes::install_github(\"gpw13/billionaiRe\", build_vignettes = TRUE)"},{"path":"/index.html","id":"calculations","dir":"","previous_headings":"","what":"Calculations","title":"Calculate the WHO Triple Billions","text":"package built around set functions calculate Billions three Billions separately: Healthier Populations (HPOP) Health Emergencies Protection (HEP) Universal Health Coverage (UHC)","code":""},{"path":"/index.html","id":"hpop-billion-calculation","dir":"","previous_headings":"","what":"HPOP Billion calculation","title":"Calculate the WHO Triple Billions","text":"calculate HPOP Billion, series functions made available billionaiRe package: transform_hpop_data() transform raw values normalized values used within calculations. add_hpop_populations() get relevant population groups country indicator. calculate_hpop_contributions() calculate indicator level changes contributions Billion. calculate_hpop_billion() calculate indicator level changes, country-level Billion, adjusting double counting, contributions. Run sequence, can calculate entire HPOP Billion, can run separately produce different outputs required. Details inputs function available individual documentation, can see quick easy Billions calculation done using sample fake HPOP data provided package, hpop_df.","code":"library(billionaiRe)  hpop_df %>%   transform_hpop_data() %>%   add_hpop_populations() %>%   calculate_hpop_billion() %>%   dplyr::filter(stringr::str_detect(ind, \"hpop_healthier\")) #> # A tibble: 6 x 9 #>   iso3   year ind                  value transform_value population contribution #>   <chr> <dbl> <chr>                <dbl>           <dbl>      <dbl>        <dbl> #> 1 AFG    2023 hpop_healthier_plus     NA              NA   41681232    25608812. #> 2 AFG    2023 hpop_healthier_minus    NA              NA   41681232   -35897603. #> 3 AFG    2023 hpop_healthier          NA              NA   41681232   -10288791. #> 4 AFG    2023 hpop_healthier_plus~    NA              NA   41681232    30125312. #> 5 AFG    2023 hpop_healthier_minu~    NA              NA   41681232   -69269569. #> 6 AFG    2023 hpop_healthier_dbl_~    NA              NA   41681232   -39144257. #> # ... with 2 more variables: contribution_percent <dbl>, #> #   contribution_percent_total_pop <dbl>"},{"path":"/index.html","id":"uhc-billion-calculation","dir":"","previous_headings":"","what":"UHC Billion calculation","title":"Calculate the WHO Triple Billions","text":"calculate UHC Billion, series functions made available billionaiRe package: transform_uhc_data() transform raw values normalized values used within calculations. calculate_uhc_billion() calculate average service coverage, financial hardship, UHC single measure country year data frame.. calculate_uhc_contribution() calculate country-level Billion specified beginning end year. Run sequence, can calculate entire UHC Billion, can run separately produce different outputs required. Details inputs function available individual documentation, can see quick easy Billions calculation done using sample fake UHC data provided package, uhc_df.","code":"library(billionaiRe)  uhc_df %>%   transform_uhc_data() %>%   calculate_uhc_billion() %>%   calculate_uhc_contribution(end_year = 2023) %>%   dplyr::filter(ind %in% c(\"uhc_sm\", \"asc\", \"fh\"),                 year == 2023) #> # A tibble: 3 x 9 #>   iso3   year ind    value transform_value type      source         contribution #>   <chr> <dbl> <chr>  <dbl>           <dbl> <chr>     <chr>                 <dbl> #> 1 AFG    2023 fh      25.4            25.4 <NA>      <NA>               2963536. #> 2 AFG    2023 asc     45.6            45.6 projected WHO DDI calcu~     1607136. #> 3 AFG    2023 uhc_sm  34.0            34.0 projected WHO DDI calcu~      -38238. #> # ... with 1 more variable: contribution_percent <dbl>"},{"path":"/index.html","id":"hep-billion-calculation","dir":"","previous_headings":"","what":"HEP Billion calculation","title":"Calculate the WHO Triple Billions","text":"calculate HEP Billion, series functions made available billionaiRe package: transform_hep_data() transform raw values normalized values used within calculations. now, primarily calculating total prevent numerators denominators campaign routine data. calculate_hep_components() calculate component indicators (Prevent coverages), HEP index, levels components. calculate_hep_billion() calculate change three HEP components (DNR, Prepare, Prevent), contribution Billion, overall HEPI change contribution. Run sequence, can calculate entire HEP Billion, can run separately produce different outputs required. Details inputs function available individual documentation, can see quick easy Billions calculation done using sample fake HEP data provided package, hep_df.","code":"library(billionaiRe)  hep_df %>%   transform_hep_data() %>%   calculate_hep_components() %>%   calculate_hep_billion(end_year = 2023) %>%   dplyr::filter(ind %in% c(\"prevent\",                            \"espar\",                            \"detect_respond\",                            \"hep_idx\"),                 year == 2023) #> # A tibble: 4 x 10 #>   iso3   year ind            value type       source transform_value level contribution #>   <chr> <dbl> <chr>          <dbl> <chr>      <chr>            <dbl> <dbl>        <dbl> #> 1 AFG    2023 espar           51.2 Projection <NA>              51.2     3     4680802. #> 2 AFG    2023 detect_respond  91   Projection <NA>              91       5     2084062. #> 3 AFG    2023 prevent         NA   Projection WHO D~           100       5           0  #> 4 AFG    2023 hep_idx         NA   Projection WHO D~            80.7     4     6764864. #> # ... with 1 more variable: contribution_percent <dbl>"},{"path":"/reference/accelerate_adult_obese.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate adult_obese — accelerate_adult_obese","title":"Accelerate adult_obese — accelerate_adult_obese","text":"Accelerate adult_obese halting upwards trend data 2010 value. Runs: scenario_halt_rise(df, baseline_year = 2010, small_is_best = TRUE,...).","code":""},{"path":"/reference/accelerate_adult_obese.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate adult_obese — accelerate_adult_obese","text":"","code":"accelerate_adult_obese(   df,   ind_ids = billion_ind_codes(\"hpop\"),   end_year = 2025,   scenario_col = \"scenario\",   ... )"},{"path":"/reference/accelerate_adult_obese.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate adult_obese — accelerate_adult_obese","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). end_year End year(s) contribution calculation, defaults 2019 2025. scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_adult_obese.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate adult_obese — accelerate_adult_obese","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_alcohol.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate alcohol — accelerate_alcohol","title":"Accelerate alcohol — accelerate_alcohol","text":"Accelerate alcohol picking best results business usual, halt downwards trend 2018, -10 percent 2010.","code":""},{"path":"/reference/accelerate_alcohol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate alcohol — accelerate_alcohol","text":"","code":"accelerate_alcohol(   df,   ind_ids = billion_ind_codes(\"hpop\"),   end_year = 2025,   scenario_col = \"scenario\",   ... )"},{"path":"/reference/accelerate_alcohol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate alcohol — accelerate_alcohol","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). end_year End year(s) contribution calculation, defaults 2019 2025. scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_alcohol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate alcohol — accelerate_alcohol","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_alcohol.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate alcohol — accelerate_alcohol","text":"Runs: scenario_halt_rise(df, baseline_year = 2018, small_is_best = TRUE,...), scenario_bau(df, small_is_best = TRUE,...), scenario_percent_baseline(df, percent_change = -10, baseline_year = 2010, small_is_best = TRUE, ...) picks best result three scenarios.","code":""},{"path":"/reference/accelerate_anc4.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate anc4 — accelerate_anc4","title":"Accelerate anc4 — accelerate_anc4","text":"Accelerate anc4 first dividing countries reported data without. countries without reported data, acceleration scenario_col business usual. countries reported data, scenarios fixed target 95% 2030 linear change 2.6 per year till 2025 tried, easiest achieve two selected. selected scenario compared business usual scenario reported data, best two chosen acceleration scenario.","code":""},{"path":"/reference/accelerate_anc4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate anc4 — accelerate_anc4","text":"","code":"accelerate_anc4(   df,   ind_ids = billion_ind_codes(\"uhc\"),   scenario_col = \"scenario\",   ... )"},{"path":"/reference/accelerate_anc4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate anc4 — accelerate_anc4","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_anc4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate anc4 — accelerate_anc4","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_art.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate art — accelerate_art","title":"Accelerate art — accelerate_art","text":"Accelerate art first dividing countries reported data without. countries without reported data, business usual returned. countries reported data, best business usual fixed target 90.25% 2025 chosen.","code":""},{"path":"/reference/accelerate_art.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate art — accelerate_art","text":"","code":"accelerate_art(   df,   ind_ids = billion_ind_codes(\"uhc\"),   scenario_col = \"scenario\",   start_year = 2018,   ... )"},{"path":"/reference/accelerate_art.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate art — accelerate_art","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. start_year Base year contribution calculation, defaults 2018. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_art.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate art — accelerate_art","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_beds.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate beds — accelerate_beds","title":"Accelerate beds — accelerate_beds","text":"Accelerate beds first dividing countries two groups: countries 18 beds years 2018, business usual returned. countries less 18 beds years 2018 (inclusive), best business usual linear change 0.36 per year 2025, upper limit 18, returned.","code":""},{"path":"/reference/accelerate_beds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate beds — accelerate_beds","text":"","code":"accelerate_beds(   df,   ind_ids = billion_ind_codes(\"uhc\"),   scenario_col = \"scenario\",   value_col = \"value\",   start_year = 2018,   ... )"},{"path":"/reference/accelerate_beds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate beds — accelerate_beds","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. value_col Column name column indicator values. start_year Base year contribution calculation, defaults 2018. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_beds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate beds — accelerate_beds","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_bp.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate bp — accelerate_bp","title":"Accelerate bp — accelerate_bp","text":"Accelerate bp taking best business usual decrease 25% 2010 2025. scenarios run crude bp values, converted back age-standardised equivalents using approximation.","code":""},{"path":"/reference/accelerate_bp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate bp — accelerate_bp","text":"","code":"accelerate_bp(   df,   ind_ids = billion_ind_codes(\"uhc\"),   value_col = \"value\",   scenario_col = \"scenario\",   start_year = 2018,   end_year = 2025,   ... )"},{"path":"/reference/accelerate_bp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate bp — accelerate_bp","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). value_col Column name column indicator values. scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. start_year Base year contribution calculation, defaults 2018. end_year End year(s) contribution calculation, defaults 2019 2025. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_bp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate bp — accelerate_bp","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_child_obese.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate child_obese — accelerate_child_obese","title":"Accelerate child_obese — accelerate_child_obese","text":"Accelerate child_obese halting upwards trend data 2010 value.","code":""},{"path":"/reference/accelerate_child_obese.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate child_obese — accelerate_child_obese","text":"","code":"accelerate_child_obese(df, ...)"},{"path":"/reference/accelerate_child_obese.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate child_obese — accelerate_child_obese","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_child_obese.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate child_obese — accelerate_child_obese","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_child_obese.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate child_obese — accelerate_child_obese","text":"Runs: scenario_halt_rise(df, baseline_year = 2018, small_is_best = TRUE,...), scenario_bau(df, small_is_best = TRUE,...), scenario_percent_baseline(df, percent_change = -10, baseline_year = 2010, small_is_best = TRUE, ...) picks best result three scenarios.","code":""},{"path":"/reference/accelerate_child_viol.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate child_viol — accelerate_child_viol","title":"Accelerate child_viol — accelerate_child_viol","text":"Accelerate child_viol targeting 0 2030.","code":""},{"path":"/reference/accelerate_child_viol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate child_viol — accelerate_child_viol","text":"","code":"accelerate_child_viol(   df,   ind_ids = billion_ind_codes(\"hpop\"),   end_year = 2025,   scenario_col = \"scenario\",   ... )"},{"path":"/reference/accelerate_child_viol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate child_viol — accelerate_child_viol","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). end_year End year(s) contribution calculation, defaults 2019 2025. scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_child_viol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate child_viol — accelerate_child_viol","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_child_viol.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate child_viol — accelerate_child_viol","text":"Runs: scenario_fixed_target(df, target_value = 0, target_year = 2030, small_is_best = TRUE,...),","code":""},{"path":"/reference/accelerate_cholera_campaign.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate cholera_campaign — accelerate_cholera_campaign","title":"Accelerate cholera_campaign — accelerate_cholera_campaign","text":"Accelerate cholera_campaign adding planned cholera campaigns provided values df. value reported year country, value kept, even 2018. Planned values provided denominator. planned campaigns denominator provided. case, numerator calculated taking best historical vaccination coverage achieved, available best regional historical coverage.","code":""},{"path":"/reference/accelerate_cholera_campaign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate cholera_campaign — accelerate_cholera_campaign","text":"","code":"accelerate_cholera_campaign(   df,   value_col = \"value\",   end_year = 2025,   target_year = end_year,   start_year = 2018,   ind_ids = billion_ind_codes(\"hep\"),   scenario_col = \"scenario\",   ... )"},{"path":"/reference/accelerate_cholera_campaign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate cholera_campaign — accelerate_cholera_campaign","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. value_col Column name column indicator values. end_year End year(s) contribution calculation, defaults 2019 2025. target_year Year scenario eventually achieved. Defaults end_year start_year Base year contribution calculation, defaults 2018. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_cholera_campaign.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate cholera_campaign — accelerate_cholera_campaign","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_cholera_campaign.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate cholera_campaign — accelerate_cholera_campaign","text":"Planned campaigns mix planned campaigns targets outlined roadmap 2030 Global Task Force Cholera Control.","code":""},{"path":"/reference/accelerate_detect.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate detect — accelerate_detect","title":"Accelerate detect — accelerate_detect","text":"Accelerate detect taking business usual.","code":""},{"path":"/reference/accelerate_detect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate detect — accelerate_detect","text":"","code":"accelerate_detect(   df,   ind_ids = billion_ind_codes(\"hep\"),   scenario_col = \"scenario\",   ... )"},{"path":"/reference/accelerate_detect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate detect — accelerate_detect","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_detect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate detect — accelerate_detect","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_detect_respond.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate detect_respond — accelerate_detect_respond","title":"Accelerate detect_respond — accelerate_detect_respond","text":"Accelerate detect_respond taking business usual.","code":""},{"path":"/reference/accelerate_detect_respond.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate detect_respond — accelerate_detect_respond","text":"","code":"accelerate_detect_respond(df, ...)"},{"path":"/reference/accelerate_detect_respond.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate detect_respond — accelerate_detect_respond","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_detect_respond.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate detect_respond — accelerate_detect_respond","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_devontrack.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate devontrack — accelerate_devontrack","title":"Accelerate devontrack — accelerate_devontrack","text":"Accelerate devontrack targeting 80 2030.","code":""},{"path":"/reference/accelerate_devontrack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate devontrack — accelerate_devontrack","text":"","code":"accelerate_devontrack(   df,   ind_ids = billion_ind_codes(\"hpop\"),   end_year = 2025,   scenario_col = \"scenario\",   ... )"},{"path":"/reference/accelerate_devontrack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate devontrack — accelerate_devontrack","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). end_year End year(s) contribution calculation, defaults 2019 2025. scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_devontrack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate devontrack — accelerate_devontrack","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_devontrack.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate devontrack — accelerate_devontrack","text":"Runs: scenario_fixed_target(df, target_value = 80, target_year = 2030, small_is_best = FALSE,...),","code":""},{"path":"/reference/accelerate_doctors.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate doctors — accelerate_doctors","title":"Accelerate doctors — accelerate_doctors","text":"Accelerate doctors using business usual scenario.","code":""},{"path":"/reference/accelerate_doctors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate doctors — accelerate_doctors","text":"","code":"accelerate_doctors(   df,   ind_ids = billion_ind_codes(\"uhc\"),   scenario_col = \"scenario\",   ... )"},{"path":"/reference/accelerate_doctors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate doctors — accelerate_doctors","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_doctors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate doctors — accelerate_doctors","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_dtp3.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate dtp3 — accelerate_dtp3","title":"Accelerate dtp3 — accelerate_dtp3","text":"Accelerate dtp3 using customised version scenario_fixed_target following peculiarities: baseline_year = 2019; 2020 value kept identical 2019 (baseline) value; target_year 2030; scenario straight line target_value target_year target values country provided technical program.","code":""},{"path":"/reference/accelerate_dtp3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate dtp3 — accelerate_dtp3","text":"","code":"accelerate_dtp3(   df,   ind_ids = billion_ind_codes(\"uhc\"),   scenario_col = \"scenario\",   value_col = \"value\",   start_year = 2018,   end_year = 2025,   ... )"},{"path":"/reference/accelerate_dtp3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate dtp3 — accelerate_dtp3","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. value_col Column name column indicator values. start_year Base year contribution calculation, defaults 2018. end_year End year(s) contribution calculation, defaults 2019 2025. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_dtp3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate dtp3 — accelerate_dtp3","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_espar.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate espar — accelerate_espar","title":"Accelerate espar — accelerate_espar","text":"Accelerate espar aiming best value regional average (regions) value last year last year complete espar data (categories sub-categories).","code":""},{"path":"/reference/accelerate_espar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate espar — accelerate_espar","text":"","code":"accelerate_espar(   df,   value_col = \"value\",   ind_ids = billion_ind_codes(\"hep\"),   scenario_col = \"scenario\",   start_year = 2018,   end_year = 2025,   ... )"},{"path":"/reference/accelerate_espar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate espar — accelerate_espar","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. value_col Column name column indicator values. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. start_year Base year contribution calculation, defaults 2018. end_year End year(s) contribution calculation, defaults 2019 2025. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_espar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate espar — accelerate_espar","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_fh.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate fh — accelerate_fh","title":"Accelerate fh — accelerate_fh","text":"Accelerate fh taking best business usual halting upward trends data 2018 value.","code":""},{"path":"/reference/accelerate_fh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate fh — accelerate_fh","text":"","code":"accelerate_fh(   df,   ind_ids = billion_ind_codes(\"uhc\"),   scenario_col = \"scenario\",   ... )"},{"path":"/reference/accelerate_fh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate fh — accelerate_fh","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_fh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate fh — accelerate_fh","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_fp.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate fp — accelerate_fp","title":"Accelerate fp — accelerate_fp","text":"Accelerate fp dividing countries two groups: BRN, CYP, FSM, ISL, LUX, SYC, return business usual. countries, take best business usual quantile target quantile_year = 2018 5 quantiles (capped maximum regional value 2018).","code":""},{"path":"/reference/accelerate_fp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate fp — accelerate_fp","text":"","code":"accelerate_fp(   df,   ind_ids = billion_ind_codes(\"uhc\"),   scenario_col = \"scenario\",   value_col = \"value\",   ... )"},{"path":"/reference/accelerate_fp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate fp — accelerate_fp","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. value_col Column name column indicator values. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_fp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate fp — accelerate_fp","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_fpg.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate fpg — accelerate_fpg","title":"Accelerate fpg — accelerate_fpg","text":"Accelerate fpg using business usual scenario.","code":""},{"path":"/reference/accelerate_fpg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate fpg — accelerate_fpg","text":"","code":"accelerate_fpg(   df,   ind_ids = billion_ind_codes(\"uhc\"),   scenario_col = \"scenario\",   ... )"},{"path":"/reference/accelerate_fpg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate fpg — accelerate_fpg","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_fpg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate fpg — accelerate_fpg","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_fuel.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate fuel — accelerate_fuel","title":"Accelerate fuel — accelerate_fuel","text":"Accelerate fuel keeping business usual high income countries (HIC) (according World Bank), aiming best rate change 2013 2015 region Lower-middle income countries (LMC), Low-income countries (LIC), High-income countries(HIC), unclassified countries.","code":""},{"path":"/reference/accelerate_fuel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate fuel — accelerate_fuel","text":"","code":"accelerate_fuel(   df,   ind_ids = billion_ind_codes(\"hpop\"),   scenario_col = \"scenario\",   ... )"},{"path":"/reference/accelerate_fuel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate fuel — accelerate_fuel","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_fuel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate fuel — accelerate_fuel","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_fuel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate fuel — accelerate_fuel","text":"Runs: scenario_bau(df, small_is_best = FALSE,...) HIC, scenario_best_in_region(df, target_year = 2018, baseline_year = 2013, small_is_best = FALSE,...) income groups.","code":""},{"path":"/reference/accelerate_hpop_sanitation.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate hpop_sanitation — accelerate_hpop_sanitation","title":"Accelerate hpop_sanitation — accelerate_hpop_sanitation","text":"Accelerate hpop_sanitation aiming best value quintile.","code":""},{"path":"/reference/accelerate_hpop_sanitation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate hpop_sanitation — accelerate_hpop_sanitation","text":"","code":"accelerate_hpop_sanitation(   df,   ind_ids = billion_ind_codes(\"hpop\"),   end_year = 2025,   scenario_col = \"scenario\",   ... )"},{"path":"/reference/accelerate_hpop_sanitation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate hpop_sanitation — accelerate_hpop_sanitation","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). end_year End year(s) contribution calculation, defaults 2019 2025. scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_hpop_sanitation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate hpop_sanitation — accelerate_hpop_sanitation","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_hpop_sanitation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate hpop_sanitation — accelerate_hpop_sanitation","text":"Runs: scenario_quantile(df, n = 5, quantile_year = 2019, baseline_quantile_year = 2018, upper_limit = 99, small_is_best = FALSE,...)","code":""},{"path":"/reference/accelerate_hpop_sanitation_rural.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate hpop_sanitation_rural — accelerate_hpop_sanitation_rural","title":"Accelerate hpop_sanitation_rural — accelerate_hpop_sanitation_rural","text":"Accelerate hpop_sanitation_rural aiming best value quintile.","code":""},{"path":"/reference/accelerate_hpop_sanitation_rural.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate hpop_sanitation_rural — accelerate_hpop_sanitation_rural","text":"","code":"accelerate_hpop_sanitation_rural(df, ...)"},{"path":"/reference/accelerate_hpop_sanitation_rural.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate hpop_sanitation_rural — accelerate_hpop_sanitation_rural","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_hpop_sanitation_rural.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate hpop_sanitation_rural — accelerate_hpop_sanitation_rural","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_hpop_sanitation_rural.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate hpop_sanitation_rural — accelerate_hpop_sanitation_rural","text":"Runs: scenario_quantile(df, n = 5, quantile_year = 2017, baseline_quantile_year = 2018, upper_limit = 99, lower_limit = 0 small_is_best = FALSE,...)","code":""},{"path":"/reference/accelerate_hpop_sanitation_urban.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate hpop_sanitation_urban — accelerate_hpop_sanitation_urban","title":"Accelerate hpop_sanitation_urban — accelerate_hpop_sanitation_urban","text":"Accelerate hpop_sanitation_urban aiming best value quintile.","code":""},{"path":"/reference/accelerate_hpop_sanitation_urban.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate hpop_sanitation_urban — accelerate_hpop_sanitation_urban","text":"","code":"accelerate_hpop_sanitation_urban(df, ...)"},{"path":"/reference/accelerate_hpop_sanitation_urban.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate hpop_sanitation_urban — accelerate_hpop_sanitation_urban","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_hpop_sanitation_urban.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate hpop_sanitation_urban — accelerate_hpop_sanitation_urban","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_hpop_sanitation_urban.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate hpop_sanitation_urban — accelerate_hpop_sanitation_urban","text":"Runs: scenario_quantile(df, n = 5, quantile_year = 2017, baseline_quantile_year = 2018, upper_limit = 99, lower_limit = 0 small_is_best = FALSE,...)","code":""},{"path":"/reference/accelerate_hpop_tobacco.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate hpop_tobacco — accelerate_hpop_tobacco","title":"Accelerate hpop_tobacco — accelerate_hpop_tobacco","text":"Accelerate hpop_tobacco picking best value business usual, halt rise 2018, custom version scenario_percent_baseline. custom scenario_percent_baseline taking similar parameters scenario_percent_baseline's percent_change = -30, baseline_year = 2010, values added start_year value, rather baseline_year values.","code":""},{"path":"/reference/accelerate_hpop_tobacco.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate hpop_tobacco — accelerate_hpop_tobacco","text":"","code":"accelerate_hpop_tobacco(   df,   ind_ids = billion_ind_codes(\"hpop\"),   scenario_col = \"scenario\",   value_col = \"value\",   start_year = 2018,   end_year = 2025,   ... )"},{"path":"/reference/accelerate_hpop_tobacco.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate hpop_tobacco — accelerate_hpop_tobacco","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. value_col Column name column indicator values. start_year Base year contribution calculation, defaults 2018. end_year End year(s) contribution calculation, defaults 2019 2025. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_hpop_tobacco.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate hpop_tobacco — accelerate_hpop_tobacco","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_hpop_tobacco.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate hpop_tobacco — accelerate_hpop_tobacco","text":"Runs: custom scenario_percent_baseline (see ). scenario_bau(df, small_is_best = TRUE,...) scenario_halt_rise(df, baseline_year= 2018, small_is_best = TRUE,...) picks best result three scenarios.","code":""},{"path":"/reference/accelerate_hwf.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate hwf — accelerate_hwf","title":"Accelerate hwf — accelerate_hwf","text":"Accelerate hwf first dividing countries two groups: countries 2018 value greater equal 2018 global median, business usual returned. countries 2018 value less 2018 global median, linear change 4.54 per year 2018 2025 returned.","code":""},{"path":"/reference/accelerate_hwf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate hwf — accelerate_hwf","text":"","code":"accelerate_hwf(   df,   ind_ids = billion_ind_codes(\"uhc\"),   scenario_col = \"scenario\",   value_col = \"value\",   start_year = 2018,   ... )"},{"path":"/reference/accelerate_hwf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate hwf — accelerate_hwf","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. value_col Column name column indicator values. start_year Base year contribution calculation, defaults 2018. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_hwf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate hwf — accelerate_hwf","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_ipv.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate ipv — accelerate_ipv","title":"Accelerate ipv — accelerate_ipv","text":"Accelerate ipv targeting 0 2030.","code":""},{"path":"/reference/accelerate_ipv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate ipv — accelerate_ipv","text":"","code":"accelerate_ipv(df, ...)"},{"path":"/reference/accelerate_ipv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate ipv — accelerate_ipv","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_ipv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate ipv — accelerate_ipv","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_ipv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate ipv — accelerate_ipv","text":"Runs: scenario_fixed_target(df, target_value = 0, target_year = 2030, small_is_best = TRUE,...),","code":""},{"path":"/reference/accelerate_itn.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate itn — accelerate_itn","title":"Accelerate itn — accelerate_itn","text":"Accelerate itn taking best business usual fixed target 80 2030.","code":""},{"path":"/reference/accelerate_itn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate itn — accelerate_itn","text":"","code":"accelerate_itn(   df,   ind_ids = billion_ind_codes(\"uhc\"),   scenario_col = \"scenario\",   ... )"},{"path":"/reference/accelerate_itn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate itn — accelerate_itn","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_itn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate itn — accelerate_itn","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_measles_routine.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate measles_routine — accelerate_measles_routine","title":"Accelerate measles_routine — accelerate_measles_routine","text":"Accelerate measles_routine aiming +20% percent change 2013 2025 using AROC.","code":""},{"path":"/reference/accelerate_measles_routine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate measles_routine — accelerate_measles_routine","text":"","code":"accelerate_measles_routine(   df,   ind_ids = billion_ind_codes(\"hep\"),   scenario_col = \"scenario\",   ... )"},{"path":"/reference/accelerate_measles_routine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate measles_routine — accelerate_measles_routine","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_measles_routine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate measles_routine — accelerate_measles_routine","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_measles_routine.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate measles_routine — accelerate_measles_routine","text":"Runs: scenario_aroc(df, aroc_type = \"percent_change\", percent_change = 20, baseline_year = 2013, target_year = 2025, small_is_best = FALSE)","code":""},{"path":"/reference/accelerate_meningitis_campaign.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate meningitis_campaign — accelerate_meningitis_campaign","title":"Accelerate meningitis_campaign — accelerate_meningitis_campaign","text":"Accelerate meningitis_campaign adding planned meningitis campaigns provided values df. value reported year country, value kept, even 2018. planned values provided denominator. planned campaigns denominator provided. case, numerator calculated taking best historical vaccination coverage achieved, available taking best historical coverage across countries.","code":""},{"path":"/reference/accelerate_meningitis_campaign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate meningitis_campaign — accelerate_meningitis_campaign","text":"","code":"accelerate_meningitis_campaign(   df,   ind_ids = billion_ind_codes(\"hep\"),   scenario_col = \"scenario\",   value_col = \"value\",   start_year = 2018,   end_year = 2025,   years_best_performance = 2015:2018,   ... )"},{"path":"/reference/accelerate_meningitis_campaign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate meningitis_campaign — accelerate_meningitis_campaign","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. value_col Column name column indicator values. start_year Base year contribution calculation, defaults 2018. end_year End year(s) contribution calculation, defaults 2019 2025. years_best_performance vector years years best performance found. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_meningitis_campaign.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate meningitis_campaign — accelerate_meningitis_campaign","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_meningitis_campaign.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate meningitis_campaign — accelerate_meningitis_campaign","text":"Planned campaigns planned campaingns targets provided technical programs based member states planifications.","code":""},{"path":"/reference/accelerate_meningitis_routine.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate meningitis_routine — accelerate_meningitis_routine","title":"Accelerate meningitis_routine — accelerate_meningitis_routine","text":"Accelerate meningitis_routine aiming 90% 2030, value >= 0 (removes cases value absent).","code":""},{"path":"/reference/accelerate_meningitis_routine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate meningitis_routine — accelerate_meningitis_routine","text":"","code":"accelerate_meningitis_routine(   df,   ind_ids = billion_ind_codes(\"hep\"),   value_col = \"value\",   scenario_col = \"scenario\",   start_year = 2018,   ... )"},{"path":"/reference/accelerate_meningitis_routine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate meningitis_routine — accelerate_meningitis_routine","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). value_col Column name column indicator values. scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. start_year Base year contribution calculation, defaults 2018. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_meningitis_routine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate meningitis_routine — accelerate_meningitis_routine","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_meningitis_routine.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate meningitis_routine — accelerate_meningitis_routine","text":"Runs: scenario_fixed_target_col(df, target_col = \"target, target_year = 2025, small_is_best = FALSE, upper_limit = 99)","code":""},{"path":"/reference/accelerate_notify.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate notify — accelerate_notify","title":"Accelerate notify — accelerate_notify","text":"Accelerate notify taking business usual.","code":""},{"path":"/reference/accelerate_notify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate notify — accelerate_notify","text":"","code":"accelerate_notify(df, ...)"},{"path":"/reference/accelerate_notify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate notify — accelerate_notify","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_notify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate notify — accelerate_notify","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_nurses.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate nurses — accelerate_nurses","title":"Accelerate nurses — accelerate_nurses","text":"Accelerate nurses using business usual scenario.","code":""},{"path":"/reference/accelerate_nurses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate nurses — accelerate_nurses","text":"","code":"accelerate_nurses(   df,   ind_ids = billion_ind_codes(\"uhc\"),   scenario_col = \"scenario\",   ... )"},{"path":"/reference/accelerate_nurses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate nurses — accelerate_nurses","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_nurses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate nurses — accelerate_nurses","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_overweight.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate overweight — accelerate_overweight","title":"Accelerate overweight — accelerate_overweight","text":"Accelerate overweight picking best value business usual AROC 3 2030.","code":""},{"path":"/reference/accelerate_overweight.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate overweight — accelerate_overweight","text":"","code":"accelerate_overweight(   df,   ind_ids = billion_ind_codes(\"hpop\"),   end_year = 2025,   scenario_col = \"scenario\",   ... )"},{"path":"/reference/accelerate_overweight.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate overweight — accelerate_overweight","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). end_year End year(s) contribution calculation, defaults 2019 2025. scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_overweight.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate overweight — accelerate_overweight","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_overweight.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate overweight — accelerate_overweight","text":"Runs: scenario_bau(df, small_is_best = TRUE,...) scenario_aroc(df, aroc_type = \"target\", target_value = 3, target_year = 2030, small_is_best = TRUE,...) picks best result two scenarios.","code":""},{"path":"/reference/accelerate_pm25.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate pm25 — accelerate_pm25","title":"Accelerate pm25 — accelerate_pm25","text":"Accelerate pm25 picking best value business usual, linear change -2% * 2018 value_col per year.","code":""},{"path":"/reference/accelerate_pm25.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate pm25 — accelerate_pm25","text":"","code":"accelerate_pm25(   df,   ind_ids = billion_ind_codes(\"hpop\"),   scenario_col = \"scenario\",   value_col = \"value\",   ... )"},{"path":"/reference/accelerate_pm25.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate pm25 — accelerate_pm25","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. value_col Column name column indicator values. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_pm25.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate pm25 — accelerate_pm25","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_pm25.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate pm25 — accelerate_pm25","text":"Runs: scenario_bau(df, small_is_best = TRUE,...) scenario_linear_change(df, linear_value = df$value_col[df$\"year\" == 2018] * -0.02, small_is_best = TRUE,...) picks best result two scenarios.","code":""},{"path":"/reference/accelerate_pneumo.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate pneumo — accelerate_pneumo","title":"Accelerate pneumo — accelerate_pneumo","text":"Accelerate pneumo taking best business usual fixed target 90 2025 countries two data points since 2000. Otherwise, business usual scenario used.","code":""},{"path":"/reference/accelerate_pneumo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate pneumo — accelerate_pneumo","text":"","code":"accelerate_pneumo(   df,   ind_ids = billion_ind_codes(\"uhc\"),   scenario_col = \"scenario\",   ... )"},{"path":"/reference/accelerate_pneumo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate pneumo — accelerate_pneumo","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_pneumo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate pneumo — accelerate_pneumo","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_polio_routine.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate polio_routine — accelerate_polio_routine","title":"Accelerate polio_routine — accelerate_polio_routine","text":"Accelerate polio_routine aiming +20% percent change 2015 2025 AROC.","code":""},{"path":"/reference/accelerate_polio_routine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate polio_routine — accelerate_polio_routine","text":"","code":"accelerate_polio_routine(   df,   ind_ids = billion_ind_codes(\"hep\"),   scenario_col = \"scenario\",   ... )"},{"path":"/reference/accelerate_polio_routine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate polio_routine — accelerate_polio_routine","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_polio_routine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate polio_routine — accelerate_polio_routine","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_polio_routine.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate polio_routine — accelerate_polio_routine","text":"Runs: scenario_aroc(df, aroc_type = \"percent_change\", percent_change = 20, baseline_year = 2015, target_year = 2025, small_is_best = FALSE)","code":""},{"path":"/reference/accelerate_respond.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate respond — accelerate_respond","title":"Accelerate respond — accelerate_respond","text":"Accelerate respond taking business usual.","code":""},{"path":"/reference/accelerate_respond.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate respond — accelerate_respond","text":"","code":"accelerate_respond(df, ...)"},{"path":"/reference/accelerate_respond.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate respond — accelerate_respond","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_respond.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate respond — accelerate_respond","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_road.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate road — accelerate_road","title":"Accelerate road — accelerate_road","text":"Accelerate road picking best results business usual, -50 percent 2020 2030.","code":""},{"path":"/reference/accelerate_road.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate road — accelerate_road","text":"","code":"accelerate_road(   df,   ind_ids = billion_ind_codes(\"hpop\"),   scenario_col = \"scenario\",   ... )"},{"path":"/reference/accelerate_road.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate road — accelerate_road","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_road.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate road — accelerate_road","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_road.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate road — accelerate_road","text":"Runs: scenario_bau(df, small_is_best = TRUE,...), scenario_percent_baseline(df, percent_change = -50, baseline_year = 2020, target_year = 2030, small_is_best = TRUE, ...) picks best result two scenarios.","code":""},{"path":"/reference/accelerate_stunting.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate stunting — accelerate_stunting","title":"Accelerate stunting — accelerate_stunting","text":"Accelerate stunting picking best results business usual, halt downwards trend, AROC -50% change 2012 2030.","code":""},{"path":"/reference/accelerate_stunting.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate stunting — accelerate_stunting","text":"","code":"accelerate_stunting(   df,   ind_ids = billion_ind_codes(\"hpop\"),   scenario_col = \"scenario\",   ... )"},{"path":"/reference/accelerate_stunting.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate stunting — accelerate_stunting","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_stunting.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate stunting — accelerate_stunting","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_stunting.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate stunting — accelerate_stunting","text":"Runs: scenario_bau(df, small_is_best = TRUE,...), scenario_aroc(df, aroc_type = \"percent_change\", percent_change = -50, baseline_year = 2012, target_year = 2030, small_is_best = TRUE, ...) scenario_halt_rise(df, small_is_best = TRUE,...) picks best result three scenarios.","code":""},{"path":"/reference/accelerate_suicide.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate suicide — accelerate_suicide","title":"Accelerate suicide — accelerate_suicide","text":"Accelerate suicide picking best results business usual, halt downwards trend, -33.333% points 2015 2030.","code":""},{"path":"/reference/accelerate_suicide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate suicide — accelerate_suicide","text":"","code":"accelerate_suicide(   df,   ind_ids = billion_ind_codes(\"hpop\"),   scenario_col = \"scenario\",   ... )"},{"path":"/reference/accelerate_suicide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate suicide — accelerate_suicide","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_suicide.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate suicide — accelerate_suicide","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_suicide.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate suicide — accelerate_suicide","text":"Runs: scenario_bau(df, small_is_best = TRUE,...), scenario_percent_baseline(df, percent_change = -33.333, baseline_year = 2015, target_year = 2030, small_is_best = TRUE, ...) scenario_halt_rise(df, small_is_best = TRUE,...) picks best result three scenarios.","code":""},{"path":"/reference/accelerate_tb.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate tb — accelerate_tb","title":"Accelerate tb — accelerate_tb","text":"Accelerate tb using fixed target 90 2025.","code":""},{"path":"/reference/accelerate_tb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate tb — accelerate_tb","text":"","code":"accelerate_tb(   df,   ind_ids = billion_ind_codes(\"uhc\"),   scenario_col = \"scenario\",   ... )"},{"path":"/reference/accelerate_tb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate tb — accelerate_tb","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_tb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate tb — accelerate_tb","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_transfats.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate transfats — accelerate_transfats","title":"Accelerate transfats — accelerate_transfats","text":"Accelerate transfats targeting 100 2025.","code":""},{"path":"/reference/accelerate_transfats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate transfats — accelerate_transfats","text":"","code":"accelerate_transfats(   df,   ind_ids = billion_ind_codes(\"hpop\"),   scenario_col = \"scenario\",   ... )"},{"path":"/reference/accelerate_transfats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate transfats — accelerate_transfats","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_transfats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate transfats — accelerate_transfats","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_transfats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate transfats — accelerate_transfats","text":"Runs: scenario_fixed_target(df, target_value = 100, target_year = 2025, small_is_best = TRUE,...),","code":""},{"path":"/reference/accelerate_uhc_sanitation.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate uhc_sanitation — accelerate_uhc_sanitation","title":"Accelerate uhc_sanitation — accelerate_uhc_sanitation","text":"Accelerate uhc_sanitation encouraging country reach mean (upper threshold) quantile belongs 2017, n = 5 quantiles. Lower upper limits 0 99, respectively, also imposed results.","code":""},{"path":"/reference/accelerate_uhc_sanitation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate uhc_sanitation — accelerate_uhc_sanitation","text":"","code":"accelerate_uhc_sanitation(   df,   ind_ids = billion_ind_codes(\"uhc\"),   scenario_col = \"scenario\",   ... )"},{"path":"/reference/accelerate_uhc_sanitation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate uhc_sanitation — accelerate_uhc_sanitation","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_uhc_sanitation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate uhc_sanitation — accelerate_uhc_sanitation","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_uhc_tobacco.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate uhc_tobacco — accelerate_uhc_tobacco","title":"Accelerate uhc_tobacco — accelerate_uhc_tobacco","text":"Accelerate uhc_tobacco first dividing countries two groups: countries without routine (.e., estimated) data, business usual returned countries routine (.e., estimated) data, best business usual percent decrease 30% 2010 2025 returned. scenarios run crude tobacco usage values, converted age-standardised equivalents using approximation.","code":""},{"path":"/reference/accelerate_uhc_tobacco.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate uhc_tobacco — accelerate_uhc_tobacco","text":"","code":"accelerate_uhc_tobacco(   df,   ind_ids = billion_ind_codes(\"uhc\"),   scenario_col = \"scenario\",   value_col = \"value\",   end_year = 2025,   start_year = 2018,   ... )"},{"path":"/reference/accelerate_uhc_tobacco.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate uhc_tobacco — accelerate_uhc_tobacco","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. value_col Column name column indicator values. end_year End year(s) contribution calculation, defaults 2019 2025. start_year Base year contribution calculation, defaults 2018. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_uhc_tobacco.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate uhc_tobacco — accelerate_uhc_tobacco","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_wasting.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate wasting — accelerate_wasting","title":"Accelerate wasting — accelerate_wasting","text":"Accelerate wasting picking best results business usual, halt downwards trend 2018, AROC 3% 2030.","code":""},{"path":"/reference/accelerate_wasting.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate wasting — accelerate_wasting","text":"","code":"accelerate_wasting(   df,   ind_ids = billion_ind_codes(\"hpop\"),   end_year = 2025,   scenario_col = \"scenario\",   ... )"},{"path":"/reference/accelerate_wasting.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate wasting — accelerate_wasting","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). end_year End year(s) contribution calculation, defaults 2019 2025. scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_wasting.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate wasting — accelerate_wasting","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_wasting.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate wasting — accelerate_wasting","text":"Runs: scenario_bau(df, small_is_best = TRUE,...) scenario_halt_rise(df, small_is_best = TRUE,...) scenario_aroc(df, aroc_type = \"target\", target_value = 3, target_year = 2030, small_is_best = TRUE,...) picks best result three scenarios.","code":""},{"path":"/reference/accelerate_water.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate water — accelerate_water","title":"Accelerate water — accelerate_water","text":"Accelerate water aiming best value quintile.","code":""},{"path":"/reference/accelerate_water.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate water — accelerate_water","text":"","code":"accelerate_water(   df,   ind_ids = billion_ind_codes(\"hpop\"),   scenario_col = \"scenario\",   ... )"},{"path":"/reference/accelerate_water.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate water — accelerate_water","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_water.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate water — accelerate_water","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_water.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate water — accelerate_water","text":"Runs: scenario_quantile(df, n = 5, quantile_year = 2017, baseline_quantile_year = 2018, upper_limit = 99, lower_limit = 0 small_is_best = FALSE,...)","code":""},{"path":"/reference/accelerate_water_rural.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate water_rural — accelerate_water_rural","title":"Accelerate water_rural — accelerate_water_rural","text":"Accelerate water_rural aiming best value quintile.","code":""},{"path":"/reference/accelerate_water_rural.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate water_rural — accelerate_water_rural","text":"","code":"accelerate_water_rural(df, ...)"},{"path":"/reference/accelerate_water_rural.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate water_rural — accelerate_water_rural","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_water_rural.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate water_rural — accelerate_water_rural","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_water_rural.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate water_rural — accelerate_water_rural","text":"Runs: scenario_quantile(df, n = 5, quantile_year = 2017, baseline_quantile_year = 2018, upper_limit = 99, lower_limit = 0 small_is_best = FALSE,...)","code":""},{"path":"/reference/accelerate_water_urban.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate water_urban — accelerate_water_urban","title":"Accelerate water_urban — accelerate_water_urban","text":"Accelerate water_urban aiming best value quintile.","code":""},{"path":"/reference/accelerate_water_urban.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate water_urban — accelerate_water_urban","text":"","code":"accelerate_water_urban(df, ...)"},{"path":"/reference/accelerate_water_urban.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate water_urban — accelerate_water_urban","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_water_urban.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate water_urban — accelerate_water_urban","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_water_urban.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate water_urban — accelerate_water_urban","text":"Runs: scenario_quantile(df, n = 5, quantile_year = 2017, baseline_quantile_year = 2018, upper_limit = 99, lower_limit = 0 small_is_best = FALSE,...)","code":""},{"path":"/reference/accelerate_yellow_fever_campaign.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate yellow_fever_campaign — accelerate_yellow_fever_campaign","title":"Accelerate yellow_fever_campaign — accelerate_yellow_fever_campaign","text":"Accelerate yellow_fever_campaign adding planned yellow fever campaigns provided values df. value reported year country, value kept, even 2018. planned values provided denominator. planned campaigns denominator provided. case, numerator calculated taking best historical vaccination coverage achieved, available taking best historical coverage across countries 2018.","code":""},{"path":"/reference/accelerate_yellow_fever_campaign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate yellow_fever_campaign — accelerate_yellow_fever_campaign","text":"","code":"accelerate_yellow_fever_campaign(   df,   ind_ids = billion_ind_codes(\"hep\"),   scenario_col = \"scenario\",   value_col = \"value\",   start_year = 2018,   end_year = 2025,   years_best_performance = 2015:2018,   ... )"},{"path":"/reference/accelerate_yellow_fever_campaign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate yellow_fever_campaign — accelerate_yellow_fever_campaign","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. value_col Column name column indicator values. start_year Base year contribution calculation, defaults 2018. end_year End year(s) contribution calculation, defaults 2019 2025. years_best_performance vector years years best performance found. ... additional parameters pass recycle_data","code":""},{"path":"/reference/accelerate_yellow_fever_campaign.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate yellow_fever_campaign — accelerate_yellow_fever_campaign","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_yellow_fever_campaign.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate yellow_fever_campaign — accelerate_yellow_fever_campaign","text":"Planned campaigns planned campaingns targets provided technical programs based member states planifications.","code":""},{"path":"/reference/accelerate_yellow_fever_routine.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate yellow_fever_routine — accelerate_yellow_fever_routine","title":"Accelerate yellow_fever_routine — accelerate_yellow_fever_routine","text":"Accelerate yellow_fever_routine aiming +20% percent change 2015 2025 AROC.","code":""},{"path":"/reference/accelerate_yellow_fever_routine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate yellow_fever_routine — accelerate_yellow_fever_routine","text":"","code":"accelerate_yellow_fever_routine(df, ...)"},{"path":"/reference/accelerate_yellow_fever_routine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate yellow_fever_routine — accelerate_yellow_fever_routine","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ... additional parameters passed scenario function","code":""},{"path":"/reference/accelerate_yellow_fever_routine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate yellow_fever_routine — accelerate_yellow_fever_routine","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/accelerate_yellow_fever_routine.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate yellow_fever_routine — accelerate_yellow_fever_routine","text":"Runs: scenario_aroc(df, aroc_type = \"percent_change\", percent_change = 20, baseline_year = 2015, target_year = 2025, small_is_best = FALSE)","code":""},{"path":"/reference/add_hpop_populations.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Population Figures for HPOP Billion — add_hpop_populations","title":"Add Population Figures for HPOP Billion — add_hpop_populations","text":"add_hpop_populations() adds relevant populations HPOP Billion indicator country, can used calculate indicator-level contributions HPOP Billion. column specified population generated filled relevant populations country indicator. column already exists, missing values replaced function.","code":""},{"path":"/reference/add_hpop_populations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Population Figures for HPOP Billion — add_hpop_populations","text":"","code":"add_hpop_populations(   df,   population = \"population\",   pop_year = 2025,   ind_ids = billion_ind_codes(\"hpop\") )"},{"path":"/reference/add_hpop_populations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Population Figures for HPOP Billion — add_hpop_populations","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. population Column name column create population figures. pop_year Year used pull HPOP populations, defaults 2025. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes().","code":""},{"path":"/reference/add_hpop_populations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Population Figures for HPOP Billion — add_hpop_populations","text":"Data frame long format.","code":""},{"path":"/reference/add_hpop_populations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add Population Figures for HPOP Billion — add_hpop_populations","text":"details HPOP Billion calculation process function ties rest, see vignette: vignette(\"hpop\", package = \"billionaiRe\")","code":""},{"path":"/reference/add_missing_xmart_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Add missing rows for xMart upload — add_missing_xmart_rows","title":"Add missing rows for xMart upload — add_missing_xmart_rows","text":"Compares rows given data frame existing xMart data. data frame missing combinations c(iso3, ind, year) found xMart, appends rows data frame,NA values value, upper, lower, source, type other_detail.","code":""},{"path":"/reference/add_missing_xmart_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add missing rows for xMart upload — add_missing_xmart_rows","text":"","code":"add_missing_xmart_rows(df, billion, ind_code, projected)"},{"path":"/reference/add_missing_xmart_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add missing rows for xMart upload — add_missing_xmart_rows","text":"df data frame billion Billion indicator belongs ind_code GPW13 code indicator(s) projected boolean value indicating indicator already projected technical programme","code":""},{"path":"/reference/add_missing_xmart_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add missing rows for xMart upload — add_missing_xmart_rows","text":"data frame","code":""},{"path":"/reference/add_scenario.html","id":null,"dir":"Reference","previous_headings":"","what":"Add scenario to data frame — add_scenario","title":"Add scenario to data frame — add_scenario","text":"add_scenario wraps around add_scenario_indicator add scenario specified scenario_function valid billionaiRe indicators present df.","code":""},{"path":"/reference/add_scenario.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add scenario to data frame — add_scenario","text":"","code":"add_scenario(   df,   scenario_function = c(\"aroc\", \"halt_rise\", \"percent_baseline\", \"linear_change\",     \"linear_change_col\", \"quantile\", \"best_in_region\", \"fixed_target\",     \"fixed_target_col\", \"bau\", \"accelerate\", \"sdg\", \"covid_rapid_return\",     \"covid_delayed_return\", \"covid_sustained_disruption\", \"return_previous_trajectory\"),   ind_ids = billion_ind_codes(\"all\"),   start_year = 2018,   end_year = 2025,   ... )"},{"path":"/reference/add_scenario.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add scenario to data frame — add_scenario","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. scenario_function character identifier scenario use. Can following: aroc: calls scenario_aroc halt_rise: calls scenario_halt_rise percent_baseline: calls scenario_percent_baseline linear_change: calls scenario_linear_change linear_change_col: calls scenario_linear_change_col quantile: calls scenario_quantile best_in_region: calls scenario_best_in_region fixed_target: calls scenario_fixed_target fixed_target_col: calls scenario_fixed_target_col bau: calls scenario_bau accelerate: calls indicator accelerate function. sdg: calls Sustainable Development Goals (SDG) acceleration function. covid_rapid_return calls scenario_covid_rapid_return covid_delayed_return calls scenario_covid_delayed_return covid_sustained_disruption calls scenario_covid_sustained_disruption return_previous_trajectory calls scenario_return_previous_trajectory ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). start_year Base year contribution calculation, defaults 2018. end_year End year(s) contribution calculation, defaults 2019 2025. ... additional arguments passed add_scenario_indicator","code":""},{"path":"/reference/add_scenario.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add scenario to data frame — add_scenario","text":"data frame additional rows scenario values.","code":""},{"path":"/reference/add_scenario_indicator.html","id":null,"dir":"Reference","previous_headings":"","what":"Add scenario for a specific indicator — add_scenario_indicator","title":"Add scenario for a specific indicator — add_scenario_indicator","text":"add_scenario_indicator gets right add_scenario_ function indicator specified adds scenario.","code":""},{"path":"/reference/add_scenario_indicator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add scenario for a specific indicator — add_scenario_indicator","text":"","code":"add_scenario_indicator(   df,   scenario_function = c(\"aroc\", \"halt_rise\", \"percent_baseline\", \"linear_change\",     \"linear_change_col\", \"quantile\", \"best_in_region\", \"fixed_target\",     \"fixed_target_col\", \"bau\", \"accelerate\", \"sdg\", \"covid_rapid_return\",     \"covid_sustained_disruption\", \"covid_delayed_return\", \"covid_never_return\",     \"return_previous_trajectory\"),   indicator,   ind_ids = billion_ind_codes(\"all\"),   scenario_col = \"scenario\",   ... )"},{"path":"/reference/add_scenario_indicator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add scenario for a specific indicator — add_scenario_indicator","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. scenario_function character identifier scenario use. Can following: aroc: calls scenario_aroc halt_rise: calls scenario_halt_rise percent_baseline: calls scenario_percent_baseline linear_change: calls scenario_linear_change linear_change_col: calls scenario_linear_change_col quantile: calls scenario_quantile best_in_region: calls scenario_best_in_region fixed_target: calls scenario_fixed_target fixed_target_col: calls scenario_fixed_target_col bau: calls scenario_bau accelerate: calls indicator accelerate function. sdg: calls Sustainable Development Goals (SDG) acceleration function. covid_rapid_return calls scenario_covid_rapid_return covid_delayed_return calls scenario_covid_delayed_return covid_sustained_disruption calls scenario_covid_sustained_disruption return_previous_trajectory calls scenario_return_previous_trajectory indicator name indicator passed scenario_function ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed add_scenario_indicator function (e.g. add_scenario_adult_obese).","code":""},{"path":"/reference/assert_arg_exists.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert that argument exists — assert_arg_exists","title":"Assert that argument exists — assert_arg_exists","text":"Check given argument exists NA NULL. Useful functions argument required rest code work.","code":""},{"path":"/reference/assert_arg_exists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert that argument exists — assert_arg_exists","text":"","code":"assert_arg_exists(   x,   error_template = \"The %s argument is required and cannot be NA or NULL\" )"},{"path":"/reference/assert_arg_exists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert that argument exists — assert_arg_exists","text":"x argument check error_template template generating error message. Used input sprintf() call. Must include %s, corresponds input x.","code":""},{"path":"/reference/assert_class.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert that an object is (or is not) of a given (range of) class(es) — assert_class","title":"Assert that an object is (or is not) of a given (range of) class(es) — assert_class","text":"Assert object () given (range ) class(es)","code":""},{"path":"/reference/assert_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert that an object is (or is not) of a given (range of) class(es) — assert_class","text":"","code":"assert_class(x, expected, reverse = FALSE, how = c(\"any\", \"all\"))"},{"path":"/reference/assert_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert that an object is (or is not) of a given (range of) class(es) — assert_class","text":"x input object expected (character) expected class(es) x reverse Invert test (.e., class x ) One \"\" \"\". expected vector, = \"\", test passed x inherits elements expected = \"\", test passed x inherits elements expected.","code":""},{"path":"/reference/assert_col_paired_with.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert that paired columns have values — assert_col_paired_with","title":"Assert that paired columns have values — assert_col_paired_with","text":"Ensures rows given column value (.e., NA), columns rows also value (.e., NA). Useful enforcing dependencies columns.","code":""},{"path":"/reference/assert_col_paired_with.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert that paired columns have values — assert_col_paired_with","text":"","code":"assert_col_paired_with(df, col_name, pair_cols)"},{"path":"/reference/assert_col_paired_with.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert that paired columns have values — assert_col_paired_with","text":"df data frame col_name (string) name column data frame pair_cols (character vectors) names columns paired col_name column","code":""},{"path":"/reference/assert_col_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert that the column types of a data frame are as expected — assert_col_types","title":"Assert that the column types of a data frame are as expected — assert_col_types","text":"Assert column types data frame expected","code":""},{"path":"/reference/assert_col_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert that the column types of a data frame are as expected — assert_col_types","text":"","code":"assert_col_types(df, expected)"},{"path":"/reference/assert_col_types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert that the column types of a data frame are as expected — assert_col_types","text":"df data frame expected named vector, whose names names columns (.e., names(df) == names(expected)) whose elements expected class/type column.","code":""},{"path":"/reference/assert_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert that columns exist in a data frame — assert_columns","title":"Assert that columns exist in a data frame — assert_columns","text":"Assert columns exist data frame","code":""},{"path":"/reference/assert_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert that columns exist in a data frame — assert_columns","text":"","code":"assert_columns(df, ...)"},{"path":"/reference/assert_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert that columns exist in a data frame — assert_columns","text":"df Data frame ... Column names","code":""},{"path":"/reference/assert_data_calculation_hep.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert presence of minimum HEP data — assert_data_calculation_hep","title":"Assert presence of minimum HEP data — assert_data_calculation_hep","text":"assert_data_calculation_hep asserts minimum data required run HEP calculations present. means checking surviving_infants present years routine prevent indicators present, espar start_year NA. Otherwise, errors returned calculation functions.","code":""},{"path":"/reference/assert_data_calculation_hep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert presence of minimum HEP data — assert_data_calculation_hep","text":"","code":"assert_data_calculation_hep(   df,   value_col = \"value\",   scenario_col = NULL,   start_year = 2018,   end_year = 2025,   ind_ids = billion_ind_codes(\"hep\") )"},{"path":"/reference/assert_data_calculation_hep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert presence of minimum HEP data — assert_data_calculation_hep","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. value_col Column name column indicator values. scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. start_year Base year contribution calculation, defaults 2018. end_year End year(s) contribution calculation, defaults 2019 2025. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes().","code":""},{"path":"/reference/assert_data_calculation_hep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assert presence of minimum HEP data — assert_data_calculation_hep","text":"Data frame long format.","code":""},{"path":"/reference/assert_data_calculation_hep.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Assert presence of minimum HEP data — assert_data_calculation_hep","text":"function returns warnings espar detect_respond start_year end_year present data frame. values significantly impact billion calculations hep_idx include . Warnings also returned country (scenario provided) NAs.","code":""},{"path":"/reference/assert_data_calculation_hpop.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert presence of minimum HPOP data — assert_data_calculation_hpop","title":"Assert presence of minimum HPOP data — assert_data_calculation_hpop","text":"Assert minimum data required run HPOP calculations present.","code":""},{"path":"/reference/assert_data_calculation_hpop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert presence of minimum HPOP data — assert_data_calculation_hpop","text":"","code":"assert_data_calculation_hpop(df, value_col = \"value\", scenario_col = NULL)"},{"path":"/reference/assert_data_calculation_hpop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert presence of minimum HPOP data — assert_data_calculation_hpop","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. value_col Column name column indicator values. scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format.","code":""},{"path":"/reference/assert_data_calculation_hpop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assert presence of minimum HPOP data — assert_data_calculation_hpop","text":"Data frame long format.","code":""},{"path":"/reference/assert_data_calculation_hpop.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Assert presence of minimum HPOP data — assert_data_calculation_hpop","text":"function returns warnings start_year end_year present year column data frame. values significantly impact billion calculations hpop_healthier return 0. Warnings also returned country (scenario provided) NAs.","code":""},{"path":"/reference/assert_data_calculation_uhc.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert minimum data for UHC calculations — assert_data_calculation_uhc","title":"Assert minimum data for UHC calculations — assert_data_calculation_uhc","text":"assert_data_calculation_uhc asserts minimum data required run UHC calculations present.","code":""},{"path":"/reference/assert_data_calculation_uhc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert minimum data for UHC calculations — assert_data_calculation_uhc","text":"","code":"assert_data_calculation_uhc(   df,   value_col = \"value\",   scenario_col = NULL,   start_year = 2018,   end_year = 2025,   ind_ids = billion_ind_codes(\"uhc\") )"},{"path":"/reference/assert_data_calculation_uhc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert minimum data for UHC calculations — assert_data_calculation_uhc","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. value_col Column name column indicator values. scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. start_year Base year contribution calculation, defaults 2018. end_year End year(s) contribution calculation, defaults 2019 2025. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes().","code":""},{"path":"/reference/assert_data_calculation_uhc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assert minimum data for UHC calculations — assert_data_calculation_uhc","text":"Data frame long format.","code":""},{"path":"/reference/assert_data_calculation_uhc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Assert minimum data for UHC calculations — assert_data_calculation_uhc","text":"function returns warnings start_year end_year present year column data frame. values significantly impact billion calculations hpop_healthier return 0. Warnings also returned country (scenario provided) NAs.","code":""},{"path":"/reference/assert_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert that df is a data frame — assert_df","title":"Assert that df is a data frame — assert_df","text":"Assert df data frame","code":""},{"path":"/reference/assert_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert that df is a data frame — assert_df","text":"","code":"assert_df(df)"},{"path":"/reference/assert_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert that df is a data frame — assert_df","text":"df Supposed data frame","code":""},{"path":"/reference/assert_distinct_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert unique rows by key columns — assert_distinct_rows","title":"Assert unique rows by key columns — assert_distinct_rows","text":"Ensures rows given data frame unique combination set key columns.","code":""},{"path":"/reference/assert_distinct_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert unique rows by key columns — assert_distinct_rows","text":"","code":"assert_distinct_rows(df, key_cols)"},{"path":"/reference/assert_distinct_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert unique rows by key columns — assert_distinct_rows","text":"df data frame key_cols (character vector) names key columns","code":""},{"path":"/reference/assert_equals.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert that x and y are (or are not) equal/identical — assert_equals","title":"Assert that x and y are (or are not) equal/identical — assert_equals","text":"Assert x y () equal/identical","code":""},{"path":"/reference/assert_equals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert that x and y are (or are not) equal/identical — assert_equals","text":"","code":"assert_equals(x, y, identical = FALSE, reverse = FALSE, msg_suffix = NULL)"},{"path":"/reference/assert_equals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert that x and y are (or are not) equal/identical — assert_equals","text":"x (vector) y (vector) identical (logical) whether use identical() function test reverse (logical) whether reverse condition (.e., two vectors equal/identical) msg_suffix (string) string appended end error message","code":""},{"path":"/reference/assert_fileext.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert that a file's extension is one of a few options — assert_fileext","title":"Assert that a file's extension is one of a few options — assert_fileext","text":"Assert file's extension one options","code":""},{"path":"/reference/assert_fileext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert that a file's extension is one of a few options — assert_fileext","text":"","code":"assert_fileext(file_names, valid_exts)"},{"path":"/reference/assert_fileext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert that a file's extension is one of a few options — assert_fileext","text":"file_names (character vector) file names. valid_exts (character vector) list valid extensions.","code":""},{"path":"/reference/assert_has_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert that an object has names — assert_has_names","title":"Assert that an object has names — assert_has_names","text":"Assert object names","code":""},{"path":"/reference/assert_has_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert that an object has names — assert_has_names","text":"","code":"assert_has_names(x)"},{"path":"/reference/assert_has_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert that an object has names — assert_has_names","text":"x object","code":""},{"path":"/reference/assert_homogeneous_col.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert that the data frame only has one value (is homogeneous) for a given column — assert_homogeneous_col","title":"Assert that the data frame only has one value (is homogeneous) for a given column — assert_homogeneous_col","text":"Assert data frame one value (homogeneous) given column","code":""},{"path":"/reference/assert_homogeneous_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert that the data frame only has one value (is homogeneous) for a given column — assert_homogeneous_col","text":"","code":"assert_homogeneous_col(df, col_name)"},{"path":"/reference/assert_homogeneous_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert that the data frame only has one value (is homogeneous) for a given column — assert_homogeneous_col","text":"df input data frame col_name string specifying column check","code":""},{"path":"/reference/assert_in_list_or_null.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert that x is in list or is NULL — assert_in_list_or_null","title":"Assert that x is in list or is NULL — assert_in_list_or_null","text":"Assert x list NULL","code":""},{"path":"/reference/assert_in_list_or_null.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert that x is in list or is NULL — assert_in_list_or_null","text":"","code":"assert_in_list_or_null(x, list)"},{"path":"/reference/assert_in_list_or_null.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert that x is in list or is NULL — assert_in_list_or_null","text":"x value checked list list values checked ","code":""},{"path":"/reference/assert_ind_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert that ind_ids is the correct named vector — assert_ind_ids","title":"Assert that ind_ids is the correct named vector — assert_ind_ids","text":"Assert ind_ids correct named vector","code":""},{"path":"/reference/assert_ind_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert that ind_ids is the correct named vector — assert_ind_ids","text":"","code":"assert_ind_ids(ind_ids, billion)"},{"path":"/reference/assert_ind_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert that ind_ids is the correct named vector — assert_ind_ids","text":"ind_ids Indicator ids check billion Billion checking ","code":""},{"path":"/reference/assert_ind_start_end_year.html","id":null,"dir":"Reference","previous_headings":"","what":"Asserts indicators have values at start and end year — assert_ind_start_end_year","title":"Asserts indicators have values at start and end year — assert_ind_start_end_year","text":"Asserts values start end year indicators provided ind_ids, iso3 (scenarios provided).","code":""},{"path":"/reference/assert_ind_start_end_year.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Asserts indicators have values at start and end year — assert_ind_start_end_year","text":"","code":"assert_ind_start_end_year(   df,   value_col = \"value\",   start_year = 2018,   end_year = 2020,   ind_ids,   scenario_col = \"scenario\" )"},{"path":"/reference/assert_ind_start_end_year.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Asserts indicators have values at start and end year — assert_ind_start_end_year","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. value_col Column name column indicator values. start_year Base year contribution calculation, defaults 2018. end_year End year(s) contribution calculation, defaults 2019 2025. ind_ids named list indicators checked values. Follows similar structure billion_ind_codes indicator lists. scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format.","code":""},{"path":"/reference/assert_iso3_not_empty.html","id":null,"dir":"Reference","previous_headings":"","what":"Asserts that iso3 (and scenario if provided) is not only NAs — assert_iso3_not_empty","title":"Asserts that iso3 (and scenario if provided) is not only NAs — assert_iso3_not_empty","text":"Asserts iso3 (scenario provided) NAs","code":""},{"path":"/reference/assert_iso3_not_empty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Asserts that iso3 (and scenario if provided) is not only NAs — assert_iso3_not_empty","text":"","code":"assert_iso3_not_empty(df, scenario_col = NULL, value_col = \"value\")"},{"path":"/reference/assert_iso3_not_empty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Asserts that iso3 (and scenario if provided) is not only NAs — assert_iso3_not_empty","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. value_col Column name column indicator values.","code":""},{"path":"/reference/assert_length.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert that a vector is of length n — assert_length","title":"Assert that a vector is of length n — assert_length","text":"Assert vector length n","code":""},{"path":"/reference/assert_length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert that a vector is of length n — assert_length","text":"","code":"assert_length(x, n)"},{"path":"/reference/assert_length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert that a vector is of length n — assert_length","text":"x (vector) n (integer) expected length x","code":""},{"path":"/reference/assert_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert that df is a list — assert_list","title":"Assert that df is a list — assert_list","text":"Assert df list","code":""},{"path":"/reference/assert_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert that df is a list — assert_list","text":"","code":"assert_list(df)"},{"path":"/reference/assert_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert that df is a list — assert_list","text":"df Supposed list","code":""},{"path":"/reference/assert_min_length.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert that a vector has a minimum length n — assert_min_length","title":"Assert that a vector has a minimum length n — assert_min_length","text":"Assert vector minimum length n","code":""},{"path":"/reference/assert_min_length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert that a vector has a minimum length n — assert_min_length","text":"","code":"assert_min_length(x, n)"},{"path":"/reference/assert_min_length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert that a vector has a minimum length n — assert_min_length","text":"x (vector) n (integer) minimum allowed size vector","code":""},{"path":"/reference/assert_numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert that the given data frame columns are numeric — assert_numeric","title":"Assert that the given data frame columns are numeric — assert_numeric","text":"Assert given data frame columns numeric","code":""},{"path":"/reference/assert_numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert that the given data frame columns are numeric — assert_numeric","text":"","code":"assert_numeric(df, ...)"},{"path":"/reference/assert_numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert that the given data frame columns are numeric — assert_numeric","text":"df Data frame ... Column names","code":""},{"path":"/reference/assert_same_length.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert that two or more vectors are the same length — assert_same_length","title":"Assert that two or more vectors are the same length — assert_same_length","text":"Assert two vectors length","code":""},{"path":"/reference/assert_same_length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert that two or more vectors are the same length — assert_same_length","text":"","code":"assert_same_length(..., recycle = FALSE, remove_null = FALSE)"},{"path":"/reference/assert_same_length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert that two or more vectors are the same length — assert_same_length","text":"... Two vectors length. recycle (logical) Whether vectors length one can recycled match length vectors. remove_null (logical) whether NULL values removed inputs comparison","code":""},{"path":"/reference/assert_start_end_year.html","id":null,"dir":"Reference","previous_headings":"","what":"Asserts start and end year are present — assert_start_end_year","title":"Asserts start and end year are present — assert_start_end_year","text":"Asserts values start end year iso3 (scenarios provided).","code":""},{"path":"/reference/assert_start_end_year.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Asserts start and end year are present — assert_start_end_year","text":"","code":"assert_start_end_year(   df,   value_col = \"value\",   start_year = 2018,   end_year = 2025,   scenario_col = \"scenario\" )"},{"path":"/reference/assert_start_end_year.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Asserts start and end year are present — assert_start_end_year","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. value_col Column name column indicator values. start_year Base year contribution calculation, defaults 2018. end_year End year(s) contribution calculation, defaults 2019 2025. scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format.","code":""},{"path":"/reference/assert_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert that x is a character vector of length n — assert_string","title":"Assert that x is a character vector of length n — assert_string","text":"Assert x character vector length n","code":""},{"path":"/reference/assert_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert that x is a character vector of length n — assert_string","text":"","code":"assert_string(x, n)"},{"path":"/reference/assert_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert that x is a character vector of length n — assert_string","text":"x Supposed string test n Length test","code":""},{"path":"/reference/assert_strings.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert that arguments passed in are length 1 character vectors — assert_strings","title":"Assert that arguments passed in are length 1 character vectors — assert_strings","text":"Assert arguments passed length 1 character vectors","code":""},{"path":"/reference/assert_strings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert that arguments passed in are length 1 character vectors — assert_strings","text":"","code":"assert_strings(...)"},{"path":"/reference/assert_strings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert that arguments passed in are length 1 character vectors — assert_strings","text":"... Character vectors check","code":""},{"path":"/reference/assert_style_param.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert that params are valid formal argument to openxlsx::createStyle() — assert_style_param","title":"Assert that params are valid formal argument to openxlsx::createStyle() — assert_style_param","text":"Assert params valid formal argument openxlsx::createStyle()","code":""},{"path":"/reference/assert_style_param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert that params are valid formal argument to openxlsx::createStyle() — assert_style_param","text":"","code":"assert_style_param(...)"},{"path":"/reference/assert_style_param.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert that params are valid formal argument to openxlsx::createStyle() — assert_style_param","text":"... character vector parameters openxlsx::createStyle()","code":""},{"path":"/reference/assert_timestamp.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert that x is a valid timestamp string — assert_timestamp","title":"Assert that x is a valid timestamp string — assert_timestamp","text":"Assert x valid timestamp string","code":""},{"path":"/reference/assert_timestamp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert that x is a valid timestamp string — assert_timestamp","text":"","code":"assert_timestamp(x)"},{"path":"/reference/assert_timestamp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert that x is a valid timestamp string — assert_timestamp","text":"x (string)","code":""},{"path":"/reference/assert_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert that an object is (or is not) of a given (range of) type(s) — assert_type","title":"Assert that an object is (or is not) of a given (range of) type(s) — assert_type","text":"Assert object () given (range ) type(s)","code":""},{"path":"/reference/assert_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert that an object is (or is not) of a given (range of) type(s) — assert_type","text":"","code":"assert_type(x, expected, reverse = FALSE)"},{"path":"/reference/assert_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert that an object is (or is not) of a given (range of) type(s) — assert_type","text":"x input object expected (character) expected type(s) x reverse Invert test (.e., type x )","code":""},{"path":"/reference/assert_unique_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert unique rows of df — assert_unique_rows","title":"Assert unique rows of df — assert_unique_rows","text":"Makes sure distinct rows ind, iso3, year, scenario used.","code":""},{"path":"/reference/assert_unique_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert unique rows of df — assert_unique_rows","text":"","code":"assert_unique_rows(df, scenario_col = NULL, ind_ids)"},{"path":"/reference/assert_unique_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert unique rows of df — assert_unique_rows","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes().","code":""},{"path":"/reference/assert_unique_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert that the elements of the vector are unique — assert_unique_vector","title":"Assert that the elements of the vector are unique — assert_unique_vector","text":"Assert elements vector unique","code":""},{"path":"/reference/assert_unique_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert that the elements of the vector are unique — assert_unique_vector","text":"","code":"assert_unique_vector(x)"},{"path":"/reference/assert_unique_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert that the elements of the vector are unique — assert_unique_vector","text":"x (vector)","code":""},{"path":"/reference/assert_who_iso3.html","id":null,"dir":"Reference","previous_headings":"","what":"Asserts that provided ISO is valid — assert_who_iso3","title":"Asserts that provided ISO is valid — assert_who_iso3","text":"Checks provided ISO code valid ISO3 code member state, using whoville::is_who_member().","code":""},{"path":"/reference/assert_who_iso3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Asserts that provided ISO is valid — assert_who_iso3","text":"","code":"assert_who_iso3(iso3)"},{"path":"/reference/assert_who_iso3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Asserts that provided ISO is valid — assert_who_iso3","text":"iso3 Single ISO3 code","code":""},{"path":"/reference/assert_x_in_y.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert that all elements in x are members of y — assert_x_in_y","title":"Assert that all elements in x are members of y — assert_x_in_y","text":"words, assert x subset y. Useful ensuring argument one given set options.","code":""},{"path":"/reference/assert_x_in_y.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert that all elements in x are members of y — assert_x_in_y","text":"","code":"assert_x_in_y(x, y)"},{"path":"/reference/assert_x_in_y.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert that all elements in x are members of y — assert_x_in_y","text":"x (vector) y (vector)","code":""},{"path":"/reference/assert_years.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert that end years are always later than start year — assert_years","title":"Assert that end years are always later than start year — assert_years","text":"Assert end years always later start year","code":""},{"path":"/reference/assert_years.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert that end years are always later than start year — assert_years","text":"","code":"assert_years(start_year, end_year)"},{"path":"/reference/assert_years.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert that end years are always later than start year — assert_years","text":"start_year Start year end_year End year(s)","code":""},{"path":"/reference/billion_group_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate average per Billion group — billion_group_mean","title":"Calculate average per Billion group — billion_group_mean","text":"Calculates average per Billion group, taking account number indicators available use calculation. returns NA (thus NA calculated ASC) indicator missing. exception insecticide treated nets missing.","code":""},{"path":"/reference/billion_group_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate average per Billion group — billion_group_mean","text":"","code":"billion_group_mean(ind, transform_value, ind_ids)"},{"path":"/reference/billion_group_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate average per Billion group — billion_group_mean","text":"ind Vector inds transform_value Vector transformed values ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes().","code":""},{"path":"/reference/billion_ind_codes.html","id":null,"dir":"Reference","previous_headings":"","what":"Indicator codes for the Billions — billion_ind_codes","title":"Indicator codes for the Billions — billion_ind_codes","text":"Provides analysis codes required input Triple Billion calculations. named vector returned function default names assumed data frame passed calculate Billions.","code":""},{"path":"/reference/billion_ind_codes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Indicator codes for the Billions — billion_ind_codes","text":"","code":"billion_ind_codes(   billion = c(\"hep\", \"hpop\", \"uhc\", \"all\"),   include_covariates = FALSE,   include_calculated = FALSE,   include_subindicators = TRUE )"},{"path":"/reference/billion_ind_codes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Indicator codes for the Billions — billion_ind_codes","text":"billion (string) Billion indicator names return, either \"hep\", \"hpop\", \"uhc\". include_covariates (logical) Whether include covariates getting Billions indicator codes. include_calculated (logical) Whether include variables calculated within package getting Billion indicator codes. Useful UHC average service coverage. include_subindicators (logical) Whether return subindicators, ending _rural, _urban, _num, _denom, espar categories sub-categories.","code":""},{"path":"/reference/billion_ind_codes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Indicator codes for the Billions — billion_ind_codes","text":"Character vector indicator names.","code":""},{"path":"/reference/billionaiRe_add_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Add columns to data frame if not already existing — billionaiRe_add_columns","title":"Add columns to data frame if not already existing — billionaiRe_add_columns","text":"function takes data frame, vector column names, vector base fill use column. column already exist, added data frame filled relevant fill value.","code":""},{"path":"/reference/billionaiRe_add_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add columns to data frame if not already existing — billionaiRe_add_columns","text":"","code":"billionaiRe_add_columns(df, cols, fill)"},{"path":"/reference/billionaiRe_add_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add columns to data frame if not already existing — billionaiRe_add_columns","text":"df data frame. cols character vector column names add. fill list fill used column. length 1, fill used column. Can also vector, lists allow different types fill, e.g. fill = list(NA_character_, NA_real_).","code":""},{"path":"/reference/billionaiRe_add_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add columns to data frame if not already existing — billionaiRe_add_columns","text":"data frame.","code":""},{"path":"/reference/calculate_aarc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calcualte Average annual rate of change — calculate_aarc","title":"Calcualte Average annual rate of change — calculate_aarc","text":"Calculates annual average rate change (AARC AROC) compounded formula: ((end_value / baseline_value))^(1/(end_year - baseline_year)) - 1","code":""},{"path":"/reference/calculate_aarc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calcualte Average annual rate of change — calculate_aarc","text":"","code":"calculate_aarc(baseline_year, baseline_value, end_year, end_value)"},{"path":"/reference/calculate_aarc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calcualte Average annual rate of change — calculate_aarc","text":"baseline_year year AARC starts baseline_value value start_year end_year year AARC ends end_value value end_year","code":""},{"path":"/reference/calculate_aarc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calcualte Average annual rate of change — calculate_aarc","text":"numeric AARC","code":""},{"path":"/reference/calculate_contribution_sums.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate global/regional billions contributions — calculate_contribution_sums","title":"Calculate global/regional billions contributions — calculate_contribution_sums","text":"Calculates global regional sums billions contributions UHC, HPOP, HEP billions.","code":""},{"path":"/reference/calculate_contribution_sums.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate global/regional billions contributions — calculate_contribution_sums","text":"","code":"calculate_contribution_sums(   df,   billion = c(\"uhc\", \"hpop\", \"hep\"),   sum_years,   sum_type = c(\"global\", \"regional\"),   source = sprintf(\"WHO DDI calculation, %s\", format(Sys.Date(), \"%B %Y\")),   scenario_col = NULL,   contribution_col = \"contribution\" )"},{"path":"/reference/calculate_contribution_sums.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate global/regional billions contributions — calculate_contribution_sums","text":"df data frame billion One uhc, hpop, hep. billion want find global sums. sum_years year(s) want sum billions contributions. sum_type Allows select global regional sums. source source calculated billions. DDI calculations, month, year timestamp default. scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. contribution_col Column name column(s) store contribution (population) values.","code":""},{"path":"/reference/calculate_contribution_sums.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate global/regional billions contributions — calculate_contribution_sums","text":"data frame global sums relevant billion. include rows original data frame.","code":""},{"path":"/reference/calculate_contribution_sums.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate global/regional billions contributions — calculate_contribution_sums","text":"full_data expected values billions calculations per country already computed. example, calculating global contributions HPOP billion 2025.","code":""},{"path":"/reference/calculate_fixed_target.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate fixed target from a baseline year by a target year — calculate_fixed_target","title":"Calculate fixed target from a baseline year by a target year — calculate_fixed_target","text":"returned values portion straight line drawn baseline_year value target_year. values years start_year end_year returned.","code":""},{"path":"/reference/calculate_fixed_target.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate fixed target from a baseline year by a target year — calculate_fixed_target","text":"","code":"calculate_fixed_target(   target_value,   small_is_best,   year,   baseline_year,   target_year,   baseline_value )"},{"path":"/reference/calculate_fixed_target.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate fixed target from a baseline year by a target year — calculate_fixed_target","text":"target_value vector values use targets small_is_best Logical identify lower value better higher one (e.g. lower obesity positive public health outcome, obesity rate small_is_best = TRUE). year (vector) vector years baseline_year Year scenario measured. Defaults start_year target_year Year scenario eventually achieved. Defaults end_year baseline_value value baseline_year","code":""},{"path":"/reference/calculate_fixed_target.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate fixed target from a baseline year by a target year — calculate_fixed_target","text":"Dataframe scenario rows","code":""},{"path":"/reference/calculate_fixed_target.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate fixed target from a baseline year by a target year — calculate_fixed_target","text":"percent_change parameter understood percentage change, percentage point change, usually intended formulations. indeed percentage change required, please use scenario_aroc. instance, calculate scenario \"reduce 2018 value (90%) 30% 2025\", results 2025 value 63% 60%. returned scenario portion straight line drawn baseline_year value target_year. values years start_year end_year returned.","code":""},{"path":"/reference/calculate_hep_billion.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate HEP Billion — calculate_hep_billion","title":"Calculate HEP Billion — calculate_hep_billion","text":"calculate_hep_billion() calculates country-level HEP Billion based component indicators. calculates change Prevent Prepare start year end year, estimated change Detect Respond based level end year. data available end year Detect Respond, latest year observed data used. Details available methods report exact method applied.","code":""},{"path":"/reference/calculate_hep_billion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate HEP Billion — calculate_hep_billion","text":"","code":"calculate_hep_billion(   df,   scenario_col = NULL,   transform_value_col = \"transform_value\",   level_col = stringr::str_replace(transform_value_col, \"transform_value\", \"level\"),   contribution_col = stringr::str_replace(transform_value_col, \"transform_value\",     \"contribution\"),   contribution_pct_col = paste0(contribution_col, \"_percent\"),   start_year = 2018,   end_year = 2019:2025,   pop_year = 2025,   ind_ids = billion_ind_codes(\"hep\", include_calculated = TRUE) )"},{"path":"/reference/calculate_hep_billion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate HEP Billion — calculate_hep_billion","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. transform_value_col Column name column(s) transformed indicator values, used calculate contributions. level_col Column name column(s) indicator levels. length transform_value_col. contribution_col Column name column(s) store contribution (population) values. Must length transform_value_col. contribution_pct_col Column name column(s) store contribution (percent) values. Must length transform_value_col. start_year Base year contribution calculation, defaults 2018. end_year End year(s) contribution calculation, defaults 2019 2025. pop_year Year used pull HPOP populations, defaults 2025. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes().","code":""},{"path":"/reference/calculate_hep_billion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate HEP Billion — calculate_hep_billion","text":"Data frame long format.","code":""},{"path":"/reference/calculate_hep_billion.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate HEP Billion — calculate_hep_billion","text":"details HEP Billion calculation process function ties rest, see vignette: vignette(\"hep\", package = \"billionaiRe\")","code":""},{"path":"/reference/calculate_hep_components.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate HEP component indicators — calculate_hep_components","title":"Calculate HEP component indicators — calculate_hep_components","text":"Currently, Prepare DNR indicators already calculated input data, Prevent calculated function. takes numerator denominator data inputs calculates vaccination coverage per year country relevant pathogen, well overall Prevent score. DNR components, level_col calculated function.","code":""},{"path":"/reference/calculate_hep_components.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate HEP component indicators — calculate_hep_components","text":"","code":"calculate_hep_components(   df,   scenario_col = NULL,   transform_value_col = \"transform_value\",   source = sprintf(\"WHO DDI, %s\", format(Sys.Date(), \"%B %Y\")),   level_col = stringr::str_replace(transform_value_col, \"transform_value\", \"level\"),   hepi_start_year = 2018,   ind_ids = billion_ind_codes(\"hep\", include_calculated = TRUE) )"},{"path":"/reference/calculate_hep_components.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate HEP component indicators — calculate_hep_components","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. transform_value_col Column name column(s) transformed indicator values, used calculate contributions. source Source use unique source available calculation. level_col Column name(s) create hold levels data. length transform_value_col. hepi_start_year First year calculate HEP index . ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes().","code":""},{"path":"/reference/calculate_hep_components.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate HEP component indicators — calculate_hep_components","text":"Data frame long format.","code":""},{"path":"/reference/calculate_hepi.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate HEPI — calculate_hepi","title":"Calculate HEPI — calculate_hepi","text":"Function calculate HEPI average DNR, Prepare, Prevent. Used within calculate_hep_components().","code":""},{"path":"/reference/calculate_hepi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate HEPI — calculate_hepi","text":"","code":"calculate_hepi(   df,   scenario_col,   source,   transform_value_col,   earliest_year,   ind_ids )"},{"path":"/reference/calculate_hepi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate HEPI — calculate_hepi","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. source Source use unique source available calculation. transform_value_col Column name column(s) transformed indicator values, used calculate contributions. earliest_year Earliest year HEPI calculation. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes().","code":""},{"path":"/reference/calculate_hpop_billion.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate HPOP Billion — calculate_hpop_billion","title":"Calculate HPOP Billion — calculate_hpop_billion","text":"calculate_hpop_billion() calculates country-level HPOP Billion based indicator level changes.","code":""},{"path":"/reference/calculate_hpop_billion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate HPOP Billion — calculate_hpop_billion","text":"","code":"calculate_hpop_billion(   df,   start_year = 2018,   end_year = 2019:2025,   pop_year = 2025,   transform_value_col = \"transform_value\",   contribution_col = stringr::str_replace(transform_value_col, \"transform_value\",     \"contribution\"),   contribution_pct_col = paste0(contribution_col, \"_percent\"),   contribution_pct_total_pop_col = paste0(contribution_col, \"_percent_total_pop\"),   scenario_col = NULL,   ind_ids = billion_ind_codes(\"hpop\") )"},{"path":"/reference/calculate_hpop_billion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate HPOP Billion — calculate_hpop_billion","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. start_year Base year contribution calculation, defaults 2018. end_year End year(s) contribution calculation, defaults 2019 2025. pop_year Year used pull HPOP populations, defaults 2025. transform_value_col Column name column(s) transformed indicator values, used calculate contributions. contribution_col Column name column(s) store contribution (population) values. Must length transform_value_col. contribution_pct_col Column name column(s) store contribution (percent) values. Must length transform_value_col. contribution_pct_total_pop_col Column name column(s) store contribution (percent total population country) values. Must length transform_value_col. scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes().","code":""},{"path":"/reference/calculate_hpop_billion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate HPOP Billion — calculate_hpop_billion","text":"Data frame long format.","code":""},{"path":"/reference/calculate_hpop_billion.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate HPOP Billion — calculate_hpop_billion","text":"details HPOP Billion calculation process function ties rest, see vignette: vignette(\"hpop\", package = \"billionaiRe\")","code":""},{"path":"/reference/calculate_hpop_billion_change.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the HPOP Billion using columns of change — calculate_hpop_billion_change","title":"Calculate the HPOP Billion using columns of change — calculate_hpop_billion_change","text":"calculate_hpop_billion_change() uses standard HPOP methodology calculate Billions estimates end years. used within calculate_hpop_billion() calculate Billion return data long format. Called , expects column changes passed , returns Billion end_year values.","code":""},{"path":"/reference/calculate_hpop_billion_change.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the HPOP Billion using columns of change — calculate_hpop_billion_change","text":"","code":"calculate_hpop_billion_change(   df,   change = \"contribution_percent\",   contribution_col = \"contribution\",   population = \"population\",   end_year = 2019:2025,   pop_year = 2025,   scenario_col = NULL,   ind_ids = billion_ind_codes(\"hpop\") )"},{"path":"/reference/calculate_hpop_billion_change.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the HPOP Billion using columns of change — calculate_hpop_billion_change","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. change Column name column(s) change value contribution_col Column name column(s) store contribution (population) values. Must length transform_value_col. population Column name column create population figures. end_year End year(s) contribution calculation, defaults 2019 2025. pop_year Year used pull HPOP populations, defaults 2025. scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes().","code":""},{"path":"/reference/calculate_hpop_billion_single.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the HPOP Billion for one column of change — calculate_hpop_billion_single","title":"Calculate the HPOP Billion for one column of change — calculate_hpop_billion_single","text":"Calculate HPOP Billion one column change","code":""},{"path":"/reference/calculate_hpop_billion_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the HPOP Billion for one column of change — calculate_hpop_billion_single","text":"","code":"calculate_hpop_billion_single(   change,   contribution_col,   df,   pop_year,   scenario_col )"},{"path":"/reference/calculate_hpop_billion_single.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the HPOP Billion for one column of change — calculate_hpop_billion_single","text":"change Column name column change value contribution_col Column name column(s) store contribution (population) values. Must length transform_value_col. df Data frame long format, 1 row corresponds specific country, year, indicator. pop_year Year used pull HPOP populations, defaults 2025. scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format.","code":""},{"path":"/reference/calculate_hpop_change_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the change for vectors, used in calculate_hpop_billion() — calculate_hpop_change_vector","title":"Calculate the change for vectors, used in calculate_hpop_billion() — calculate_hpop_change_vector","text":"Calculate change vectors, used calculate_hpop_billion()","code":""},{"path":"/reference/calculate_hpop_change_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the change for vectors, used in calculate_hpop_billion() — calculate_hpop_change_vector","text":"","code":"calculate_hpop_change_vector(transform_value_col, year, start_year)"},{"path":"/reference/calculate_hpop_change_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the change for vectors, used in calculate_hpop_billion() — calculate_hpop_change_vector","text":"transform_value_col Vector transform values year Vector years start_year Start year","code":""},{"path":"/reference/calculate_hpop_contributions.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate HPOP Indicator Contributions — calculate_hpop_contributions","title":"Calculate HPOP Indicator Contributions — calculate_hpop_contributions","text":"calculate_hpop_contributions() calculates indicator-level contributions changes HPOP Billion.","code":""},{"path":"/reference/calculate_hpop_contributions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate HPOP Indicator Contributions — calculate_hpop_contributions","text":"","code":"calculate_hpop_contributions(   df,   start_year = 2018,   end_year = 2019:2025,   transform_value_col = \"transform_value\",   contribution_col = stringr::str_replace(transform_value_col, \"transform_value\",     \"contribution\"),   contribution_pct_col = paste0(contribution_col, \"_percent\"),   contribution_pct_total_pop_col = paste0(contribution_col, \"_percent_total_pop\"),   scenario_col = NULL,   ind_ids = billion_ind_codes(\"hpop\") )"},{"path":"/reference/calculate_hpop_contributions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate HPOP Indicator Contributions — calculate_hpop_contributions","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. start_year Base year contribution calculation, defaults 2018. end_year End year(s) contribution calculation, defaults 2019 2025. transform_value_col Column name column(s) transformed indicator values, used calculate contributions. contribution_col Column name column(s) store contribution (population) values. Must length transform_value_col. contribution_pct_col Column name column(s) store contribution (percent) values. Must length transform_value_col. contribution_pct_total_pop_col Column name column(s) store contribution (percent total population country) values. Must length transform_value_col. scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes().","code":""},{"path":"/reference/calculate_hpop_contributions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate HPOP Indicator Contributions — calculate_hpop_contributions","text":"Data frame long format.","code":""},{"path":"/reference/calculate_hpop_contributions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate HPOP Indicator Contributions — calculate_hpop_contributions","text":"details HPOP Billion calculation process function ties rest, see vignette: vignette(\"hpop\", package = \"billionaiRe\")","code":""},{"path":"/reference/calculate_percent_change_baseline.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate percent change from baseline — calculate_percent_change_baseline","title":"Calculate percent change from baseline — calculate_percent_change_baseline","text":"Calculate percent change baseline","code":""},{"path":"/reference/calculate_percent_change_baseline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate percent change from baseline — calculate_percent_change_baseline","text":"","code":"calculate_percent_change_baseline(   baseline_value,   goal_value,   year,   start_year,   target_year,   baseline_year )"},{"path":"/reference/calculate_percent_change_baseline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate percent change from baseline — calculate_percent_change_baseline","text":"baseline_value vector baseline value used goal_value vector goal value used year (vector) vector years start_year Start year scenario, defaults 2018. target_year Year scenario eventually achieved. Defaults end_year baseline_year Year scenario measured. Defaults start_year","code":""},{"path":"/reference/calculate_uhc_billion.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate UHC Billion — calculate_uhc_billion","title":"Calculate UHC Billion — calculate_uhc_billion","text":"calculate_uhc_billion() calculates country-level UHC Billion based indicator level data. Calculates country-year combination provided data. order calculate average service coverage, thus overall Billion, UHC indicators must present given year. exception insecticide treated nets, need present.","code":""},{"path":"/reference/calculate_uhc_billion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate UHC Billion — calculate_uhc_billion","text":"","code":"calculate_uhc_billion(   df,   transform_value_col = \"transform_value\",   value_col = \"value\",   scenario_col = NULL,   source = sprintf(\"WHO DDI calculation, %s\", format(Sys.Date(), \"%B %Y\")),   projected_year = lubridate::year(lubridate::now()),   ind_ids = billion_ind_codes(\"uhc\") )"},{"path":"/reference/calculate_uhc_billion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate UHC Billion — calculate_uhc_billion","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. transform_value_col Column name column(s) transformed indicator values, used calculate contributions. value_col Column name column indicator values. scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. source Source provide calculated average service coverage single measure. projected_year Year calculated data regarded projected. Years prior reported estimated. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes().","code":""},{"path":"/reference/calculate_uhc_billion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate UHC Billion — calculate_uhc_billion","text":"Data frame long format.","code":""},{"path":"/reference/calculate_uhc_billion.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate UHC Billion — calculate_uhc_billion","text":"details UHC Billion calculation process function ties rest, see vignette: vignette(\"uhc\", package = \"billionaiRe\")","code":""},{"path":"/reference/calculate_uhc_billion_single.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate UHC Billion for one set of columns — calculate_uhc_billion_single","title":"Calculate UHC Billion for one set of columns — calculate_uhc_billion_single","text":"Calculate UHC Billion one set columns","code":""},{"path":"/reference/calculate_uhc_billion_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate UHC Billion for one set of columns — calculate_uhc_billion_single","text":"","code":"calculate_uhc_billion_single(   df,   transform_value_col,   value_col,   scenario_col,   source,   projected_year,   ind_ids )"},{"path":"/reference/calculate_uhc_billion_single.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate UHC Billion for one set of columns — calculate_uhc_billion_single","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. transform_value_col Column name column(s) transformed indicator values, used calculate contributions. value_col Column name column indicator values. scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. source Source provide calculated average service coverage single measure. projected_year Year calculated data regarded projected. Years prior reported estimated. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes().","code":""},{"path":"/reference/calculate_uhc_contribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate UHC contribution — calculate_uhc_contribution","title":"Calculate UHC contribution — calculate_uhc_contribution","text":"calculate_uhc_contribution() calculates country-level UHC contributions, total population percents, based indicator level data. Calculates country-year combination provided data, specific scenarios specified.","code":""},{"path":"/reference/calculate_uhc_contribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate UHC contribution — calculate_uhc_contribution","text":"","code":"calculate_uhc_contribution(   df,   value_col = \"value\",   start_year = 2018,   end_year = 2019:2025,   pop_year = 2025,   transform_value_col = \"transform_value\",   contribution_col = stringr::str_replace(transform_value_col, \"transform_value\",     \"contribution\"),   contribution_pct_col = paste0(contribution_col, \"_percent\"),   scenario_col = NULL,   scenario_reported_estimated = \"routine\",   scenario_covid_shock = \"covid_shock\",   scenario_reference_infilling = \"reference_infilling\",   ind_ids = billion_ind_codes(\"uhc\", include_calculated = TRUE) )"},{"path":"/reference/calculate_uhc_contribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate UHC contribution — calculate_uhc_contribution","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. value_col Column name column indicator values. start_year Base year contribution calculation, defaults 2018. end_year End year(s) contribution calculation, defaults 2019 2025. pop_year Year used pull HPOP populations, defaults 2025. transform_value_col Column name column(s) transformed indicator values, used calculate contributions. contribution_col Column name column(s) store contribution (population) values. Must length transform_value_col. contribution_pct_col Column name column(s) store contribution (percent) values. Must length transform_value_col. scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. scenario_reported_estimated name reported/estimated scenario. scenario_covid_shock name scenario COVID-19 shock years. scenario_reference_infilling name technical programs projections/imputations scenario. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes().","code":""},{"path":"/reference/calculate_uhc_contribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate UHC contribution — calculate_uhc_contribution","text":"Data frame long format.","code":""},{"path":"/reference/calculate_uhc_contribution.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate UHC contribution — calculate_uhc_contribution","text":"details UHC Billion calculation process function ties rest, see vignette: vignette(\"uhc\", package = \"billionaiRe\")","code":""},{"path":"/reference/convert_ind_codes.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert indicator codes between types — convert_ind_codes","title":"Convert indicator codes between types — convert_ind_codes","text":"convert_ind_codes() allows easy conversion indicator codes dashboard IDs, xMart IDs, GHO codes.","code":""},{"path":"/reference/convert_ind_codes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert indicator codes between types — convert_ind_codes","text":"","code":"convert_ind_codes(   ind_codes,   from = c(\"dashboard_id\", \"ind\", \"gho_code\"),   to = c(\"dashboard_id\", \"ind\", \"gho_code\") )"},{"path":"/reference/convert_ind_codes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert indicator codes between types — convert_ind_codes","text":"ind_codes Character vector indicator codes Type code passed convert_ind_codes(). Type code return.","code":""},{"path":"/reference/convert_ind_codes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert indicator codes between types — convert_ind_codes","text":"character vector.","code":""},{"path":"/reference/country_shares.html","id":null,"dir":"Reference","previous_headings":"","what":"Country shares data — country_shares","title":"Country shares data — country_shares","text":"Country shares data UHC HPOP Billions 194 member states.","code":""},{"path":"/reference/country_shares.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Country shares data — country_shares","text":"","code":"country_shares"},{"path":"/reference/country_shares.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Country shares data — country_shares","text":"data frame 582 rows 4 variables: iso3 Country ISO3 codes. billion Relevant billion share_n Share, number people. share_perc Share, percent total projected population 2023.","code":""},{"path":"/reference/extrapolate_campaign_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Extrapolate campaign data for the transform value, type, and source — extrapolate_campaign_data","title":"Extrapolate campaign data for the transform value, type, and source — extrapolate_campaign_data","text":"Works across multiple transform_value_col columns.","code":""},{"path":"/reference/extrapolate_campaign_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extrapolate campaign data for the transform value, type, and source — extrapolate_campaign_data","text":"","code":"extrapolate_campaign_data(   pathogen,   pathogen_year,   df,   transform_value_col,   source )"},{"path":"/reference/extrapolate_campaign_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extrapolate campaign data for the transform value, type, and source — extrapolate_campaign_data","text":"pathogen Indicator IDs pathogens pathogen_year Latest year data use flat extrapolation (extrapolating year) df Data frame long format, 1 row corresponds specific country, year, indicator. transform_value_col Column name column(s) transformed indicator values, used calculate contributions. source Source use unique source available calculation.","code":""},{"path":"/reference/extrapolate_campaign_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Rolling sum and extrapolate campaigns data — extrapolate_campaign_vector","title":"Rolling sum and extrapolate campaigns data — extrapolate_campaign_vector","text":"Takes rolling sum observed data flat extrapolates last reported","code":""},{"path":"/reference/extrapolate_campaign_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rolling sum and extrapolate campaigns data — extrapolate_campaign_vector","text":"","code":"extrapolate_campaign_vector(x, n)"},{"path":"/reference/extrapolate_campaign_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rolling sum and extrapolate campaigns data — extrapolate_campaign_vector","text":"x Vector campaigns data, either numerator denominator n Years take rolling average ","code":""},{"path":"/reference/flat_extrapolation.html","id":null,"dir":"Reference","previous_headings":"","what":"Flat extrapolation — flat_extrapolation","title":"Flat extrapolation — flat_extrapolation","text":"Flat extrapolation","code":""},{"path":"/reference/flat_extrapolation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flat extrapolation — flat_extrapolation","text":"","code":"flat_extrapolation(   df,   col,   group_col = NULL,   sort_col = \"year\",   pred_col = \"pred\",   sort_descending = FALSE,   replace_obs = c(\"missing\", \"none\") )"},{"path":"/reference/flat_extrapolation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flat extrapolation — flat_extrapolation","text":"df Data frame model data.#' @param col col Name column extrapolate/interpolate. group_col Column name(s) group(s) use dplyr::group_by() supplying type, calculating mean absolute scaled error data involving time series, group_models, fitting predicting models . NULL, used. Defaults \"iso3\". sort_col Column name(s) use dplyr::arrange() data prior supplying type calculating mean absolute scaled error data involving time series. NULL, used. Defaults \"year\". pred_col Column name store predicted value. sort_descending Logical value whether sorted values sort_col sorted descending order. Defaults FALSE. replace_obs Character value specifying , , observations replaced fitted values. Defaults replacing missing values, can used replace values none.","code":""},{"path":"/reference/flat_extrapolation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flat extrapolation — flat_extrapolation","text":"data frame predicted data,","code":""},{"path":"/reference/generate_hpop_populations.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate HPOP Population Table — generate_hpop_populations","title":"Generate HPOP Population Table — generate_hpop_populations","text":"generate_hpop_populations() creates country/population data frame necessary correcting double counting within HPOP Billion calculation. used within calculate_hpop_billion().","code":""},{"path":"/reference/generate_hpop_populations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate HPOP Population Table — generate_hpop_populations","text":"","code":"generate_hpop_populations(pop_year)"},{"path":"/reference/generate_hpop_populations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate HPOP Population Table — generate_hpop_populations","text":"pop_year Year used pull HPOP populations, defaults 2025.","code":""},{"path":"/reference/generate_hpop_populations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate HPOP Population Table — generate_hpop_populations","text":"Data frame long format.","code":""},{"path":"/reference/generate_hpop_populations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate HPOP Population Table — generate_hpop_populations","text":"underlying data wppdistro package publicly distributed specific small member states, exported already created (thus publicly available) table within billionaiRe package, instead dynamically generated R session.","code":""},{"path":"/reference/get_aarr.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Average Annual Rate of Reduction — get_aarr","title":"Get Average Annual Rate of Reduction — get_aarr","text":"Gets Average Annual Rate Reduction (AARC) fitting log value year linear regression.","code":""},{"path":"/reference/get_aarr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Average Annual Rate of Reduction — get_aarr","text":"","code":"get_aarr(year, value)"},{"path":"/reference/get_aarr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Average Annual Rate of Reduction — get_aarr","text":"year vector years value vector values AARR calculated. Must length year","code":""},{"path":"/reference/get_aarr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Average Annual Rate of Reduction — get_aarr","text":"numeric beta value representing AARR","code":""},{"path":"/reference/get_country_shares.html","id":null,"dir":"Reference","previous_headings":"","what":"Get country shares data — get_country_shares","title":"Get country shares data — get_country_shares","text":"Matches country ISO3 codes data country_shares data frame.","code":""},{"path":"/reference/get_country_shares.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get country shares data — get_country_shares","text":"","code":"get_country_shares(   iso3,   billion = c(\"hep\", \"hpop\", \"uhc\"),   share_type = c(\"n\", \"perc\") )"},{"path":"/reference/get_country_shares.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get country shares data — get_country_shares","text":"iso3 Country ISO3 codes. billion Relevant Billion, one \"hep\", \"hpop\", \"uhc\". share_type Type share return, either total numbers people (\"n\"), percent total projected population 2023 (\"perc\").","code":""},{"path":"/reference/get_data_lake_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the name of the 3B data lake — get_data_lake_name","title":"Return the name of the 3B data lake — get_data_lake_name","text":"Return name 3B data lake","code":""},{"path":"/reference/get_data_lake_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the name of the 3B data lake — get_data_lake_name","text":"","code":"get_data_lake_name()"},{"path":"/reference/get_data_lake_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the name of the 3B data lake — get_data_lake_name","text":"string. name Triple Billions WHDH data lake.","code":""},{"path":"/reference/get_ind_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Get metadata for a Triple Billions indicator(s) — get_ind_metadata","title":"Get metadata for a Triple Billions indicator(s) — get_ind_metadata","text":"convenience function looks relevant metadata one indicators indicator_df table.","code":""},{"path":"/reference/get_ind_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get metadata for a Triple Billions indicator(s) — get_ind_metadata","text":"","code":"get_ind_metadata(ind_codes, metadata_col = names(billionaiRe::indicator_df))"},{"path":"/reference/get_ind_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get metadata for a Triple Billions indicator(s) — get_ind_metadata","text":"ind_codes character vector indicator (analysis) codes metadata_col name indicator_df column desired metadata.","code":""},{"path":"/reference/get_ind_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get metadata for a Triple Billions indicator(s) — get_ind_metadata","text":"character vector metadata. positions correspond order ind_codes input.","code":""},{"path":"/reference/get_ind_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get metadata for a Triple Billions indicator(s) — get_ind_metadata","text":"","code":"# Find the gho_code for UHC Tobacco get_ind_metadata(\"uhc_tobacco\", \"gho_code\") #> [1] \"M_Est_tob_curr_std\"  # Find the indicator type for multiple indicators get_ind_metadata(c(\"alcohol\", \"hwf\"), \"ind_type\") #> [1] \"unproj_data\" \"proj_data\""},{"path":"/reference/get_latest_aarc.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the latest AARC for data frame — get_latest_aarc","title":"Get the latest AARC for data frame — get_latest_aarc","text":"Gets annual average rate change (AARC AROC) baseline year year immediately preceding every combination iso3 ind present df.","code":""},{"path":"/reference/get_latest_aarc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the latest AARC for data frame — get_latest_aarc","text":"","code":"get_latest_aarc(df, baseline_year, value_col = \"value\")"},{"path":"/reference/get_latest_aarc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the latest AARC for data frame — get_latest_aarc","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. baseline_year Year scenario measured. Defaults start_year value_col Column name column indicator values.","code":""},{"path":"/reference/get_latest_aarc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the latest AARC for data frame — get_latest_aarc","text":"dataframe AROC (aroc column) every combination iso3 ind","code":""},{"path":"/reference/get_percent_change_aarc.html","id":null,"dir":"Reference","previous_headings":"","what":"Get AARC for data frame based on a percent change to baseline — get_percent_change_aarc","title":"Get AARC for data frame based on a percent change to baseline — get_percent_change_aarc","text":"Gets annual average rate change (AARC AROC) baseline year target year given percent change two years every combination iso3 ind present df.","code":""},{"path":"/reference/get_percent_change_aarc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get AARC for data frame based on a percent change to baseline — get_percent_change_aarc","text":"","code":"get_percent_change_aarc(   df,   percent_change,   baseline_year,   target_year,   value_col = \"value\" )"},{"path":"/reference/get_percent_change_aarc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get AARC for data frame based on a percent change to baseline — get_percent_change_aarc","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. percent_change Numeric percent_change. expressed percentage point fraction 100 (e.g. 6% increase = 6, 0.06). baseline_year Year scenario measured. Defaults start_year target_year Year scenario eventually achieved. Defaults end_year value_col Column name column indicator values.","code":""},{"path":"/reference/get_percent_change_aarc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get AARC for data frame based on a percent change to baseline — get_percent_change_aarc","text":"dataframe AROC (aroc column) every combination iso3 ind","code":""},{"path":"/reference/get_sdi_ratio.html","id":null,"dir":"Reference","previous_headings":"","what":"Get SDI ratio data — get_sdi_ratio","title":"Get SDI ratio data — get_sdi_ratio","text":"Matches country ISO3 codes data sdi_ratio data frame.","code":""},{"path":"/reference/get_sdi_ratio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get SDI ratio data — get_sdi_ratio","text":"","code":"get_sdi_ratio(iso3)"},{"path":"/reference/get_sdi_ratio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get SDI ratio data — get_sdi_ratio","text":"iso3 Country ISO3 codes.","code":""},{"path":"/reference/get_sdi_ratio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get SDI ratio data — get_sdi_ratio","text":"Numeric vector SDI ratios.","code":""},{"path":"/reference/get_target_aarc.html","id":null,"dir":"Reference","previous_headings":"","what":"Get AARC for data frame based on a target — get_target_aarc","title":"Get AARC for data frame based on a target — get_target_aarc","text":"Gets annual average rate change (AARC AROC) baseline year target year reach target value every combination iso3 ind present df.","code":""},{"path":"/reference/get_target_aarc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get AARC for data frame based on a target — get_target_aarc","text":"","code":"get_target_aarc(   df,   target_value,   baseline_year,   target_year,   value_col = \"value\" )"},{"path":"/reference/get_target_aarc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get AARC for data frame based on a target — get_target_aarc","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. target_value value reached. Used aroc_type target. expressed percentage point fraction 100 (e.g. 6% increase = 6, 0.06). baseline_year Year scenario measured. Defaults start_year target_year Year scenario eventually achieved. Defaults end_year value_col Column name column indicator values.","code":""},{"path":"/reference/get_target_aarc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get AARC for data frame based on a target — get_target_aarc","text":"dataframe AROC (aroc column) every combination iso3 ind","code":""},{"path":"/reference/get_valid_inds.html","id":null,"dir":"Reference","previous_headings":"","what":"Get correct set of indicators for WHDH operations — get_valid_inds","title":"Get correct set of indicators for WHDH operations — get_valid_inds","text":"Get correct set indicators WHDH operations","code":""},{"path":"/reference/get_valid_inds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get correct set of indicators for WHDH operations — get_valid_inds","text":"","code":"get_valid_inds(data_type, billion)"},{"path":"/reference/get_valid_inds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get correct set of indicators for WHDH operations — get_valid_inds","text":"data_type (string) type data load. wrangled_data (default): raw data wrangled suitable form analysis. projected_data:  data fully projected target year yet transformed calculated upon. final_data: complete set billions data transformed values, contributions, calculations available. ingestion_data: raw data original form received technical program, GHO, sources. files wrangled modified way. billion (string) One \"hep\", \"hpop\", \"uhc\".","code":""},{"path":"/reference/get_valid_inds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get correct set of indicators for WHDH operations — get_valid_inds","text":"(character vector) list indicators belonging given billion, used WHDH functions.","code":""},{"path":"/reference/get_whdh_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate file paths for the Triple Billions WHDH data lake — get_whdh_path","title":"Generate file paths for the Triple Billions WHDH data lake — get_whdh_path","text":"get_whdh_path() simplifies process generating accurate file paths downloading/uploading files Triple Billions WHDH data lake.","code":""},{"path":"/reference/get_whdh_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate file paths for the Triple Billions WHDH data lake — get_whdh_path","text":"","code":"get_whdh_path(   operation = c(\"download\", \"upload\"),   data_type = c(\"wrangled_data\", \"projected_data\", \"final_data\", \"ingestion_data\"),   billion = c(\"all\", \"hep\", \"hpop\", \"uhc\"),   ind_codes = \"all\",   file_names = NULL,   experiment = \"unofficial\" )"},{"path":"/reference/get_whdh_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate file paths for the Triple Billions WHDH data lake — get_whdh_path","text":"operation (string) Either \"download\" \"upload\". data_type (string) type data load. wrangled_data (default): raw data wrangled suitable form analysis. projected_data:  data fully projected target year yet transformed calculated upon. final_data: complete set billions data transformed values, contributions, calculations available. ingestion_data: raw data original form received technical program, GHO, sources. files wrangled modified way. billion (string) One \"\" (default), \"hep\", \"hpop\", \"uhc\". \"\", file paths indicators three bilions returned. ind_codes (character vector) name indicator (indicators) load data . , returns paths indicators given billion. billion = \"\", argument ignored file paths indicators three bilions returned. file_names (character vector) name(s) file(s) download. NULL default. Ignored either billion = \"\" ind_codes = \"\". experiment (string) Either NULL string (\"unofficial\" default). NULL, root folder data layers 3B folder (.e., \"official\" data stored (e.g., 3B/...). string, root folder data layers sub-folder within Sandbox layer 3B data lake (e.g., experiment = \"my_exp\", paths form 3B/Sandbox/my_exp/Silver/...)","code":""},{"path":"/reference/get_whdh_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate file paths for the Triple Billions WHDH data lake — get_whdh_path","text":"character vector.","code":""},{"path":"/reference/get_whdh_path.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate file paths for the Triple Billions WHDH data lake — get_whdh_path","text":"Using function working data lake highly recommended ensures file paths abide established standards directory structure data lake.","code":""},{"path":"/reference/has_xmart_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Check data frame for xMart4 columns — has_xmart_cols","title":"Check data frame for xMart4 columns — has_xmart_cols","text":"Tests see given data frame columns required Triple Billions xMart4 tables.test take column order consideration (e.g., ,b,c c,,b pass)","code":""},{"path":"/reference/has_xmart_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check data frame for xMart4 columns — has_xmart_cols","text":"","code":"has_xmart_cols(df)"},{"path":"/reference/has_xmart_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check data frame for xMart4 columns — has_xmart_cols","text":"df data.frame","code":""},{"path":"/reference/has_xmart_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check data frame for xMart4 columns — has_xmart_cols","text":"bool","code":""},{"path":"/reference/hep_df.html","id":null,"dir":"Reference","previous_headings":"","what":"HEP generated example data — hep_df","title":"HEP generated example data — hep_df","text":"Generated (fake) HEP data used test Billions calculations code within billionaiRe package.","code":""},{"path":"/reference/hep_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HEP generated example data — hep_df","text":"","code":"hep_df"},{"path":"/reference/hep_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"HEP generated example data — hep_df","text":"data frame 21 rows 5 variables: iso3 Country ISO3 codes. year Year. ind HPOP indicator code. value Raw indicator value. type Data type.","code":""},{"path":"/reference/hep_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"HEP generated example data — hep_df","text":"See HEP vignette example use: vignette(\"hep\", package = \"billionaiRe\")","code":""},{"path":"/reference/hpop_df.html","id":null,"dir":"Reference","previous_headings":"","what":"HPOP generated example data — hpop_df","title":"HPOP generated example data — hpop_df","text":"Generated (fake) HPOP data used test Billions calculations code within billionaiRe package.","code":""},{"path":"/reference/hpop_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HPOP generated example data — hpop_df","text":"","code":"hpop_df"},{"path":"/reference/hpop_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"HPOP generated example data — hpop_df","text":"data frame 34 rows 5 variables: iso3 Country ISO3 codes. year Year. ind HPOP indicator code. value Raw indicator value. type Data type.","code":""},{"path":"/reference/hpop_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"HPOP generated example data — hpop_df","text":"See HPOP vignette example use: vignette(\"hpop\", package = \"billionaiRe\")","code":""},{"path":"/reference/impute_covid_shock.html","id":null,"dir":"Reference","previous_headings":"","what":"Impute a COVID-19 shock — impute_covid_shock","title":"Impute a COVID-19 shock — impute_covid_shock","text":"Impute COVID-19 shock iso3 ind combination imputation flow chart: 2020 value, 2021 = 2020 2020 values, 30% countries region one: Use mean regional chock (difference 2020 2019) infer 2020 value","code":""},{"path":"/reference/impute_covid_shock.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Impute a COVID-19 shock — impute_covid_shock","text":"","code":"impute_covid_shock(   df,   region = c(\"who_region\", \"un_region\", \"un_subregion\", \"un_intermediate_region\",     \"sdg_region\", \"sdg_subregion\", \"gbd_region\", \"gbd_subregion\", \"un_desa_region\",     \"un_desa_subregion\", \"wb_region\", \"wb_ig\"),   start_year = 2018,   covid_year = 2020,   recovery_year = 2022,   end_year = 2025,   value_col = \"value\",   scenario_col = \"scenario\",   default_scenario = \"default\",   scenario_reported_estimated = \"routine\",   scenario_covid_shock = \"covid_shock\",   scenario_reference_infilling = \"reference_infilling\",   source = sprintf(\"WHO DDI interim infilling and projections, %s\", format(Sys.Date(),     \"%B %Y\")) )"},{"path":"/reference/impute_covid_shock.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Impute a COVID-19 shock — impute_covid_shock","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. region (character) Type region use regional average. See iso3_to_regions details. start_year Base year contribution calculation, defaults 2018. covid_year (integer) year values impacted COVID. recovery_year integer year AROC applied. Default 2022. end_year End year(s) contribution calculation, defaults 2019 2025. value_col Column name column indicator values. scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. default_scenario name default scenario. scenario_reported_estimated name reported/estimated scenario. scenario_covid_shock name scenario COVID-19 shock years. scenario_reference_infilling name technical programs projections/imputations scenario. source Source provide calculated average service coverage single measure.","code":""},{"path":"/reference/indicator_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset of indicators used within the Billions calculations. — indicator_df","title":"Dataset of indicators used within the Billions calculations. — indicator_df","text":"dataset containing dashboard analysis indicator codes uses within GPW13 Billions.","code":""},{"path":"/reference/indicator_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset of indicators used within the Billions calculations. — indicator_df","text":"","code":"indicator_df"},{"path":"/reference/indicator_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dataset of indicators used within the Billions calculations. — indicator_df","text":"data frame 111 rows 20 variables: dashboard_id Dashboard ID used within GPW13 xMart4 instance ind Code used analysis scripts within billionaiRe package gho_code GHO storage code indicator ind_type \"proj_data\" indicator projected technical programme, \"unproj_data\" projected DDI uhc Logical, UHC Billions indicator hpop Logical, HPOP Billions indicator hep Logical, HEP Billions indicator covariate Logical, indicator just covariate Billions calculated Logical, indicator calculated within package thus input sdg Indicator code SDG attributed SDG short_name Short name indicator unit_raw Unit raw values indicator unit_transformed Unit raw values indicator medium_name Medium length name indicator (typically used tables) transformed_name Name indicator transformation order Order indicators pillar Pillar indicators sits UHC HEP (e.g. Prevent, Non communicable diseases (NCDs), etc.) small_is_best Logical, lower value better public health outcome. gho_query Query passed ghost retrieve data data_source Name source data specific indicator.","code":""},{"path":"/reference/load_billion_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Billions indicator data — load_billion_data","title":"Load Billions indicator data — load_billion_data","text":"load_billion_data() provides access raw inputs Billions stored within World Health Data Hub World Health Organization's xMart4 database. default, filters loaded data take recently uploaded data indicator, country, year. user can also specify take latest data certain time period, extract data database.","code":""},{"path":"/reference/load_billion_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Billions indicator data — load_billion_data","text":"","code":"load_billion_data(   data_type = c(\"wrangled_data\", \"projected_data\", \"final_data\"),   billion = c(\"all\", \"hep\", \"hpop\", \"uhc\"),   ind_codes = \"all\",   version = \"latest\",   na_rm = TRUE,   experiment = NULL,   silent = TRUE,   data_source = c(\"whdh\", \"xmart\"),   ... )"},{"path":"/reference/load_billion_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Billions indicator data — load_billion_data","text":"data_type (string) type data load. wrangled_data (default): raw data wrangled suitable form analysis. projected_data:  data fully projected target year yet transformed calculated upon. final_data: complete set billions data transformed values, contributions, calculations available. billion (string) One \"\" (default), \"hep\", \"hpop\", \"uhc\". \"\", downloads indicators three billions. ind_codes (character vector) name indicator (indicators) load data . , downloads data indicators given billion. Ignored billion = \"\". version (string) Either latest  yyyy-MM-dd yyyy-mm-ddTHH-MM-SS formatted string. latest, latest version data downloaded. yyyy-MM-dd formatted string, latest version data provided date downloaded. yyyy-mm-ddTHH-MM-SS formatted string, exact match given time stamp sought, exists; otherwise, raises error. na_rm (logical) Specifies whether filter data rows value missing. Defaults TRUE. experiment (string) Either NULL string (\"unofficial\" default). Identifies Bronze/Silver/Gold data layers data downloaded located. empty string. NULL, root folder data layers 3B folder (.e., \"official\" data stored). example, 3B/Silver/.... string, root folder data layers sub-folder within Sandbox layer 3B data lake (e.g., experiment = \"my_exp\", data download 3B/Sandbox/my_exp/{data_layer}/...) silent (logical) Specifies whether show authentication messages download progress bar. Defaults TRUE. data_source (string) Ether \"whdh\" \"xmart\". Indicates download data ... Additional arguments passed xmart4::xmart4_table(). Use need provide additional token specifications Azure authentication.","code":""},{"path":"/reference/load_billion_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Billions indicator data — load_billion_data","text":"data frame.","code":""},{"path":"/reference/load_billion_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load Billions indicator data — load_billion_data","text":"function requires user xmart4 whdh packages installed setup access data. quetions getting relevant permissions, please contact kanjim@.int messeillere@.int.","code":""},{"path":"/reference/load_billion_data_legacy.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Raw Billions Indicator Data — load_billion_data_legacy","title":"Load Raw Billions Indicator Data — load_billion_data_legacy","text":"load_billion_data_legacy() legacy version load_billion_data(). provides access raw inputs Billions stored within World Health Organization's xMart4 database. default, filters loaded data take recently uploaded data indicator, country, year. user can also specify take latest data certain time period, extract data database.","code":""},{"path":"/reference/load_billion_data_legacy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Raw Billions Indicator Data — load_billion_data_legacy","text":"","code":"load_billion_data_legacy(   billion = c(\"hep\", \"hpop\", \"uhc\", \"all\"),   mart_table = c(\"full_data\", \"raw_data\", \"projected_data\", \"unproj_data\", \"proj_data\"),   date_filter = \"latest\",   na_rm = TRUE,   format = c(\"csv\", \"streaming\", \"none\"),   ... )"},{"path":"/reference/load_billion_data_legacy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Raw Billions Indicator Data — load_billion_data_legacy","text":"billion Billions data load, one \"hep\" (default), \"hpop\", \"uhc\", \"\". mart_table Name xMart4 table GPW13 mart load data . full_data: Full Billions data transformed values, contributions, calculations available. (default) raw_data: Raw input Billions data, yet transformed calculated upon, fully projected. Includes full history. projected_data: copy raw_data latest data. proj_data: Raw input Billions data projected technical programme(s). unproj_data: Raw input Billions projected technical programme(s) needs projection DDI. date_filter One NULL, \"latest\", single date string. date string needs ISO6801 format, \"1989-4-4\" \"1988-06-21\". date provided, take values loaded prior date xMart4 database. na_rm Logical value, specifying whether filter data rows value missing. Defaults TRUE. format Specification output format returned xMart API. Defaults \"csv\" faster download processing times. Passed xmart4::xmart4_table(). See xMart4 API documentation details three options (\"csv\", \"streaming\", \"none\"). ... Additional arguments passed xmart4::xmart4_table(). Use need provide additional token specifications Azure authentication.","code":""},{"path":"/reference/load_billion_data_legacy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Raw Billions Indicator Data — load_billion_data_legacy","text":"data frame.","code":""},{"path":"/reference/load_billion_data_legacy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load Raw Billions Indicator Data — load_billion_data_legacy","text":"function requires user xmart4 package installed setup access GPW13 mart. Details available GitHub landing page linked .","code":""},{"path":"/reference/load_billion_data_whdh.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Billions indicator data from WHDH — load_billion_data_whdh","title":"Load Billions indicator data from WHDH — load_billion_data_whdh","text":"Load Billions indicator data WHDH","code":""},{"path":"/reference/load_billion_data_whdh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Billions indicator data from WHDH — load_billion_data_whdh","text":"","code":"load_billion_data_whdh(   data_type = c(\"wrangled_data\", \"projected_data\", \"final_data\"),   billion = c(\"all\", \"hep\", \"hpop\", \"uhc\"),   ind_codes = \"all\",   version = \"latest\",   na_rm = TRUE,   experiment = NULL,   silent = TRUE )"},{"path":"/reference/load_billion_data_whdh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Billions indicator data from WHDH — load_billion_data_whdh","text":"data_type (string) type data load. wrangled_data (default): raw data wrangled suitable form analysis. projected_data:  data fully projected target year yet transformed calculated upon. final_data: complete set billions data transformed values, contributions, calculations available. billion (string) One \"\" (default), \"hep\", \"hpop\", \"uhc\". \"\", downloads indicators three billions. ind_codes (character vector) name indicator (indicators) load data . , downloads data indicators given billion. Ignored billion = \"\". version (string) Either latest  yyyy-MM-dd yyyy-mm-ddTHH-MM-SS formatted string. latest, latest version data downloaded. yyyy-MM-dd formatted string, latest version data provided date downloaded. yyyy-mm-ddTHH-MM-SS formatted string, exact match given time stamp sought, exists; otherwise, raises error. na_rm (logical) Specifies whether filter data rows value missing. Defaults TRUE. experiment (string) Either NULL string (\"unofficial\" default). Identifies Bronze/Silver/Gold data layers data downloaded located. empty string. NULL, root folder data layers 3B folder (.e., \"official\" data stored). example, 3B/Silver/.... string, root folder data layers sub-folder within Sandbox layer 3B data lake (e.g., experiment = \"my_exp\", data download 3B/Sandbox/my_exp/{data_layer}/...) silent (logical) Specifies whether show authentication messages download progress bar. Defaults TRUE.","code":""},{"path":"/reference/load_billion_data_whdh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Billions indicator data from WHDH — load_billion_data_whdh","text":"data frame.","code":""},{"path":"/reference/load_billion_data_xmart.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Billions indicator data from xMart — load_billion_data_xmart","title":"Load Billions indicator data from xMart — load_billion_data_xmart","text":"Load Billions indicator data xMart","code":""},{"path":"/reference/load_billion_data_xmart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Billions indicator data from xMart — load_billion_data_xmart","text":"","code":"load_billion_data_xmart(   data_type = c(\"wrangled_data\", \"projected_data\", \"final_data\"),   billion = c(\"all\", \"hep\", \"hpop\", \"uhc\"),   ind_codes = \"all\",   version = \"latest\",   na_rm = TRUE,   experiment = NULL,   silent = TRUE )"},{"path":"/reference/load_billion_data_xmart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Billions indicator data from xMart — load_billion_data_xmart","text":"data_type (string) type data load. wrangled_data (default): raw data wrangled suitable form analysis. projected_data:  data fully projected target year yet transformed calculated upon. final_data: complete set billions data transformed values, contributions, calculations available. billion (string) One \"\" (default), \"hep\", \"hpop\", \"uhc\". \"\", downloads indicators three billions. ind_codes (character vector) name indicator (indicators) load data . , downloads data indicators given billion. Ignored billion = \"\". version (string) Either latest  yyyy-MM-dd yyyy-mm-ddTHH-MM-SS formatted string. latest, latest version data downloaded. yyyy-MM-dd formatted string, latest version data provided date downloaded. yyyy-mm-ddTHH-MM-SS formatted string, exact match given time stamp sought, exists; otherwise, raises error. na_rm (logical) Specifies whether filter data rows value missing. Defaults TRUE. experiment (string) Either NULL string (\"unofficial\" default). Identifies Bronze/Silver/Gold data layers data downloaded located. empty string. NULL, root folder data layers 3B folder (.e., \"official\" data stored). example, 3B/Silver/.... string, root folder data layers sub-folder within Sandbox layer 3B data lake (e.g., experiment = \"my_exp\", data download 3B/Sandbox/my_exp/{data_layer}/...) silent (logical) Specifies whether show authentication messages download progress bar. Defaults TRUE.","code":""},{"path":"/reference/load_billion_data_xmart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Billions indicator data from xMart — load_billion_data_xmart","text":"data frame.","code":""},{"path":"/reference/load_misc_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Load miscellaneous data — load_misc_data","title":"Load miscellaneous data — load_misc_data","text":"function fetches read data stored 3B/Bronze/misc_data/ folder WHDH data lake.","code":""},{"path":"/reference/load_misc_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load miscellaneous data — load_misc_data","text":"","code":"load_misc_data(file_path, ...)"},{"path":"/reference/load_misc_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load miscellaneous data — load_misc_data","text":"file_path path file inside 3B/Bronze/misc_data folder. File paths must end extension (e.g., .csv) ... additionally arguments pass appropriate read_ function.","code":""},{"path":"/reference/load_misc_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load miscellaneous data — load_misc_data","text":"data frame","code":""},{"path":"/reference/load_misc_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load miscellaneous data — load_misc_data","text":"automatically selects readr::read_csv(), arrow::read_parquet(), readxl::read_excel() based file extension.","code":""},{"path":"/reference/make_default_scenario.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a default scenario — make_default_scenario","title":"Make a default scenario — make_default_scenario","text":"make_default_scenario wraps around recycle_data_scenario_single create default scenario based parameters passed function.","code":""},{"path":"/reference/make_default_scenario.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a default scenario — make_default_scenario","text":"","code":"make_default_scenario(   df,   scenario = \"default\",   billion = c(\"all\", \"hep\", \"hpop\", \"uhc\"),   value_col = \"value\",   start_year = 2018,   end_year = 2025,   scenario_col = \"scenario\",   default_scenario = \"default\",   scenario_reported_estimated = \"routine\",   scenario_covid_shock = \"covid_shock\",   scenario_reference_infilling = \"reference_infilling\",   include_projection = TRUE,   recycle_campaigns = TRUE,   ind_ids = NULL,   trim_years = FALSE )"},{"path":"/reference/make_default_scenario.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a default scenario — make_default_scenario","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. scenario name scenario recycle . Defaults \"default\". billion name billion recycle data . Can \"hep\", \"hpop\", \"uhc\", \"\". Defaults \"\". value_col Column name column indicator values. start_year Base year contribution calculation, defaults 2018. end_year End year(s) contribution calculation, defaults 2019 2025. scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. default_scenario name default scenario. scenario_reported_estimated name reported/estimated scenario. scenario_covid_shock name scenario COVID-19 shock years. scenario_reference_infilling name technical programs projections/imputations scenario. include_projection Boolean include projections recycling recycle_campaigns Boolean include campaigns recycling ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). trim_years logical indicate years start_year end_year removed","code":""},{"path":"/reference/make_default_scenario.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a default scenario — make_default_scenario","text":"Data frame long format.","code":""},{"path":"/reference/make_default_scenario.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make a default scenario — make_default_scenario","text":"details HPOP Billion calculation process function ties rest, see vignette: vignette(\"hpop\", package = \"billionaiRe\")","code":""},{"path":"/reference/pathogen_calc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the vaccine coverage for a specific pathogen — pathogen_calc","title":"Calculate the vaccine coverage for a specific pathogen — pathogen_calc","text":"Using numerators denominators pre-supplied ISO3 year, overall vaccine coverage pathogen calculated. function currently counts number routine vaccinations included numerator, multiplies surviving infants denominator number.","code":""},{"path":"/reference/pathogen_calc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the vaccine coverage for a specific pathogen — pathogen_calc","text":"","code":"pathogen_calc(   df,   name,   numerators,   denominators,   transform_value_col,   source,   ind_ids,   multiply_surviving_infs,   max_value )"},{"path":"/reference/pathogen_calc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the vaccine coverage for a specific pathogen — pathogen_calc","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. name Name pathogen provide data frame. numerators Indicator names numerators. denominators Indicator names denominators. transform_value_col Column name column(s) transformed indicator values, used calculate contributions. source Source use unique source available calculation. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). multiply_surviving_infs Logical, multiple surviving infant population number routine vaccines numerator. max_value Maximum value calculated pathogen value can take.","code":""},{"path":"/reference/pathogen_calc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the vaccine coverage for a specific pathogen — pathogen_calc","text":"function currently called prevent_calculations() function sits within calculate_hep_components().","code":""},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pop_links.html","id":null,"dir":"Reference","previous_headings":"","what":"HPOP Billion population links — pop_links","title":"HPOP Billion population links — pop_links","text":"dataset linking HPOP Billion indicator relevant population groups used double counting correction. Used within generate_hpop_populations().","code":""},{"path":"/reference/pop_links.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HPOP Billion population links — pop_links","text":"","code":"pop_links"},{"path":"/reference/pop_links.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"HPOP Billion population links — pop_links","text":"data frame 254 rows 2 variables: ind HPOP indicator code. pop_group Population group.","code":""},{"path":"/reference/prevent_calculations.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate prevent indicators — prevent_calculations","title":"Calculate prevent indicators — prevent_calculations","text":"function calculates overall vaccine coverage scores pathogen, including overall prevent indicator. used within calculate_hep_components() primarily relies using purrr::pmap_dfr() apply pathogen_calc() function prevent component overall score.","code":""},{"path":"/reference/prevent_calculations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate prevent indicators — prevent_calculations","text":"","code":"prevent_calculations(df, scenario_col, source, transform_value_col, ind_ids)"},{"path":"/reference/prevent_calculations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate prevent indicators — prevent_calculations","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. source Source use unique source available calculation. transform_value_col Column name column(s) transformed indicator values, used calculate contributions. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes().","code":""},{"path":"/reference/recycle_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Recycle data between scenarios — recycle_data","title":"Recycle data between scenarios — recycle_data","text":"recycle_data recycles data scenarios present df reduce size tables stored.","code":""},{"path":"/reference/recycle_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recycle data between scenarios — recycle_data","text":"","code":"recycle_data(   df,   billion = c(\"hep\", \"hpop\", \"uhc\"),   value_col = \"value\",   start_year = 2018,   end_year = 2025,   scenario_col = \"scenario\",   default_scenario = \"default\",   scenario_reported_estimated = \"routine\",   scenario_covid_shock = \"covid_shock\",   scenario_reference_infilling = \"reference_infilling\",   include_projection = TRUE,   recycle_campaigns = TRUE,   ind_ids = NULL,   trim_years = TRUE )"},{"path":"/reference/recycle_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recycle data between scenarios — recycle_data","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. billion name billion recycle data . value_col Column name column indicator values. start_year Base year contribution calculation, defaults 2018. end_year End year(s) contribution calculation, defaults 2019 2025. scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. default_scenario name default scenario. scenario_reported_estimated name reported/estimated scenario. scenario_covid_shock name scenario COVID-19 shock years. scenario_reference_infilling name technical programs projections/imputations scenario. include_projection Boolean include projections recycling recycle_campaigns Boolean include campaigns recycling ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). trim_years logical indicate years start_year end_year removed","code":""},{"path":"/reference/recycle_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recycle data between scenarios — recycle_data","text":"Data frame long format.","code":""},{"path":"/reference/recycle_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Recycle data between scenarios — recycle_data","text":"function wraps around recycle_data_scenario_single scenarios present scenario_col column. recycle_data_scenario_single  reuses values present specified  scenarios default_scenario, scenario_reported_estimated, scenario_reference_infilling specified scenarios. , looks : values default_scenario scenario specified values scenario_reported_estimated scenario specified scenario_reference_infilling values scenario_reference_infilling scenario specified, scenario_reported_estimated scenario_reference_infilling information see: vignette(\"scenarios\", package = \"billionaiRe\")","code":""},{"path":"/reference/recycle_data_scenario_single.html","id":null,"dir":"Reference","previous_headings":"","what":"Recycle data between scenarios for a single scenario — recycle_data_scenario_single","title":"Recycle data between scenarios for a single scenario — recycle_data_scenario_single","text":"recycle_data_scenario_single  reuses values present specified scenarios default_scenario, scenario_reported_estimated, scenario_covid_shock scenario_reference_infilling specified scenarios.","code":""},{"path":"/reference/recycle_data_scenario_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recycle data between scenarios for a single scenario — recycle_data_scenario_single","text":"","code":"recycle_data_scenario_single(   df,   scenario,   billion = c(\"hep\", \"hpop\", \"uhc\"),   value_col = \"value\",   start_year = 2018,   end_year = 2025,   scenario_col = \"scenario\",   default_scenario = \"default\",   scenario_reported_estimated = \"routine\",   scenario_covid_shock = \"covid_shock\",   scenario_reference_infilling = \"reference_infilling\",   include_projection = TRUE,   recycle_campaigns = TRUE,   ind_ids = NULL,   trim_years = FALSE )"},{"path":"/reference/recycle_data_scenario_single.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recycle data between scenarios for a single scenario — recycle_data_scenario_single","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. scenario name scenario recycle . billion name billion recycle data . value_col Column name column indicator values. start_year Base year contribution calculation, defaults 2018. end_year End year(s) contribution calculation, defaults 2019 2025. scenario_col Column name column scenario identifiers. default_scenario name default scenario. scenario_reported_estimated name reported/estimated scenario. scenario_covid_shock name scenario COVID-19 shock years. scenario_reference_infilling name technical programs projections/imputations scenario. include_projection Boolean include projections recycling recycle_campaigns Boolean include campaigns recycling ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). trim_years logical indicate years start_year end_year removed","code":""},{"path":"/reference/recycle_data_scenario_single.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recycle data between scenarios for a single scenario — recycle_data_scenario_single","text":"Data frame long format.","code":""},{"path":"/reference/recycle_data_scenario_single.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Recycle data between scenarios for a single scenario — recycle_data_scenario_single","text":", looks : values default_scenario scenario specified values scenario_reported_estimated scenario_covid_shock scenario specified default_scenario. values scenario_reference_infilling scenario specified, scenario_reported_estimated, scenario_covid_shock, scenario_reference_infilling information see: vignette(\"scenarios\", package = \"billionaiRe\")","code":""},{"path":"/reference/reduce_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper to reduce type to unique value — reduce_type","title":"Helper to reduce type to unique value — reduce_type","text":"Used pathogen_calc()","code":""},{"path":"/reference/reduce_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper to reduce type to unique value — reduce_type","text":"","code":"reduce_type(value, type)"},{"path":"/reference/reduce_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper to reduce type to unique value — reduce_type","text":"value Vector values type Vector types","code":""},{"path":"/reference/remove_recycled_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove recycled values from df — remove_recycled_data","title":"Remove recycled values from df — remove_recycled_data","text":"Remove recycled values df","code":""},{"path":"/reference/remove_recycled_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove recycled values from df — remove_recycled_data","text":"","code":"remove_recycled_data(   df,   recycled = \"recycled\",   scenario_col = \"scenario\",   scenario_reported_estimated = \"routine\",   scenario_covid_shock = \"covid_shock\",   scenario_reference_infilling = \"reference_infilling\" )"},{"path":"/reference/remove_recycled_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove recycled values from df — remove_recycled_data","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. recycled name boolean recycle column whether data recycled . Default \"recycle\". scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. scenario_reported_estimated name reported/estimated scenario. scenario_covid_shock name scenario COVID-19 shock years. scenario_reference_infilling name technical programs projections/imputations scenario.","code":""},{"path":"/reference/remove_recycled_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove recycled values from df — remove_recycled_data","text":"Data frame long format without recycled values","code":""},{"path":"/reference/reverse_ind.html","id":null,"dir":"Reference","previous_headings":"","what":"Reverse indicator value — reverse_ind","title":"Reverse indicator value — reverse_ind","text":"Typically reversed maximum 100","code":""},{"path":"/reference/reverse_ind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reverse indicator value — reverse_ind","text":"","code":"reverse_ind(x, lim = 100)"},{"path":"/reference/reverse_ind.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reverse indicator value — reverse_ind","text":"x Indicator value. lim Value reverse , defaults 100.","code":""},{"path":"/reference/save_gho_backup_to_whdh.html","id":null,"dir":"Reference","previous_headings":"","what":"Backup GHO data to the WHDH Data Lake — save_gho_backup_to_whdh","title":"Backup GHO data to the WHDH Data Lake — save_gho_backup_to_whdh","text":"function simplifies process creating backups snapshots GHO data saving WHDH data lake.","code":""},{"path":"/reference/save_gho_backup_to_whdh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Backup GHO data to the WHDH Data Lake — save_gho_backup_to_whdh","text":"","code":"save_gho_backup_to_whdh(df, billion, ind_code, silent = FALSE)"},{"path":"/reference/save_gho_backup_to_whdh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Backup GHO data to the WHDH Data Lake — save_gho_backup_to_whdh","text":"df response GHO API, typically result calling ghost::gho_data(). billion billion indicator belongs ind_code GPW13 code indicator silent Passed whdh::upload_to_data_lake(). Determines upload messages progress bar shown","code":""},{"path":"/reference/save_gho_backup_to_whdh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Backup GHO data to the WHDH Data Lake — save_gho_backup_to_whdh","text":"original data frame","code":""},{"path":"/reference/save_gho_backup_to_whdh.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Backup GHO data to the WHDH Data Lake — save_gho_backup_to_whdh","text":"returns input data frame, without changes.","code":""},{"path":"/reference/save_wrangled_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Save the output to disk after ensuring column specs — save_wrangled_output","title":"Save the output to disk after ensuring column specs — save_wrangled_output","text":"Helper functions saves wrangled output data frame disk correct columns required Triple Billions xMart tables.","code":""},{"path":"/reference/save_wrangled_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save the output to disk after ensuring column specs — save_wrangled_output","text":"","code":"save_wrangled_output(   df,   path,   data_type = c(\"wrangled_data\", \"projected_data\", \"final_data\"),   na_rm = FALSE,   compression = \"gzip\" )"},{"path":"/reference/save_wrangled_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save the output to disk after ensuring column specs — save_wrangled_output","text":"df data frame output path path output saved data_type (string): type data wrangled_data (default): raw data wrangled suitable form analysis. projected_data:  data fully projected target year yet transformed calculated upon. final_data: complete set billions data transformed values, contributions, calculations available. na_rm (logical) Specifies whether remove rows value missing. Defaults FALSE. compression Compression algorithm use parquet format. \"gzip\" default","code":""},{"path":"/reference/save_wrangled_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save the output to disk after ensuring column specs — save_wrangled_output","text":"data frame. Note modified version input function (removing empty rows na_rm = TRUE) carried output.","code":""},{"path":"/reference/save_wrangled_output.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save the output to disk after ensuring column specs — save_wrangled_output","text":"function returns data frame (like readr::write_csv()) order allow work pipes better.","code":""},{"path":"/reference/scenario_aroc.html","id":null,"dir":"Reference","previous_headings":"","what":"Scenario to use the average annual rate of change — scenario_aroc","title":"Scenario to use the average annual rate of change — scenario_aroc","text":"scenario_aroc uses annual rate change (AROC) different cases calculate values scenario:","code":""},{"path":"/reference/scenario_aroc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scenario to use the average annual rate of change — scenario_aroc","text":"","code":"scenario_aroc(   df,   value_col = \"value\",   start_year = 2018,   end_year = 2025,   baseline_year = start_year,   target_year = end_year,   target_value = NULL,   percent_change = NULL,   aroc_type = c(\"target\", \"latest\", \"percent_change\"),   scenario_name = glue::glue(\"aroc_{aroc_type}\"),   scenario_col = \"scenario\",   limit_aroc_direction = NULL,   limit_aroc_value = 0,   trim = TRUE,   small_is_best = FALSE,   keep_better_values = TRUE,   upper_limit = 100,   lower_limit = 0,   trim_years = TRUE,   ind_ids = billion_ind_codes(\"all\"),   default_scenario = \"default\" )"},{"path":"/reference/scenario_aroc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scenario to use the average annual rate of change — scenario_aroc","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. value_col Column name column indicator values. start_year Start year scenario, defaults 2018. end_year End year scenario, defaults 2025 baseline_year Year scenario measured. Defaults start_year target_year Year scenario eventually achieved. Defaults end_year target_value value reached. Used aroc_type target. expressed percentage point fraction 100 (e.g. 6% increase = 6, 0.06). percent_change Numeric percent_change. expressed percentage point fraction 100 (e.g. 6% increase = 6, 0.06). aroc_type String identifying type AROC. Can target,latest percent_change. See details. Defaults target. scenario_name Name scenario. Defaults scenario_percent_change_baseline_year scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. limit_aroc_direction string identify positive negative AROC limited limit_aroc_value. NULL (default), limitation applied limit_aroc_value numeric values AROC limited . limit_aroc_direction positive, take maximum limit_aroc_value AROC. negative, take minimum 0 AROC. Defaults 0. Ignored limit_aroc_direction NULL (default). trim logical indicate data trimmed upper_limit lower_limit. small_is_best Logical identify lower value better higher one (e.g. lower obesity positive public health outcome, obesity rate small_is_best = TRUE). keep_better_values logical indicate \"better\" values kept value_col present. Follows direction set small_is_best.  instance, small_is_best TRUE, value_col lower col kept. upper_limit limit indicator caped. Can take \"guess\", numeric. guess (default) take 100 limit percent_change positive, 0 negative. lower_limit limit indicator caped. Can take \"guess\", 0 100. guess (default) take 0 limit percent_change positive, 100 negative. trim_years logical indicate years start_year end_year removed ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). default_scenario name default scenario used.","code":""},{"path":"/reference/scenario_aroc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scenario to use the average annual rate of change — scenario_aroc","text":"Dataframe scenario rows","code":""},{"path":"/reference/scenario_aroc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scenario to use the average annual rate of change — scenario_aroc","text":"target: aims specific target_value target_year latest: takes AROC baseline_year previous year percent_change: applies percent_change  AROC baseline_year. function different scenario_percent_baseline scenario_linear_change uses percentage difference percentage points difference. AROC use general compounded rate change formula: AROC(Value(year_n), Value(year_0)) = (Value(year_n) / Value(year_0)) ^ (1 / (year_n -  year_0)) - 1 direction_limit_aroc combination limit_aroc allows limit AROC value given direction. can helpful avoid extreme values AROC unknown passed function.direction_limit_aroc positive, AROC minimum calculated AROC limit_aroc. negative, maximum AROC ","code":""},{"path":"/reference/scenario_bau.html","id":null,"dir":"Reference","previous_headings":"","what":"Scenario establish a business as usual scenario — scenario_bau","title":"Scenario establish a business as usual scenario — scenario_bau","text":"scenario_bau filters values start_year end_year default_scenario returns values value. values missing years start_year end_year, last available value imputed.","code":""},{"path":"/reference/scenario_bau.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scenario establish a business as usual scenario — scenario_bau","text":"","code":"scenario_bau(   df,   only_reported_estimated = FALSE,   value_col = \"value\",   start_year = 2018,   end_year = 2025,   scenario_name = glue::glue(\"business_as_usual\"),   scenario_col = \"scenario\",   trim = TRUE,   small_is_best = FALSE,   keep_better_values = TRUE,   upper_limit = 100,   lower_limit = 0,   trim_years = TRUE,   ind_ids = billion_ind_codes(\"all\"),   default_scenario = \"default\" )"},{"path":"/reference/scenario_bau.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scenario establish a business as usual scenario — scenario_bau","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. only_reported_estimated (logical) TRUE last reported estimated values imputed. value_col Column name column indicator values. start_year Start year scenario, defaults 2018. end_year End year scenario, defaults 2025 scenario_name Name scenario. Defaults scenario_percent_change_baseline_year scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. trim logical indicate data trimmed upper_limit lower_limit. small_is_best Logical identify lower value better higher one (e.g. lower obesity positive public health outcome, obesity rate small_is_best = TRUE). keep_better_values logical indicate \"better\" values kept value_col present. Follows direction set small_is_best.  instance, small_is_best TRUE, value_col lower col kept. upper_limit limit indicator caped. Can take \"guess\", numeric. guess (default) take 100 limit percent_change positive, 0 negative. lower_limit limit indicator caped. Can take \"guess\", 0 100. guess (default) take 0 limit percent_change positive, 100 negative. trim_years logical indicate years start_year end_year removed ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). default_scenario name default scenario used.","code":""},{"path":"/reference/scenario_bau.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scenario establish a business as usual scenario — scenario_bau","text":"Dataframe scenario rows","code":""},{"path":"/reference/scenario_bau.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scenario establish a business as usual scenario — scenario_bau","text":"returned scenario portion straight line drawn baseline_year value target_year. values years start_year end_year returned. value_col values higher lower scenario values, value_col kept, depending small_is_best. instance, scenario value 80 value 75 small_is_best TRUE, 75 kept.","code":""},{"path":"/reference/scenario_best_in_region.html","id":null,"dir":"Reference","previous_headings":"","what":"Scenario to add a linear percentage point aimed at regional values — scenario_best_in_region","title":"Scenario to add a linear percentage point aimed at regional values — scenario_best_in_region","text":"scenario_best_in_region aims reach mean regional average annual change country quantile_year. target based ARC quantile_year quantile_year - 5. ARC mean region, aim mean, best value quantile mean. small_is_best can used indicate lower value best .","code":""},{"path":"/reference/scenario_best_in_region.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scenario to add a linear percentage point aimed at regional values — scenario_best_in_region","text":"","code":"scenario_best_in_region(   df,   value_col = \"value\",   start_year = 2018,   end_year = 2025,   baseline_year = 2018,   target_year = 2013,   scenario_col = \"scenario\",   scenario_name = \"best_in_region\",   ind_ids = billion_ind_codes(\"all\"),   trim = TRUE,   small_is_best = FALSE,   keep_better_values = TRUE,   upper_limit = 100,   lower_limit = 0,   trim_years = TRUE )"},{"path":"/reference/scenario_best_in_region.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scenario to add a linear percentage point aimed at regional values — scenario_best_in_region","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. value_col Column name column indicator values. start_year Start year scenario, defaults 2018. end_year End year scenario, defaults 2025 baseline_year Year scenario measured. Defaults start_year target_year Year scenario eventually achieved. Defaults end_year scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. scenario_name Name scenario. Defaults scenario_percent_change_baseline_year ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). trim logical indicate data trimmed upper_limit lower_limit. small_is_best Logical identify lower value better higher one (e.g. lower obesity positive public health outcome, obesity rate small_is_best = TRUE). keep_better_values logical indicate \"better\" values kept value_col present. Follows direction set small_is_best.  instance, small_is_best TRUE, value_col lower col kept. upper_limit limit indicator caped. Can take \"guess\", numeric. guess (default) take 100 limit percent_change positive, 0 negative. lower_limit limit indicator caped. Can take \"guess\", 0 100. guess (default) take 0 limit percent_change positive, 100 negative. trim_years logical indicate years start_year end_year removed","code":""},{"path":"/reference/scenario_best_in_region.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scenario to add a linear percentage point aimed at regional values — scenario_best_in_region","text":"Dataframe scenario rows","code":""},{"path":"/reference/scenario_best_in_region.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scenario to add a linear percentage point aimed at regional values — scenario_best_in_region","text":"Calculates regional target, wraps around scenario_linear_change_col aim target.","code":""},{"path":"/reference/scenario_best_of.html","id":null,"dir":"Reference","previous_headings":"","what":"Scenario to pick the best scenario out of a list of scenarios — scenario_best_of","title":"Scenario to pick the best scenario out of a list of scenarios — scenario_best_of","text":"scenario_best_of picks best value multiple scenarios specified scenario_names. small_is_best allows pick higher value smaller values best.","code":""},{"path":"/reference/scenario_best_of.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scenario to pick the best scenario out of a list of scenarios — scenario_best_of","text":"","code":"scenario_best_of(   df,   scenario_names,   value_col = \"value\",   maximize_end_year = FALSE,   start_year = 2018,   end_year = 2025,   target_year = 2025,   scenario_name = glue::glue(\"best_of_{paste0(scenario_names, collapse = '_')}\"),   scenario_col = \"scenario\",   trim = TRUE,   small_is_best = FALSE,   keep_better_values = TRUE,   upper_limit = 100,   lower_limit = 0,   trim_years = TRUE,   ind_ids = billion_ind_codes(\"all\") )"},{"path":"/reference/scenario_best_of.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scenario to pick the best scenario out of a list of scenarios — scenario_best_of","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. scenario_names names scenario pick . value_col Column name column indicator values. maximize_end_year (bollean) TRUE, best scenario picked best value end_year. Default FALSE. start_year Start year scenario, defaults 2018. end_year End year scenario, defaults 2025 target_year Year scenario eventually achieved. Defaults end_year scenario_name Name scenario. Defaults scenario_percent_change_baseline_year scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. trim logical indicate data trimmed upper_limit lower_limit. small_is_best Logical identify lower value better higher one (e.g. lower obesity positive public health outcome, obesity rate small_is_best = TRUE). keep_better_values logical indicate \"better\" values kept value_col present. Follows direction set small_is_best.  instance, small_is_best TRUE, value_col lower col kept. upper_limit limit indicator caped. Can take \"guess\", numeric. guess (default) take 100 limit percent_change positive, 0 negative. lower_limit limit indicator caped. Can take \"guess\", 0 100. guess (default) take 0 limit percent_change positive, 100 negative. trim_years logical indicate years start_year end_year removed ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes().","code":""},{"path":"/reference/scenario_best_of.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scenario to pick the best scenario out of a list of scenarios — scenario_best_of","text":"Dataframe scenario rows","code":""},{"path":"/reference/scenario_best_of.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scenario to pick the best scenario out of a list of scenarios — scenario_best_of","text":"multiple scenario tied best scenario, scenario best time series iso3 ind picked. still tied scenarios best value, first alphabetical order picked.","code":""},{"path":"/reference/scenario_covid_delayed_return.html","id":null,"dir":"Reference","previous_headings":"","what":"Scenario COVID delayed return to normal — scenario_covid_delayed_return","title":"Scenario COVID delayed return to normal — scenario_covid_delayed_return","text":"scenario_covid_delayed_return creates scenario delayed number years covid_year recovery_year returning pre-pandemic situation.","code":""},{"path":"/reference/scenario_covid_delayed_return.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scenario COVID delayed return to normal — scenario_covid_delayed_return","text":"","code":"scenario_covid_delayed_return(   df,   start_year = 2018,   covid_year = 2020,   recovery_year = 2023,   end_year = 2025,   value_col = \"value\",   scenario_col = \"scenario\",   scenario_name = \"covid_delayed_return\",   ind_ids = billion_ind_codes(\"all\"),   default_scenario = \"default\",   ... )"},{"path":"/reference/scenario_covid_delayed_return.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scenario COVID delayed return to normal — scenario_covid_delayed_return","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. start_year Start year scenario, defaults 2018. covid_year (integer) year values impacted COVID. recovery_year integer year AROC applied. Default 2023. end_year End year scenario, defaults 2025 value_col Column name column indicator values. column used return results. scenario_col name scenario column created scenario_name name scenario ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). default_scenario name default scenario. ... additional parameters passed scenario_dip_recover_iso3()","code":""},{"path":"/reference/scenario_covid_delayed_return.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scenario COVID delayed return to normal — scenario_covid_delayed_return","text":"data frame scenario values value_col scenario_col column.","code":""},{"path":"/reference/scenario_covid_delayed_return.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scenario COVID delayed return to normal — scenario_covid_delayed_return","text":"details, AROC  start_year  covid_year - 1 applied last reported value recovery_year onward. missing values covid_year recovery_year, last value covid_year carried forward. applies countries indicator value covid_year reported estimated. Otherwise, value carried scenario_bau.","code":""},{"path":"/reference/scenario_covid_never_return.html","id":null,"dir":"Reference","previous_headings":"","what":"Scenario COVID never return to normal — scenario_covid_never_return","title":"Scenario COVID never return to normal — scenario_covid_never_return","text":"scenario_covid_rapid_return creates scenario return pre-pandemic situation.","code":""},{"path":"/reference/scenario_covid_never_return.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scenario COVID never return to normal — scenario_covid_never_return","text":"","code":"scenario_covid_never_return(   df,   start_year = 2018,   covid_year = 2020,   recovery_year = 2060,   end_year = 2025,   value_col = \"value\",   scenario_col = \"scenario\",   scenario_name = \"covid_never_return\",   ind_ids = billion_ind_codes(\"all\"),   default_scenario = \"default\",   ... )"},{"path":"/reference/scenario_covid_never_return.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scenario COVID never return to normal — scenario_covid_never_return","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. start_year Start year scenario, defaults 2018. covid_year (integer) year values impacted COVID. recovery_year integer year AROC applied. Default 2060. end_year End year scenario, defaults 2025 value_col Column name column indicator values. column used return results. scenario_col name scenario column created scenario_name name scenario ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). default_scenario name default scenario. ... additional parameters passed scenario_dip_recover_iso3()","code":""},{"path":"/reference/scenario_covid_never_return.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scenario COVID never return to normal — scenario_covid_never_return","text":"data frame scenario values value_col scenario_col column.","code":""},{"path":"/reference/scenario_covid_never_return.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scenario COVID never return to normal — scenario_covid_never_return","text":"details, last value covid_year carried forward. applies countries indicator value covid_year reported estimated. Otherwise, value carried scenario_bau.","code":""},{"path":"/reference/scenario_covid_rapid_return.html","id":null,"dir":"Reference","previous_headings":"","what":"Scenario COVID rapid return to normal — scenario_covid_rapid_return","title":"Scenario COVID rapid return to normal — scenario_covid_rapid_return","text":"scenario_covid_rapid_return creates scenario rapid return pre-pandemic situation dip due COVID-19.","code":""},{"path":"/reference/scenario_covid_rapid_return.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scenario COVID rapid return to normal — scenario_covid_rapid_return","text":"","code":"scenario_covid_rapid_return(   df,   start_year = 2018,   covid_year = 2020,   recovery_year = 2022,   end_year = 2025,   value_col = \"value\",   scenario_col = \"scenario\",   scenario_name = \"covid_rapid_return\",   ind_ids = billion_ind_codes(\"all\"),   default_scenario = \"default\",   ... )"},{"path":"/reference/scenario_covid_rapid_return.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scenario COVID rapid return to normal — scenario_covid_rapid_return","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. start_year Start year scenario, defaults 2018. covid_year (integer) year values impacted COVID. recovery_year integer year AROC applied. Default 2022. end_year End year scenario, defaults 2025 value_col Column name column indicator values. column used return results. scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. scenario_name name scenario ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). default_scenario name default scenario. ... additional parameters passed scenario_dip_recover_iso3() scenario name scenario column created","code":""},{"path":"/reference/scenario_covid_rapid_return.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scenario COVID rapid return to normal — scenario_covid_rapid_return","text":"data frame scenario values value_col scenario_col column.","code":""},{"path":"/reference/scenario_covid_rapid_return.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scenario COVID rapid return to normal — scenario_covid_rapid_return","text":"details, AROC  start_year  covid_year - 1 applied last reported value recovery_year onward. missing values covid_year recovery_year, last value covid_year carried forward. applies countries indicator value covid_year reported estimated. Otherwise, value carried scenario_bau.","code":""},{"path":"/reference/scenario_covid_sustained_disruption.html","id":null,"dir":"Reference","previous_headings":"","what":"Scenario COVID sustained disruption to normal — scenario_covid_sustained_disruption","title":"Scenario COVID sustained disruption to normal — scenario_covid_sustained_disruption","text":"scenario_covid_delayed_return creates scenario delayed one year progressivelly returning pre-pendemic situation.","code":""},{"path":"/reference/scenario_covid_sustained_disruption.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scenario COVID sustained disruption to normal — scenario_covid_sustained_disruption","text":"","code":"scenario_covid_sustained_disruption(   df,   start_year = 2018,   covid_year = 2020,   recovery_year = 2022,   progressive_recovery = TRUE,   end_year = 2025,   value_col = \"value\",   scenario_col = \"scenario\",   scenario_name = \"covid_sustained_disruption\",   ind_ids = billion_ind_codes(\"all\"),   default_scenario = \"default\",   ... )"},{"path":"/reference/scenario_covid_sustained_disruption.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scenario COVID sustained disruption to normal — scenario_covid_sustained_disruption","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. start_year Start year scenario, defaults 2018. covid_year (integer) year values impacted COVID. recovery_year integer year AROC applied. Default 2022. progressive_recovery (logical) TRUE recovery COVID-19 progressive. end_year End year scenario, defaults 2025 value_col Column name column indicator values. column used return results. scenario_col name scenario column created scenario_name name scenario ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). default_scenario name default scenario. ... additional parameters passed scenario_dip_recover_iso3()","code":""},{"path":"/reference/scenario_covid_sustained_disruption.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scenario COVID sustained disruption to normal — scenario_covid_sustained_disruption","text":"data frame scenario values value_col scenario_col column.","code":""},{"path":"/reference/scenario_covid_sustained_disruption.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scenario COVID sustained disruption to normal — scenario_covid_sustained_disruption","text":"details, AROC  start_year  covid_year - 1 applied last reported value recovery_year onward progressive way: full AROC applied end_year; otherwise recovery spread years recovery_year end_year. instance, recovery_year 2021 end_year 2025, 2021 0% AROC, 2022 25%, 2023 50%, 2024 75%, 2025 100%. missing values covid_year recovery_year, last value covid_year carried forward. applies countries indicator value covid_year reported estimated. Otherwise, value carried scenario_bau.","code":""},{"path":"/reference/scenario_dip_recover.html","id":null,"dir":"Reference","previous_headings":"","what":"Scenario dip and recover — scenario_dip_recover","title":"Scenario dip and recover — scenario_dip_recover","text":"scenario_dip_recover creates scenario rapid return previous situation dip. annual rate change (AROC) dip applied recovery_year.","code":""},{"path":"/reference/scenario_dip_recover.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scenario dip and recover — scenario_dip_recover","text":"","code":"scenario_dip_recover(   df,   start_year = 2018,   dip_year = 2020,   recovery_year = 2021,   progressive_recovery = FALSE,   aroc_type = c(\"lastest_year\", \"average_years_in_range\"),   aroc_start_year = start_year,   end_year = 2025,   value_col = \"value\",   scenario_col = \"scenario\",   scenario_name = \"dip_recover\",   ind_ids = billion_ind_codes(\"all\"),   default_scenario = \"default\",   source = sprintf(\"WHO DDI, %s\", format(Sys.Date(), \"%B %Y\")),   ... )"},{"path":"/reference/scenario_dip_recover.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scenario dip and recover — scenario_dip_recover","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. start_year Start year scenario, defaults 2018. dip_year (integer) year dip appends recovery_year (integer) year AROC applied progressive_recovery (logical) TRUE recovery dip progressive. aroc_type (character) name type AROC used. Can either: lastest_year: latest reported/estimated year start_year dip_year used calculate average_years_in_range: aroc_start_year (integer) year end_year End year scenario, defaults 2025 value_col Column name column indicator values. column used return results. scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. scenario_name name scenario ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). default_scenario name default scenario. source Source use unique source available calculation. ... additional parameters passed scenario_dip_recover_iso3() scenario name scenario column created","code":""},{"path":"/reference/scenario_dip_recover.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scenario dip and recover — scenario_dip_recover","text":"data frame scenario values value_col scenario column.","code":""},{"path":"/reference/scenario_dip_recover.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scenario dip and recover — scenario_dip_recover","text":"Two types AROC supported: lastest_year: AROC calculated values start_year last reported estimated value dip_year applied last reported value recovery_year onward. average_years_in_range: AROC aroc_start_year last reported estimated value dip_year calculated. average AROC period applied last reported value recovery_year onward. missing values dip_year recovery_year, last value dip_year carried forward. applies countries indicator value dip_year reported estimated. Otherwise, value carried scenario_bau. progressive_recovery TRUE, recovery spread years recovery_year end_year. instance, recovery_year 2021 end_year 2025, 2021 0% AROC, 2022 25%, 2023 50%, 2024 75%, 2025 100%.","code":""},{"path":"/reference/scenario_dip_recover_iso3.html","id":null,"dir":"Reference","previous_headings":"","what":"Scenario dip and recover to specific iso3 — scenario_dip_recover_iso3","title":"Scenario dip and recover to specific iso3 — scenario_dip_recover_iso3","text":"Applies scenario_dip_recover() specific iso3.","code":""},{"path":"/reference/scenario_dip_recover_iso3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scenario dip and recover to specific iso3 — scenario_dip_recover_iso3","text":"","code":"scenario_dip_recover_iso3(   df,   iso3,   start_year = 2018,   dip_year = 2020,   recovery_year = 2021,   progressive_recovery = FALSE,   aroc_type = c(\"lastest_year\", \"average_years_in_range\"),   aroc_start_year = start_year,   end_year = 2025,   value_col = \"value\",   scenario_col = \"scenario\",   scenario_name = \"dip_recover\",   trim = TRUE,   small_is_best = FALSE,   keep_better_values = FALSE,   upper_limit = 100,   lower_limit = 0,   trim_years = TRUE,   ind_ids = billion_ind_codes(\"all\"),   source = sprintf(\"WHO DDI, %s\", format(Sys.Date(), \"%B %Y\")),   default_scenario = \"default\" )"},{"path":"/reference/scenario_dip_recover_iso3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scenario dip and recover to specific iso3 — scenario_dip_recover_iso3","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. iso3 (character) ISO3 code country scenario start_year Start year scenario, defaults 2018. dip_year (integer) year dip appends recovery_year (integer) year AROC applied progressive_recovery (logical) TRUE recovery dip progressive. aroc_type (character) name type AROC used. Can either: lastest_year: latest reported/estimated year start_year dip_year used calculate average_years_in_range: aroc_start_year (integer) year end_year End year scenario, defaults 2025 value_col Column name column indicator values. column used return results. scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. scenario_name name scenario trim logical indicate data trimmed upper_limit lower_limit. small_is_best Logical identify lower value better higher one (e.g. lower obesity positive public health outcome, obesity rate small_is_best = TRUE). keep_better_values logical indicate \"better\" values kept value_col present. Follows direction set small_is_best.  instance, small_is_best TRUE, value_col lower col kept. upper_limit upper limit indicator caped. lower_limit lower_limit limit indicator caped. trim_years logical indicate years start_year end_year removed ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). source Source use unique source available calculation. default_scenario name default scenario.","code":""},{"path":"/reference/scenario_dip_recover_iso3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scenario dip and recover to specific iso3 — scenario_dip_recover_iso3","text":"data frame scenario values value_col scenario column.","code":""},{"path":"/reference/scenario_dip_recover_iso3.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scenario dip and recover to specific iso3 — scenario_dip_recover_iso3","text":"Two types AROC supported: lastest_year: AROC calculated values start_year last reported estimated value dip_year applied last reported value recovery_year onward. average_years_in_range: AROC aroc_start_year last reported estimated value dip_year calculated. average AROC period applied last reported value recovery_year onward. missing values dip_year recovery_year, last value dip_year carried forward. applies countries indicator value dip_year reported estimated. Otherwise, value carried scenario_bau. progressive_recovery TRUE, recovery spread years recovery_year end_year. instance, recovery_year 2021 end_year 2025, 2021 0% AROC, 2022 25%, 2023 50%, 2024 75%, 2025 100%.","code":""},{"path":"/reference/scenario_dip_recover_iso3_ind.html","id":null,"dir":"Reference","previous_headings":"","what":"Scenario dip and recover to specific ind and iso3 — scenario_dip_recover_iso3_ind","title":"Scenario dip and recover to specific ind and iso3 — scenario_dip_recover_iso3_ind","text":"Applies scenario_dip_recover() specific ind iso3 combination.","code":""},{"path":"/reference/scenario_dip_recover_iso3_ind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scenario dip and recover to specific ind and iso3 — scenario_dip_recover_iso3_ind","text":"","code":"scenario_dip_recover_iso3_ind(   df,   iso3,   ind,   dip_year = 2020,   recovery_year = 2021,   progressive_recovery = FALSE,   aroc_type = c(\"lastest_year\", \"average_years_in_range\"),   aroc_start_year = start_year,   baseline_year = 2018,   last_year = NULL,   start_year = 2018,   end_year = 2025,   value_col = \"value\",   scenario_col = \"scenario\",   scenario_name = \"dip_recover\",   ind_ids = billion_ind_codes(\"all\"),   default_scenario = \"default\",   trim = TRUE,   small_is_best = FALSE,   keep_better_values = FALSE,   upper_limit = 100,   lower_limit = 0,   trim_years = TRUE,   source = sprintf(\"WHO DDI, %s\", format(Sys.Date(), \"%B %Y\")) )"},{"path":"/reference/scenario_dip_recover_iso3_ind.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scenario dip and recover to specific ind and iso3 — scenario_dip_recover_iso3_ind","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. iso3 (character) name ISO3 country code calculate scenario ind (character) name indicator calculate scenario dip_year (integer) year dip appends recovery_year (integer) year AROC applied progressive_recovery (logical) TRUE recovery dip progressive. aroc_type (character) name type AROC used. Can either: lastest_year: latest reported/estimated year start_year dip_year used calculate average_years_in_range: aroc_start_year (integer) year baseline_year (integer) identify baseline year AROC calculated. last_year (integer) identify last year values reported estimated start_year end_year. start_year Start year scenario, defaults 2018. end_year End year scenario, defaults 2025 value_col Column name column indicator values. column used return results. scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. scenario_name name scenario ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). default_scenario name default scenario. trim logical indicate data trimmed upper_limit lower_limit. small_is_best Logical identify lower value better higher one (e.g. lower obesity positive public health outcome, obesity rate small_is_best = TRUE). keep_better_values logical indicate \"better\" values kept value_col present. Follows direction set small_is_best.  instance, small_is_best TRUE, value_col lower col kept. upper_limit upper limit indicator caped. lower_limit lower_limit limit indicator caped. trim_years logical indicate years start_year end_year removed source Source use unique source available calculation.","code":""},{"path":"/reference/scenario_dip_recover_iso3_ind.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scenario dip and recover to specific ind and iso3 — scenario_dip_recover_iso3_ind","text":"data frame scenario values value_col scenario column.","code":""},{"path":"/reference/scenario_dip_recover_iso3_ind.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scenario dip and recover to specific ind and iso3 — scenario_dip_recover_iso3_ind","text":"Two types AROC supported: lastest_year: AROC calculated values start_year last reported estimated value dip_year applied last reported value recovery_year onward. average_years_in_range: AROC aroc_start_year last reported estimated value dip_year calculated. average AROC period applied last reported value recovery_year onward. missing values dip_year recovery_year, last value dip_year carried forward. applies countries indicator value dip_year reported estimated. Otherwise, value carried scenario_bau. progressive_recovery TRUE, recovery spread years recovery_year end_year. instance, recovery_year 2021 end_year 2025, 2021 0% AROC, 2022 25%, 2023 50%, 2024 75%, 2025 100%.","code":""},{"path":"/reference/scenario_fixed_target.html","id":null,"dir":"Reference","previous_headings":"","what":"Scenario to reach a fixed target from a baseline year by a target year — scenario_fixed_target","title":"Scenario to reach a fixed target from a baseline year by a target year — scenario_fixed_target","text":"scenario allows reach target value baseline year target year provides values scenarios stated \"Reach XX% INDICATOR YEAR\" \"Eliminate XX YEAR\".","code":""},{"path":"/reference/scenario_fixed_target.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scenario to reach a fixed target from a baseline year by a target year — scenario_fixed_target","text":"","code":"scenario_fixed_target(   df,   target_value,   value_col = \"value\",   scenario_col = \"scenario\",   start_year = 2018,   end_year = 2025,   baseline_year = start_year,   target_year = end_year,   scenario_name = glue::glue(\"{target_value}_{target_year}\"),   small_is_best = FALSE,   trim = TRUE,   keep_better_values = TRUE,   upper_limit = 100,   lower_limit = 0,   trim_years = TRUE,   ind_ids = billion_ind_codes(\"all\"),   default_scenario = \"default\" )"},{"path":"/reference/scenario_fixed_target.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scenario to reach a fixed target from a baseline year by a target year — scenario_fixed_target","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. target_value value achieved scenario target_year value_col Column name column indicator values. scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. start_year Start year scenario, defaults 2018. end_year End year scenario, defaults 2025 baseline_year Year scenario measured. Defaults start_year target_year Year scenario eventually achieved. Defaults end_year scenario_name Name scenario. Defaults scenario_percent_change_baseline_year small_is_best Logical identify lower value better higher one (e.g. lower obesity positive public health outcome, obesity rate small_is_best = TRUE). trim logical indicate data trimmed upper_limit lower_limit. keep_better_values logical indicate \"better\" values kept value_col present. Follows direction set small_is_best.  instance, small_is_best TRUE, value_col lower col kept. upper_limit limit indicator caped. Can take \"guess\", numeric. guess (default) take 100 limit percent_change positive, 0 negative. lower_limit limit indicator caped. Can take \"guess\", 0 100. guess (default) take 0 limit percent_change positive, 100 negative. trim_years logical indicate years start_year end_year removed ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). default_scenario name default scenario used.","code":""},{"path":"/reference/scenario_fixed_target.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scenario to reach a fixed target from a baseline year by a target year — scenario_fixed_target","text":"Dataframe scenario rows","code":""},{"path":"/reference/scenario_fixed_target.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scenario to reach a fixed target from a baseline year by a target year — scenario_fixed_target","text":"returned scenario portion straight line drawn baseline_year value target_year. values years start_year end_year returned. value_col values higher lower scenario values, value_col kept, depending small_is_best. instance, scenario value 80 value 75 small_is_best TRUE, 75 kept.","code":""},{"path":"/reference/scenario_fixed_target_col.html","id":null,"dir":"Reference","previous_headings":"","what":"Scenario to reach a fixed targets stored in a column — scenario_fixed_target_col","title":"Scenario to reach a fixed targets stored in a column — scenario_fixed_target_col","text":"scenario_fixed_target_col wraps around scenario_fixed_target provide targets column specified target_col rather single value.","code":""},{"path":"/reference/scenario_fixed_target_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scenario to reach a fixed targets stored in a column — scenario_fixed_target_col","text":"","code":"scenario_fixed_target_col(   df,   value_col = \"value\",   scenario_col = \"scenario\",   start_year = 2018,   end_year = 2025,   baseline_year = start_year,   target_col = \"target\",   target_year = end_year,   scenario_name = glue::glue(\"{target_col}_{target_year}\"),   small_is_best = FALSE,   trim = TRUE,   keep_better_values = TRUE,   upper_limit = 100,   lower_limit = 0,   trim_years = TRUE,   ind_ids = billion_ind_codes(\"all\"),   default_scenario = \"default\" )"},{"path":"/reference/scenario_fixed_target_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scenario to reach a fixed targets stored in a column — scenario_fixed_target_col","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. value_col Column name column indicator values. scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. start_year Start year scenario, defaults 2018. end_year End year scenario, defaults 2025 baseline_year Year scenario measured. Defaults start_year target_col name column targets target_year Year scenario eventually achieved. Defaults end_year scenario_name Name scenario. Defaults scenario_percent_change_baseline_year small_is_best Logical identify lower value better higher one (e.g. lower obesity positive public health outcome, obesity rate small_is_best = TRUE). trim logical indicate data trimmed upper_limit lower_limit. keep_better_values logical indicate \"better\" values kept value_col present. Follows direction set small_is_best.  instance, small_is_best TRUE, value_col lower col kept. upper_limit limit indicator caped. Can take \"guess\", numeric. guess (default) take 100 limit percent_change positive, 0 negative. lower_limit limit indicator caped. Can take \"guess\", 0 100. guess (default) take 0 limit percent_change positive, 100 negative. trim_years logical indicate years start_year end_year removed ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). default_scenario name default scenario used.","code":""},{"path":"/reference/scenario_fixed_target_col.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scenario to reach a fixed targets stored in a column — scenario_fixed_target_col","text":"Dataframe scenario rows","code":""},{"path":"/reference/scenario_fixed_target_col.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scenario to reach a fixed targets stored in a column — scenario_fixed_target_col","text":"returned scenario portion straight line drawn baseline_year value target_year. values years start_year end_year returned. value_col values higher lower scenario values, value_col kept, depending small_is_best. instance, scenario value 80 value 75 small_is_best TRUE, 75 kept.","code":""},{"path":"/reference/scenario_halt_rise.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate halt rise scenarios — scenario_halt_rise","title":"Calculate halt rise scenarios — scenario_halt_rise","text":"Special case scenario_percent_baseline `percent_change` = 0. Provided convenience function.","code":""},{"path":"/reference/scenario_halt_rise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate halt rise scenarios — scenario_halt_rise","text":"","code":"scenario_halt_rise(   df,   value_col = \"value\",   start_year = 2018,   end_year = 2025,   baseline_year = start_year,   target_year = end_year,   scenario_col = \"scenario\",   scenario_name = glue::glue(\"halt_rise\"),   upper_limit = \"guess\",   lower_limit = \"guess\",   trim = TRUE,   keep_better_values = FALSE,   small_is_best = FALSE,   trim_years = TRUE,   ind_ids = billion_ind_codes(\"all\"),   default_scenario = \"default\" )"},{"path":"/reference/scenario_halt_rise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate halt rise scenarios — scenario_halt_rise","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. value_col Column name column indicator values. start_year Start year scenario, defaults 2018. end_year End year scenario, defaults 2025 baseline_year Year scenario measured. Defaults start_year target_year Year scenario eventually achieved. Defaults end_year scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. scenario_name Name scenario. Defaults scenario_percent_change_baseline_year upper_limit limit indicator caped. Can take \"guess\", numeric. guess (default) take 100 limit percent_change positive, 0 negative. lower_limit limit indicator caped. Can take \"guess\", 0 100. guess (default) take 0 limit percent_change positive, 100 negative. trim logical indicate data trimmed upper_limit lower_limit. keep_better_values logical indicate \"better\" values kept value_col present. Follows direction set small_is_best.  instance, small_is_best TRUE, value_col lower col kept. small_is_best Logical identify lower value better higher one (e.g. lower obesity positive public health outcome, obesity rate small_is_best = TRUE). trim_years logical indicate years start_year end_year removed ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). default_scenario name default scenario used.","code":""},{"path":"/reference/scenario_halt_rise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate halt rise scenarios — scenario_halt_rise","text":"Dataframe scenario rows","code":""},{"path":"/reference/scenario_halt_rise.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate halt rise scenarios — scenario_halt_rise","text":"percent_change parameter understood percentage change, percentage point change, usually intended formulations. indeed percentage change required, please use scenario_aroc. instance, calculate scenario \"reduce 2018 value (90%) 30% 2025\", results 2025 value 63% 60%. returned scenario portion straight line drawn baseline_year value target_year. values years start_year end_year returned.","code":""},{"path":"/reference/scenario_linear_change.html","id":null,"dir":"Reference","previous_headings":"","what":"Scenario to add a linear  point change — scenario_linear_change","title":"Scenario to add a linear  point change — scenario_linear_change","text":"Scenario add linear_value percentage point change baseline_value baseline_year. provides values scenarios stated \"Increase INDICATOR XX% points\".","code":""},{"path":"/reference/scenario_linear_change.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scenario to add a linear  point change — scenario_linear_change","text":"","code":"scenario_linear_change(   df,   linear_value,   value_col = \"value\",   start_year = 2018,   end_year = 2025,   baseline_year = start_year,   target_year = end_year,   scenario_name = glue::glue(\"linear_change\"),   scenario_col = \"scenario\",   trim = TRUE,   small_is_best = FALSE,   keep_better_values = FALSE,   upper_limit = 100,   lower_limit = 0,   trim_years = TRUE,   ind_ids = billion_ind_codes(\"all\"),   default_scenario = \"default\" )"},{"path":"/reference/scenario_linear_change.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scenario to add a linear  point change — scenario_linear_change","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. linear_value vector indicating increase apply. value_col Column name column indicator values. start_year Start year scenario, defaults 2018. end_year End year scenario, defaults 2025 baseline_year Year scenario measured. Defaults start_year target_year Year scenario eventually achieved. Defaults end_year scenario_name Name scenario. Defaults scenario_percent_change_baseline_year scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. trim logical indicate data trimmed upper_limit lower_limit. small_is_best Logical identify lower value better higher one (e.g. lower obesity positive public health outcome, obesity rate small_is_best = TRUE). keep_better_values logical indicate \"better\" values kept value_col present. Follows direction set small_is_best.  instance, small_is_best TRUE, value_col lower col kept. upper_limit numeric indicating upper bound data calculation. value_col already higher calculation kept lower_limit numeric indicating lower bound data calculation. value_col already lower calculation kept trim_years logical indicate years start_year end_year removed ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). default_scenario name default scenario used.","code":""},{"path":"/reference/scenario_linear_change.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scenario to add a linear  point change — scenario_linear_change","text":"Dataframe scenario rows","code":""},{"path":"/reference/scenario_linear_change.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scenario to add a linear  point change — scenario_linear_change","text":"calculation done taking baseline_year value_col adding linear_value times number years baseline year current year. instance, baseline_year 2018, linear_value 2, baseline_year value_col 10, 2019 value_col 12, 2020 14, etc. differs scenario_aroc percent_change two ways: compounded adds percentage points percentage values. upper_limit lower_limit allow trim values exceeding bounds calculations. values already exceeding bounds calculations, kept.","code":""},{"path":"/reference/scenario_linear_change_col.html","id":null,"dir":"Reference","previous_headings":"","what":"Scenario to add a linear percentage point change stored in a column — scenario_linear_change_col","title":"Scenario to add a linear percentage point change stored in a column — scenario_linear_change_col","text":"scenario_linear_change_col wraps around scenario_linear_change provide linear values column specified linear_value rather single value.","code":""},{"path":"/reference/scenario_linear_change_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scenario to add a linear percentage point change stored in a column — scenario_linear_change_col","text":"","code":"scenario_linear_change_col(   df,   linear_value_col,   value_col = \"value\",   start_year = 2018,   end_year = 2025,   baseline_year = start_year,   target_year = end_year,   scenario_col = \"scenario\",   scenario_name = glue::glue(\"linear_change\"),   trim = TRUE,   small_is_best = FALSE,   keep_better_values = FALSE,   upper_limit = 100,   lower_limit = 0,   trim_years = TRUE,   ind_ids = billion_ind_codes(\"all\"),   default_scenario = \"default\" )"},{"path":"/reference/scenario_linear_change_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scenario to add a linear percentage point change stored in a column — scenario_linear_change_col","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. linear_value_col name column linear values value_col Column name column indicator values. start_year Start year scenario, defaults 2018. end_year End year scenario, defaults 2025 baseline_year Year scenario measured. Defaults start_year target_year Year scenario eventually achieved. Defaults end_year scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. scenario_name Name scenario. Defaults scenario_percent_change_baseline_year trim logical indicate data trimmed upper_limit lower_limit. small_is_best Logical identify lower value better higher one (e.g. lower obesity positive public health outcome, obesity rate small_is_best = TRUE). keep_better_values logical indicate \"better\" values kept value_col present. Follows direction set small_is_best.  instance, small_is_best TRUE, value_col lower col kept. upper_limit limit indicator caped. Can take \"guess\", numeric. guess (default) take 100 limit percent_change positive, 0 negative. lower_limit limit indicator caped. Can take \"guess\", 0 100. guess (default) take 0 limit percent_change positive, 100 negative. trim_years logical indicate years start_year end_year removed ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). default_scenario name default scenario used.","code":""},{"path":"/reference/scenario_linear_change_col.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scenario to add a linear percentage point change stored in a column — scenario_linear_change_col","text":"Dataframe scenario rows","code":""},{"path":"/reference/scenario_linear_change_col.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scenario to add a linear percentage point change stored in a column — scenario_linear_change_col","text":"returned scenario portion straight line drawn baseline_year value target_year. values years start_year end_year returned. value_col values higher lower scenario values, value_col kept, depending small_is_best. instance, scenario value 80 value 75 small_is_best TRUE, 75 kept.","code":""},{"path":"/reference/scenario_percent_baseline.html","id":null,"dir":"Reference","previous_headings":"","what":"Scenario to change by a fixed percentage from a baseline value by target year — scenario_percent_baseline","title":"Scenario to change by a fixed percentage from a baseline value by target year — scenario_percent_baseline","text":"scenario allows change value fixed percentage provided year provided baseline year. provides values scenarios stated \"Reduce INDICATOR XX% YEAR\"","code":""},{"path":"/reference/scenario_percent_baseline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scenario to change by a fixed percentage from a baseline value by target year — scenario_percent_baseline","text":"","code":"scenario_percent_baseline(   df,   percent_change,   value_col = \"value\",   start_year = 2018,   end_year = 2025,   baseline_year = start_year,   target_year = end_year,   scenario_col = \"scenario\",   scenario_name = glue::glue(\"{percent_change}_{baseline_year}\"),   trim = TRUE,   small_is_best = FALSE,   keep_better_values = FALSE,   upper_limit = \"guess\",   lower_limit = \"guess\",   trim_years = TRUE,   ind_ids = billion_ind_codes(\"all\"),   default_scenario = \"default\" )"},{"path":"/reference/scenario_percent_baseline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scenario to change by a fixed percentage from a baseline value by target year — scenario_percent_baseline","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. percent_change Numeric percentage change points achieved value_col baseline_year target_year. expressed percentage point fraction 100 (e.g. 6% increase = 6, 0.06). increase, use positive numeric, negative one decrease. value_col Column name column indicator values. start_year Start year scenario, defaults 2018. end_year End year scenario, defaults 2025 baseline_year Year scenario measured. Defaults start_year target_year Year scenario eventually achieved. Defaults end_year scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. scenario_name Name scenario. Defaults scenario_percent_change_baseline_year trim logical indicate data trimmed upper_limit lower_limit. small_is_best Logical identify lower value better higher one (e.g. lower obesity positive public health outcome, obesity rate small_is_best = TRUE). keep_better_values logical indicate \"better\" values kept value_col present. Follows direction set small_is_best.  instance, small_is_best TRUE, value_col lower col kept. upper_limit limit indicator caped. Can take \"guess\", numeric. guess (default) take 100 limit percent_change positive, 0 negative. lower_limit limit indicator caped. Can take \"guess\", 0 100. guess (default) take 0 limit percent_change positive, 100 negative. trim_years logical indicate years start_year end_year removed ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). default_scenario name default scenario used.","code":""},{"path":"/reference/scenario_percent_baseline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scenario to change by a fixed percentage from a baseline value by target year — scenario_percent_baseline","text":"Dataframe scenario rows","code":""},{"path":"/reference/scenario_percent_baseline.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scenario to change by a fixed percentage from a baseline value by target year — scenario_percent_baseline","text":"percent_change parameter understood percentage change, percentage point change, usually intended formulations. indeed percentage change required, please use scenario_aroc. instance, calculate scenario \"reduce 2018 value (90%) 30% 2025\", results 2025 value 63% 60%. returned scenario portion straight line drawn baseline_year value target_year. values years start_year end_year returned.","code":""},{"path":"/reference/scenario_quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Scenario to add a linear percentage point aimed at quantiles — scenario_quantile","title":"Scenario to add a linear percentage point aimed at quantiles — scenario_quantile","text":"scenario_quantile aims reach mean quantile average annual change (ARC) country quantile_year. target based ARC quantile_year baseline_quantile_year. ARC mean quantile, aim mean, higher limit quantile mean.","code":""},{"path":"/reference/scenario_quantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scenario to add a linear percentage point aimed at quantiles — scenario_quantile","text":"","code":"scenario_quantile(   df,   n = 5,   value_col = \"value\",   start_year = 2018,   end_year = 2025,   quantile_year = 2018,   baseline_quantile_year = 2013,   baseline_year = 2018,   scenario_name = glue::glue(\"quantile_{n}\"),   scenario_col = \"scenario\",   trim = TRUE,   small_is_best = FALSE,   keep_better_values = TRUE,   upper_limit = 100,   lower_limit = 0,   trim_years = TRUE,   ind_ids = billion_ind_codes(\"all\"),   default_scenario = \"default\" )"},{"path":"/reference/scenario_quantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scenario to add a linear percentage point aimed at quantiles — scenario_quantile","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. n number quantile create (5 quintile, 4 quartiles, etc.) value_col Column name column indicator values. start_year Start year scenario, defaults 2018. end_year End year scenario, defaults 2025 quantile_year year quantiles ARC calculated. baseline_quantile_year baseline year quantiles ARC calculated. baseline_year Year scenario measured. Defaults start_year scenario_name Name scenario. Defaults scenario_percent_change_baseline_year scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. trim logical indicate data trimmed upper_limit lower_limit. small_is_best Logical identify lower value better higher one (e.g. lower obesity positive public health outcome, obesity rate small_is_best = TRUE). keep_better_values logical indicate \"better\" values kept value_col present. Follows direction set small_is_best.  instance, small_is_best TRUE, value_col lower col kept. upper_limit limit indicator caped. Can take \"guess\", numeric. guess (default) take 100 limit percent_change positive, 0 negative. lower_limit limit indicator caped. Can take \"guess\", 0 100. guess (default) take 0 limit percent_change positive, 100 negative. trim_years logical indicate years start_year end_year removed ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). default_scenario name default scenario used.","code":""},{"path":"/reference/scenario_quantile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scenario to add a linear percentage point aimed at quantiles — scenario_quantile","text":"Dataframe scenario rows","code":""},{"path":"/reference/scenario_quantile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scenario to add a linear percentage point aimed at quantiles — scenario_quantile","text":"Calculates quantile target, wraps around scenario_linear_change_col aim target.","code":""},{"path":"/reference/scenario_return_previous_trajectory.html","id":null,"dir":"Reference","previous_headings":"","what":"Scenario return to previpus trajectory — scenario_return_previous_trajectory","title":"Scenario return to previpus trajectory — scenario_return_previous_trajectory","text":"scenario returns scenario_previous_trajectory last value scenario_shock.","code":""},{"path":"/reference/scenario_return_previous_trajectory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scenario return to previpus trajectory — scenario_return_previous_trajectory","text":"","code":"scenario_return_previous_trajectory(   df,   dip_year = 2020,   recovery_year = 2022,   start_year = 2018,   end_year = 2025,   value_col = \"value\",   scenario_col = \"scenario\",   scenario_name = \"return_previous_trajectory\",   scenario_shock = \"covid_shock\",   scenario_previous_trajectory = \"pre_covid_trajectory\",   trim = TRUE,   small_is_best = FALSE,   keep_better_values = FALSE,   upper_limit = 100,   lower_limit = 0,   trim_years = TRUE,   source = sprintf(\"WHO DDI, %s\", format(Sys.Date(), \"%B %Y\")) )"},{"path":"/reference/scenario_return_previous_trajectory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scenario return to previpus trajectory — scenario_return_previous_trajectory","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. dip_year (integer) year dip appends recovery_year (integer) year AROC applied start_year Start year scenario, defaults 2018. end_year End year scenario, defaults 2025 value_col Column name column indicator values. column used return results. scenario_col (character) name column scenarios. scenario_name name scenario scenario_shock (character) name scenario shock scenario_previous_trajectory (character) name scenario previous trajectories. trim logical indicate data trimmed upper_limit lower_limit. small_is_best Logical identify lower value better higher one (e.g. lower obesity positive public health outcome, obesity rate small_is_best = TRUE). keep_better_values logical indicate \"better\" values kept value_col present. Follows direction set small_is_best.  instance, small_is_best TRUE, value_col lower col kept. upper_limit upper limit indicator caped. lower_limit lower_limit limit indicator caped. trim_years logical indicate years start_year end_year removed source Source use unique source available calculation.","code":""},{"path":"/reference/scenario_return_previous_trajectory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scenario return to previpus trajectory — scenario_return_previous_trajectory","text":"data frame scenario values value_col scenario column.","code":""},{"path":"/reference/scenario_return_previous_trajectory.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scenario return to previpus trajectory — scenario_return_previous_trajectory","text":"Two types AROC supported: lastest_year: AROC calculated values start_year last reported estimated value dip_year applied last reported value recovery_year onward. average_years_in_range: AROC aroc_start_year last reported estimated value dip_year calculated. average AROC period applied last reported value recovery_year onward. missing values dip_year recovery_year, last value dip_year carried forward. applies countries indicator value dip_year reported estimated. Otherwise, value carried scenario_bau. progressive_recovery TRUE, recovery spread years recovery_year end_year. instance, recovery_year 2021 end_year 2025, 2021 0% AROC, 2022 25%, 2023 50%, 2024 75%, 2025 100%.","code":""},{"path":"/reference/sdg_adult_obese.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate adult_obese to SDG target — sdg_adult_obese","title":"Accelerate adult_obese to SDG target — sdg_adult_obese","text":"Accelerate adult_obese halting upwards trend data 2010 value. Runs: scenario_halt_rise(df, baseline_year = 2010, small_is_best = TRUE,...).","code":""},{"path":"/reference/sdg_adult_obese.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate adult_obese to SDG target — sdg_adult_obese","text":"","code":"sdg_adult_obese(   df,   ind_ids = billion_ind_codes(\"hpop\"),   scenario_col = \"scenario\",   ... )"},{"path":"/reference/sdg_adult_obese.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate adult_obese to SDG target — sdg_adult_obese","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/sdg_adult_obese.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate adult_obese to SDG target — sdg_adult_obese","text":"data frame acceleration scenario binded df. scenario set sdg","code":""},{"path":"/reference/sdg_alcohol.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate alcohol to SDG target — sdg_alcohol","title":"Accelerate alcohol to SDG target — sdg_alcohol","text":"Accelerate alcohol picking best results business usual, halt downwards trend 2018, -10 percent 2010.","code":""},{"path":"/reference/sdg_alcohol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate alcohol to SDG target — sdg_alcohol","text":"","code":"sdg_alcohol(   df,   ind_ids = billion_ind_codes(\"hpop\"),   scenario_col = \"scenario\",   ... )"},{"path":"/reference/sdg_alcohol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate alcohol to SDG target — sdg_alcohol","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/sdg_alcohol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate alcohol to SDG target — sdg_alcohol","text":"data frame acceleration scenario binded df. scenario set sdg","code":""},{"path":"/reference/sdg_alcohol.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate alcohol to SDG target — sdg_alcohol","text":"Runs: scenario_halt_rise(df, baseline_year = 2018, small_is_best = TRUE,...), scenario_bau(df, small_is_best = TRUE,...), scenario_percent_baseline(df, percent_change = -10, baseline_year = 2010, small_is_best = TRUE, ...) picks best result three scenarios.","code":""},{"path":"/reference/sdg_anc4.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate anc4 to SDG target — sdg_anc4","title":"Accelerate anc4 to SDG target — sdg_anc4","text":"Accelerate anc4 first dividing countries reported data without. countries without reported data, acceleration scenario business usual. countries reported data, scenarios fixed target 95% 2030 linear change 2.6 per year till 2025 tried, easiest achieve two selected. selected scenario compared business usual scenario reported data, best two chosen acceleration scenario.","code":""},{"path":"/reference/sdg_anc4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate anc4 to SDG target — sdg_anc4","text":"","code":"sdg_anc4(df, ...)"},{"path":"/reference/sdg_anc4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate anc4 to SDG target — sdg_anc4","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ... additional parameters passed scenario function","code":""},{"path":"/reference/sdg_anc4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate anc4 to SDG target — sdg_anc4","text":"data frame acceleration scenario binded df. scenario set acceleration","code":""},{"path":"/reference/sdg_art.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate art to SDG target — sdg_art","title":"Accelerate art to SDG target — sdg_art","text":"Accelerate art first dividing countries reported data without. countries without reported data, business usual returned. countries reported data, best business usual fixed target 90.25% 2025 chosen.","code":""},{"path":"/reference/sdg_art.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate art to SDG target — sdg_art","text":"","code":"sdg_art(df, scenario_col = \"scenario\", ind_ids = billion_ind_codes(\"uhc\"), ...)"},{"path":"/reference/sdg_art.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate art to SDG target — sdg_art","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). ... additional parameters passed scenario function","code":""},{"path":"/reference/sdg_art.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate art to SDG target — sdg_art","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/sdg_beds.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate beds to SDG target — sdg_beds","title":"Accelerate beds to SDG target — sdg_beds","text":"Accelerate beds first dividing countries two groups: countries 18 beds years 2018, business usual returned. countries less 18 beds years 2018 (inclusive), best business usual linear change 0.36 per year 2025, upper limit 18, returned.","code":""},{"path":"/reference/sdg_beds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate beds to SDG target — sdg_beds","text":"","code":"sdg_beds(   df,   ind_ids = billion_ind_codes(\"uhc\"),   scenario_col = \"scenario\",   start_year = 2018,   ... )"},{"path":"/reference/sdg_beds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate beds to SDG target — sdg_beds","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. start_year Base year contribution calculation, defaults 2018. ... additional parameters passed scenario function","code":""},{"path":"/reference/sdg_beds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate beds to SDG target — sdg_beds","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/sdg_bp.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate bp to SDG target — sdg_bp","title":"Accelerate bp to SDG target — sdg_bp","text":"Accelerate bp taking best business usual decrease 25% 2010 2025. scenarios run crude bp values, converted back age-standardised equivalents using approximation.","code":""},{"path":"/reference/sdg_bp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate bp to SDG target — sdg_bp","text":"","code":"sdg_bp(   df,   ind_ids = billion_ind_codes(\"uhc\"),   scenario_col = \"scenario\",   start_year = 2018,   end_year = 2025,   ... )"},{"path":"/reference/sdg_bp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate bp to SDG target — sdg_bp","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. start_year Base year contribution calculation, defaults 2018. end_year End year(s) contribution calculation, defaults 2019 2025. ... additional parameters passed scenario function","code":""},{"path":"/reference/sdg_bp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate bp to SDG target — sdg_bp","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/sdg_child_obese.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate child_obese to SDG target — sdg_child_obese","title":"Accelerate child_obese to SDG target — sdg_child_obese","text":"Accelerate child_obese halting upwards trend data 2010 value.","code":""},{"path":"/reference/sdg_child_obese.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate child_obese to SDG target — sdg_child_obese","text":"","code":"sdg_child_obese(df, ...)"},{"path":"/reference/sdg_child_obese.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate child_obese to SDG target — sdg_child_obese","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ... additional parameters passed scenario function","code":""},{"path":"/reference/sdg_child_obese.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate child_obese to SDG target — sdg_child_obese","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/sdg_child_obese.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate child_obese to SDG target — sdg_child_obese","text":"Runs: scenario_halt_rise(df, baseline_year = 2018, small_is_best = TRUE,...), scenario_bau(df, small_is_best = TRUE,...), scenario_percent_baseline(df, percent_change = -10, baseline_year = 2010, small_is_best = TRUE, ...) picks best result three scenarios.","code":""},{"path":"/reference/sdg_child_viol.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate child_viol to SDG target — sdg_child_viol","title":"Accelerate child_viol to SDG target — sdg_child_viol","text":"Accelerate child_viol targeting 0 2030.","code":""},{"path":"/reference/sdg_child_viol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate child_viol to SDG target — sdg_child_viol","text":"","code":"sdg_child_viol(   df,   ind_ids = billion_ind_codes(\"hpop\"),   scenario_col = \"scenario\",   ... )"},{"path":"/reference/sdg_child_viol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate child_viol to SDG target — sdg_child_viol","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/sdg_child_viol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate child_viol to SDG target — sdg_child_viol","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/sdg_child_viol.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate child_viol to SDG target — sdg_child_viol","text":"Runs: scenario_fixed_target(df, target_value = 0, target_year = 2030, small_is_best = TRUE,...),","code":""},{"path":"/reference/sdg_devontrack.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate devontrack to SDG target — sdg_devontrack","title":"Accelerate devontrack to SDG target — sdg_devontrack","text":"Accelerate devontrack targeting 80 2030.","code":""},{"path":"/reference/sdg_devontrack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate devontrack to SDG target — sdg_devontrack","text":"","code":"sdg_devontrack(   df,   ind_ids = billion_ind_codes(\"hpop\"),   end_year = 2025,   scenario_col = \"scenario\",   ... )"},{"path":"/reference/sdg_devontrack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate devontrack to SDG target — sdg_devontrack","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). end_year End year(s) contribution calculation, defaults 2019 2025. scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/sdg_devontrack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate devontrack to SDG target — sdg_devontrack","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/sdg_devontrack.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate devontrack to SDG target — sdg_devontrack","text":"Runs: scenario_fixed_target(df, target_value = 80, target_year = 2030, small_is_best = FALSE,...),","code":""},{"path":"/reference/sdg_doctors.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate doctors to SDG target — sdg_doctors","title":"Accelerate doctors to SDG target — sdg_doctors","text":"Accelerate doctors using business usual scenario.","code":""},{"path":"/reference/sdg_doctors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate doctors to SDG target — sdg_doctors","text":"","code":"sdg_doctors(   df,   ind_ids = billion_ind_codes(\"uhc\"),   scenario_col = \"scenario\",   ... )"},{"path":"/reference/sdg_doctors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate doctors to SDG target — sdg_doctors","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/sdg_doctors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate doctors to SDG target — sdg_doctors","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/sdg_dtp3.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate dtp3 to SDG target — sdg_dtp3","title":"Accelerate dtp3 to SDG target — sdg_dtp3","text":"Accelerate dtp3 using customised version scenario_fixed_target following peculiarities: baseline_year = 2019; 2020 value kept identical 2019 (baseline) value; target_year 2030; scenario straight line target_value target_year target values country provided technical program.","code":""},{"path":"/reference/sdg_dtp3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate dtp3 to SDG target — sdg_dtp3","text":"","code":"sdg_dtp3(   df,   ind_ids = billion_ind_codes(\"uhc\"),   scenario_col = \"scenario\",   start_year = 2018,   end_year = 2025,   ... )"},{"path":"/reference/sdg_dtp3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate dtp3 to SDG target — sdg_dtp3","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. start_year Base year contribution calculation, defaults 2018. end_year End year(s) contribution calculation, defaults 2019 2025. ... additional parameters passed scenario function","code":""},{"path":"/reference/sdg_dtp3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate dtp3 to SDG target — sdg_dtp3","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/sdg_fh.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate fh to SDG target — sdg_fh","title":"Accelerate fh to SDG target — sdg_fh","text":"Accelerate fh taking best business usual halting upward trends data 2018 value.","code":""},{"path":"/reference/sdg_fh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate fh to SDG target — sdg_fh","text":"","code":"sdg_fh(df, ind_ids = billion_ind_codes(\"uhc\"), scenario_col = \"scenario\", ...)"},{"path":"/reference/sdg_fh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate fh to SDG target — sdg_fh","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/sdg_fh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate fh to SDG target — sdg_fh","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/sdg_fp.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate fp to SDG target — sdg_fp","title":"Accelerate fp to SDG target — sdg_fp","text":"Accelerate fp dividing countries two groups: BRN, CYP, FSM, ISL, LUX, SYC, return business usual. countries, take best business usual quantile target quantile_year = 2018 5 quantiles (capped maximum regional value 2018).","code":""},{"path":"/reference/sdg_fp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate fp to SDG target — sdg_fp","text":"","code":"sdg_fp(df, ind_ids = billion_ind_codes(\"uhc\"), scenario_col = \"scenario\", ...)"},{"path":"/reference/sdg_fp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate fp to SDG target — sdg_fp","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/sdg_fp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate fp to SDG target — sdg_fp","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/sdg_fpg.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate fpg to SDG target — sdg_fpg","title":"Accelerate fpg to SDG target — sdg_fpg","text":"Accelerate fpg using business usual scenario.","code":""},{"path":"/reference/sdg_fpg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate fpg to SDG target — sdg_fpg","text":"","code":"sdg_fpg(df, ind_ids = billion_ind_codes(\"uhc\"), scenario_col = \"scenario\", ...)"},{"path":"/reference/sdg_fpg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate fpg to SDG target — sdg_fpg","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/sdg_fpg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate fpg to SDG target — sdg_fpg","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/sdg_fuel.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate fuel to SDG target — sdg_fuel","title":"Accelerate fuel to SDG target — sdg_fuel","text":"Accelerate fuel keeping business usual high income countries (HIC) (according World Bank), aiming best rate change 2013 2015 region Lower-middle income countries (LMC), Low-income countries (LIC), High-income countries(HIC), unclassified countries.","code":""},{"path":"/reference/sdg_fuel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate fuel to SDG target — sdg_fuel","text":"","code":"sdg_fuel(   df,   ind_ids = billion_ind_codes(\"hpop\"),   scenario_col = \"scenario\",   ... )"},{"path":"/reference/sdg_fuel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate fuel to SDG target — sdg_fuel","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/sdg_fuel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate fuel to SDG target — sdg_fuel","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/sdg_fuel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate fuel to SDG target — sdg_fuel","text":"Runs: scenario_bau(df, small_is_best = FALSE,...) HIC, scenario_best_in_region(df, target_year = 2018, baseline_year = 2013, small_is_best = FALSE,...) income groups.","code":""},{"path":"/reference/sdg_hpop_sanitation.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate hpop_sanitation to SDG target — sdg_hpop_sanitation","title":"Accelerate hpop_sanitation to SDG target — sdg_hpop_sanitation","text":"Accelerate hpop_sanitation aiming 95% 20230","code":""},{"path":"/reference/sdg_hpop_sanitation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate hpop_sanitation to SDG target — sdg_hpop_sanitation","text":"","code":"sdg_hpop_sanitation(   df,   ind_ids = billion_ind_codes(\"hpop\"),   end_year = 2025,   scenario_col = \"scenario\",   ... )"},{"path":"/reference/sdg_hpop_sanitation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate hpop_sanitation to SDG target — sdg_hpop_sanitation","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). end_year End year(s) contribution calculation, defaults 2019 2025. scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/sdg_hpop_sanitation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate hpop_sanitation to SDG target — sdg_hpop_sanitation","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/sdg_hpop_sanitation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate hpop_sanitation to SDG target — sdg_hpop_sanitation","text":"Runs: scenario_fixed_target(df, target_value = 95,target_year = 2030, small_is_best = FALSE)","code":""},{"path":"/reference/sdg_hpop_sanitation_rural.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate hpop_sanitation_rural to SDG target — sdg_hpop_sanitation_rural","title":"Accelerate hpop_sanitation_rural to SDG target — sdg_hpop_sanitation_rural","text":"Accelerate hpop_sanitation_rural aiming 95% 20230","code":""},{"path":"/reference/sdg_hpop_sanitation_rural.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate hpop_sanitation_rural to SDG target — sdg_hpop_sanitation_rural","text":"","code":"sdg_hpop_sanitation_rural(df, ...)"},{"path":"/reference/sdg_hpop_sanitation_rural.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate hpop_sanitation_rural to SDG target — sdg_hpop_sanitation_rural","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ... additional parameters passed scenario function","code":""},{"path":"/reference/sdg_hpop_sanitation_rural.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate hpop_sanitation_rural to SDG target — sdg_hpop_sanitation_rural","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/sdg_hpop_sanitation_rural.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate hpop_sanitation_rural to SDG target — sdg_hpop_sanitation_rural","text":"Runs: scenario_quantile(df, n = 5, quantile_year = 2017, baseline_quantile_year = 2018, upper_limit = 99, lower_limit = 0 small_is_best = FALSE,...)","code":""},{"path":"/reference/sdg_hpop_sanitation_urban.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate hpop_sanitation_urban to SDG target — sdg_hpop_sanitation_urban","title":"Accelerate hpop_sanitation_urban to SDG target — sdg_hpop_sanitation_urban","text":"Accelerate hpop_sanitation_urban aiming 95% 20230","code":""},{"path":"/reference/sdg_hpop_sanitation_urban.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate hpop_sanitation_urban to SDG target — sdg_hpop_sanitation_urban","text":"","code":"sdg_hpop_sanitation_urban(df, ...)"},{"path":"/reference/sdg_hpop_sanitation_urban.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate hpop_sanitation_urban to SDG target — sdg_hpop_sanitation_urban","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ... additional parameters passed scenario function","code":""},{"path":"/reference/sdg_hpop_sanitation_urban.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate hpop_sanitation_urban to SDG target — sdg_hpop_sanitation_urban","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/sdg_hpop_sanitation_urban.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate hpop_sanitation_urban to SDG target — sdg_hpop_sanitation_urban","text":"Runs: scenario_quantile(df, n = 5, quantile_year = 2017, baseline_quantile_year = 2018, upper_limit = 99, lower_limit = 0 small_is_best = FALSE,...)","code":""},{"path":"/reference/sdg_hpop_tobacco.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate hpop_tobacco to SDG target — sdg_hpop_tobacco","title":"Accelerate hpop_tobacco to SDG target — sdg_hpop_tobacco","text":"Accelerate hpop_tobacco picking best value business usual, halt rise 2018, custom version scenario_percent_baseline. custom scenario_percent_baseline taking similar parameters scenario_percent_baseline's percent_change = -30, baseline_year = 2010, values added start_year value, rather baseline_year values.","code":""},{"path":"/reference/sdg_hpop_tobacco.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate hpop_tobacco to SDG target — sdg_hpop_tobacco","text":"","code":"sdg_hpop_tobacco(   df,   ind_ids = billion_ind_codes(\"hpop\"),   scenario_col = \"scenario\",   start_year = 2018,   end_year = 2025,   ... )"},{"path":"/reference/sdg_hpop_tobacco.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate hpop_tobacco to SDG target — sdg_hpop_tobacco","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. start_year Base year contribution calculation, defaults 2018. end_year End year(s) contribution calculation, defaults 2019 2025. ... additional parameters passed scenario function","code":""},{"path":"/reference/sdg_hpop_tobacco.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate hpop_tobacco to SDG target — sdg_hpop_tobacco","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/sdg_hpop_tobacco.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate hpop_tobacco to SDG target — sdg_hpop_tobacco","text":"Runs: custom scenario_percent_baseline (see ). scenario_bau(df, small_is_best = TRUE,...) scenario_halt_rise(df, baseline_year= 2018, small_is_best = TRUE,...) picks best result three scenarios.","code":""},{"path":"/reference/sdg_hwf.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate hwf to SDG target — sdg_hwf","title":"Accelerate hwf to SDG target — sdg_hwf","text":"Accelerate hwf first dividing countries two groups: countries 2018 value greater equal 2018 global median, business usual returned. countries 2018 value less 2018 global median, linear change 4.54 per year 2018 2025 returned.","code":""},{"path":"/reference/sdg_hwf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate hwf to SDG target — sdg_hwf","text":"","code":"sdg_hwf(   df,   ind_ids = billion_ind_codes(\"uhc\"),   scenario_col = \"scenario\",   start_year = 2018,   ... )"},{"path":"/reference/sdg_hwf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate hwf to SDG target — sdg_hwf","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. start_year Base year contribution calculation, defaults 2018. ... additional parameters passed scenario function","code":""},{"path":"/reference/sdg_hwf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate hwf to SDG target — sdg_hwf","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/sdg_ipv.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate ipv to SDG target — sdg_ipv","title":"Accelerate ipv to SDG target — sdg_ipv","text":"Accelerate ipv targeting 0 2030.","code":""},{"path":"/reference/sdg_ipv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate ipv to SDG target — sdg_ipv","text":"","code":"sdg_ipv(df, scenario_col = \"scenario\", ...)"},{"path":"/reference/sdg_ipv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate ipv to SDG target — sdg_ipv","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/sdg_ipv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate ipv to SDG target — sdg_ipv","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/sdg_ipv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate ipv to SDG target — sdg_ipv","text":"Runs: scenario_fixed_target(df, target_value = 0, target_year = 2030, small_is_best = TRUE,...),","code":""},{"path":"/reference/sdg_itn.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate itn to SDG target — sdg_itn","title":"Accelerate itn to SDG target — sdg_itn","text":"Accelerate itn taking best business usual fixed target 80 2030.","code":""},{"path":"/reference/sdg_itn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate itn to SDG target — sdg_itn","text":"","code":"sdg_itn(df, ind_ids = billion_ind_codes(\"uhc\"), scenario_col = \"scenario\", ...)"},{"path":"/reference/sdg_itn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate itn to SDG target — sdg_itn","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/sdg_itn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate itn to SDG target — sdg_itn","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/sdg_nurses.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate nurses to SDG target — sdg_nurses","title":"Accelerate nurses to SDG target — sdg_nurses","text":"Accelerate nurses using business usual scenario.","code":""},{"path":"/reference/sdg_nurses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate nurses to SDG target — sdg_nurses","text":"","code":"sdg_nurses(   df,   ind_ids = billion_ind_codes(\"uhc\"),   scenario_col = \"scenario\",   ... )"},{"path":"/reference/sdg_nurses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate nurses to SDG target — sdg_nurses","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/sdg_nurses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate nurses to SDG target — sdg_nurses","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/sdg_overweight.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate overweight to SDG target — sdg_overweight","title":"Accelerate overweight to SDG target — sdg_overweight","text":"Accelerate overweight picking best value business usual AROC 3 2030.","code":""},{"path":"/reference/sdg_overweight.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate overweight to SDG target — sdg_overweight","text":"","code":"sdg_overweight(   df,   ind_ids = billion_ind_codes(\"hpop\"),   scenario_col = \"scenario\",   ... )"},{"path":"/reference/sdg_overweight.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate overweight to SDG target — sdg_overweight","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/sdg_overweight.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate overweight to SDG target — sdg_overweight","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/sdg_overweight.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate overweight to SDG target — sdg_overweight","text":"Runs: scenario_bau(df, small_is_best = TRUE,...) scenario_aroc(df, aroc_type = \"target\", target_value = 3, target_year = 2030, small_is_best = TRUE,...) picks best result two scenarios.","code":""},{"path":"/reference/sdg_pm25.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate pm25 to SDG target — sdg_pm25","title":"Accelerate pm25 to SDG target — sdg_pm25","text":"Accelerate pm25 picking best value business usual, linear change -2% * 2018 value per year.","code":""},{"path":"/reference/sdg_pm25.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate pm25 to SDG target — sdg_pm25","text":"","code":"sdg_pm25(   df,   ind_ids = billion_ind_codes(\"hpop\"),   scenario_col = \"scenario\",   ... )"},{"path":"/reference/sdg_pm25.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate pm25 to SDG target — sdg_pm25","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/sdg_pm25.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate pm25 to SDG target — sdg_pm25","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/sdg_pm25.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate pm25 to SDG target — sdg_pm25","text":"Runs: scenario_bau(df, small_is_best = TRUE,...) scenario_linear_change(df, linear_value = df$value[df$year == 2018] * -0.02, small_is_best = TRUE,...) picks best result two scenarios.","code":""},{"path":"/reference/sdg_pneumo.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate pneumo to SDG target — sdg_pneumo","title":"Accelerate pneumo to SDG target — sdg_pneumo","text":"Accelerate pneumo taking best business usual fixed target 90 2025.","code":""},{"path":"/reference/sdg_pneumo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate pneumo to SDG target — sdg_pneumo","text":"","code":"sdg_pneumo(   df,   ind_ids = billion_ind_codes(\"uhc\"),   scenario_col = \"scenario\",   ... )"},{"path":"/reference/sdg_pneumo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate pneumo to SDG target — sdg_pneumo","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/sdg_pneumo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate pneumo to SDG target — sdg_pneumo","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/sdg_road.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate road to SDG target — sdg_road","title":"Accelerate road to SDG target — sdg_road","text":"Accelerate road picking best results business usual, -50 percent 2020 2030.","code":""},{"path":"/reference/sdg_road.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate road to SDG target — sdg_road","text":"","code":"sdg_road(   df,   ind_ids = billion_ind_codes(\"hpop\"),   scenario_col = \"scenario\",   ... )"},{"path":"/reference/sdg_road.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate road to SDG target — sdg_road","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/sdg_road.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate road to SDG target — sdg_road","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/sdg_road.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate road to SDG target — sdg_road","text":"Runs: scenario_bau(df, small_is_best = TRUE,...), scenario_percent_baseline(df, percent_change = -50, baseline_year = 2020, target_year = 2030, small_is_best = TRUE, ...) picks best result two scenarios.","code":""},{"path":"/reference/sdg_stunting.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate stunting to SDG target — sdg_stunting","title":"Accelerate stunting to SDG target — sdg_stunting","text":"Accelerate stunting picking best results business usual, halt downwards trend, AROC -50% change 2012 2030.","code":""},{"path":"/reference/sdg_stunting.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate stunting to SDG target — sdg_stunting","text":"","code":"sdg_stunting(   df,   ind_ids = billion_ind_codes(\"hpop\"),   scenario_col = \"scenario\",   ... )"},{"path":"/reference/sdg_stunting.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate stunting to SDG target — sdg_stunting","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/sdg_stunting.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate stunting to SDG target — sdg_stunting","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/sdg_stunting.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate stunting to SDG target — sdg_stunting","text":"Runs: scenario_bau(df, small_is_best = TRUE,...), scenario_aroc(df, aroc_type = \"percent_change\", percent_change = -50, baseline_year = 2012, target_year = 2030, small_is_best = TRUE, ...) scenario_halt_rise(df, small_is_best = TRUE,...) picks best result three scenarios.","code":""},{"path":"/reference/sdg_suicide.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate suicide to SDG targets — sdg_suicide","title":"Accelerate suicide to SDG targets — sdg_suicide","text":"Accelerate suicide picking best results business usual, halt downwards trend, -33.333% points 2015 2030.","code":""},{"path":"/reference/sdg_suicide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate suicide to SDG targets — sdg_suicide","text":"","code":"sdg_suicide(   df,   ind_ids = billion_ind_codes(\"hpop\"),   scenario_col = \"scenario\",   ... )"},{"path":"/reference/sdg_suicide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate suicide to SDG targets — sdg_suicide","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/sdg_suicide.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate suicide to SDG targets — sdg_suicide","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/sdg_suicide.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate suicide to SDG targets — sdg_suicide","text":"Runs: scenario_bau(df, small_is_best = TRUE,...), scenario_percent_baseline(df, percent_change = -33.333, baseline_year = 2015, target_year = 2030, small_is_best = TRUE, ...) scenario_halt_rise(df, small_is_best = TRUE,...) picks best result three scenarios.","code":""},{"path":"/reference/sdg_tb.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate tb to SDG target — sdg_tb","title":"Accelerate tb to SDG target — sdg_tb","text":"Accelerate tb using fixed target 90 2025.","code":""},{"path":"/reference/sdg_tb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate tb to SDG target — sdg_tb","text":"","code":"sdg_tb(df, ind_ids = billion_ind_codes(\"uhc\"), scenario_col = \"scenario\", ...)"},{"path":"/reference/sdg_tb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate tb to SDG target — sdg_tb","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/sdg_tb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate tb to SDG target — sdg_tb","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/sdg_transfats.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate transfats to SDG targets — sdg_transfats","title":"Accelerate transfats to SDG targets — sdg_transfats","text":"Accelerate transfats targeting 100 2025.","code":""},{"path":"/reference/sdg_transfats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate transfats to SDG targets — sdg_transfats","text":"","code":"sdg_transfats(   df,   ind_ids = billion_ind_codes(\"hpop\"),   scenario_col = \"scenario\",   ... )"},{"path":"/reference/sdg_transfats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate transfats to SDG targets — sdg_transfats","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/sdg_transfats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate transfats to SDG targets — sdg_transfats","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/sdg_transfats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate transfats to SDG targets — sdg_transfats","text":"Runs: scenario_fixed_target(df, target_value = 100, target_year = 2025, small_is_best = TRUE,...),","code":""},{"path":"/reference/sdg_uhc_sanitation.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate uhc_sanitation to SDG target — sdg_uhc_sanitation","title":"Accelerate uhc_sanitation to SDG target — sdg_uhc_sanitation","text":"Accelerate uhc_sanitation encouraging country reach mean (upper threshold) quantile belongs 2017, n = 5 quantiles. Lower upper limits 0 99, respectively, also imposed results.","code":""},{"path":"/reference/sdg_uhc_sanitation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate uhc_sanitation to SDG target — sdg_uhc_sanitation","text":"","code":"sdg_uhc_sanitation(   df,   ind_ids = billion_ind_codes(\"uhc\"),   scenario_col = \"scenario\",   ... )"},{"path":"/reference/sdg_uhc_sanitation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate uhc_sanitation to SDG target — sdg_uhc_sanitation","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/sdg_uhc_sanitation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate uhc_sanitation to SDG target — sdg_uhc_sanitation","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/sdg_uhc_tobacco.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate uhc_tobacco to SDG target — sdg_uhc_tobacco","title":"Accelerate uhc_tobacco to SDG target — sdg_uhc_tobacco","text":"Accelerate uhc_tobacco first dividing countries two groups: countries without routine (.e., estimated) data, business usual returned countries routine (.e., estimated) data, best business usual percent decrease 30% 2010 2025 returned. scenarios run crude tobacco usage values, converted age-standardised equivalents using approximation.","code":""},{"path":"/reference/sdg_uhc_tobacco.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate uhc_tobacco to SDG target — sdg_uhc_tobacco","text":"","code":"sdg_uhc_tobacco(   df,   ind_ids = billion_ind_codes(\"uhc\"),   scenario_col = \"scenario\",   ... )"},{"path":"/reference/sdg_uhc_tobacco.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate uhc_tobacco to SDG target — sdg_uhc_tobacco","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/sdg_uhc_tobacco.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate uhc_tobacco to SDG target — sdg_uhc_tobacco","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/sdg_wasting.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate wasting to SDG targets — sdg_wasting","title":"Accelerate wasting to SDG targets — sdg_wasting","text":"Accelerate wasting picking best results business usual, halt downwards trend 2018, AROC 3% 2030.","code":""},{"path":"/reference/sdg_wasting.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate wasting to SDG targets — sdg_wasting","text":"","code":"sdg_wasting(   df,   ind_ids = billion_ind_codes(\"hpop\"),   end_year = 2025,   scenario_col = \"scenario\",   ... )"},{"path":"/reference/sdg_wasting.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate wasting to SDG targets — sdg_wasting","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). end_year End year(s) contribution calculation, defaults 2019 2025. scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ... additional parameters passed scenario function","code":""},{"path":"/reference/sdg_wasting.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate wasting to SDG targets — sdg_wasting","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/sdg_wasting.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate wasting to SDG targets — sdg_wasting","text":"Runs: scenario_bau(df, small_is_best = TRUE,...) scenario_halt_rise(df, small_is_best = TRUE,...) scenario_aroc(df, aroc_type = \"target\", target_value = 3, target_year = 2030, small_is_best = TRUE,...) picks best result three scenarios.","code":""},{"path":"/reference/sdg_water.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate water to SDG target — sdg_water","title":"Accelerate water to SDG target — sdg_water","text":"Accelerate water aiming 95% 20230","code":""},{"path":"/reference/sdg_water.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate water to SDG target — sdg_water","text":"","code":"sdg_water(df, ...)"},{"path":"/reference/sdg_water.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate water to SDG target — sdg_water","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ... additional parameters passed scenario function","code":""},{"path":"/reference/sdg_water.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate water to SDG target — sdg_water","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/sdg_water.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate water to SDG target — sdg_water","text":"Runs: scenario_fixed_target(df, target_value = 95,target_year = 2030, small_is_best = FALSE)","code":""},{"path":"/reference/sdg_water_rural.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate water_rural to SDG target — sdg_water_rural","title":"Accelerate water_rural to SDG target — sdg_water_rural","text":"Accelerate water_rural aiming 95% 20230","code":""},{"path":"/reference/sdg_water_rural.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate water_rural to SDG target — sdg_water_rural","text":"","code":"sdg_water_rural(df, ...)"},{"path":"/reference/sdg_water_rural.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate water_rural to SDG target — sdg_water_rural","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ... additional parameters passed scenario function","code":""},{"path":"/reference/sdg_water_rural.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate water_rural to SDG target — sdg_water_rural","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/sdg_water_rural.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate water_rural to SDG target — sdg_water_rural","text":"Runs: scenario_fixed_target(df, target_value = 95,target_year = 2030, small_is_best = FALSE)","code":""},{"path":"/reference/sdg_water_urban.html","id":null,"dir":"Reference","previous_headings":"","what":"Accelerate water_urban to SDG target — sdg_water_urban","title":"Accelerate water_urban to SDG target — sdg_water_urban","text":"Accelerate water_urban aiming 95% 20230","code":""},{"path":"/reference/sdg_water_urban.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accelerate water_urban to SDG target — sdg_water_urban","text":"","code":"sdg_water_urban(df, ...)"},{"path":"/reference/sdg_water_urban.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accelerate water_urban to SDG target — sdg_water_urban","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. ... additional parameters passed scenario function","code":""},{"path":"/reference/sdg_water_urban.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accelerate water_urban to SDG target — sdg_water_urban","text":"data frame acceleration scenario binded df. scenario_col set acceleration","code":""},{"path":"/reference/sdg_water_urban.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accelerate water_urban to SDG target — sdg_water_urban","text":"Runs: scenario_fixed_target(df, target_value = 95,target_year = 2030, small_is_best = FALSE)","code":""},{"path":"/reference/sdi_ratio.html","id":null,"dir":"Reference","previous_headings":"","what":"Socio-Demographic Index data — sdi_ratio","title":"Socio-Demographic Index data — sdi_ratio","text":"Used internally transform road safety data HPOP Billion. Exact methods available methods report.","code":""},{"path":"/reference/sdi_ratio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Socio-Demographic Index data — sdi_ratio","text":"","code":"sdi_ratio"},{"path":"/reference/sdi_ratio.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Socio-Demographic Index data — sdi_ratio","text":"data frame 194 rows 2 variables: iso3 Country ISO3 codes. sdiratio SDI ratio.","code":""},{"path":"/reference/transform_alcohol.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform alcohol data — transform_alcohol","title":"Transform alcohol data — transform_alcohol","text":"Rescales alcohol data according Billions methods report","code":""},{"path":"/reference/transform_alcohol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform alcohol data — transform_alcohol","text":"","code":"transform_alcohol(x)"},{"path":"/reference/transform_alcohol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform alcohol data — transform_alcohol","text":"x Indicator value.","code":""},{"path":"/reference/transform_bp.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform blood pressure data — transform_bp","title":"Transform blood pressure data — transform_bp","text":"Reverses indicator rescales [50,100] [0,100]","code":""},{"path":"/reference/transform_bp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform blood pressure data — transform_bp","text":"","code":"transform_bp(x)"},{"path":"/reference/transform_bp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform blood pressure data — transform_bp","text":"x Indicator value.","code":""},{"path":"/reference/transform_glucose.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform FPG data — transform_glucose","title":"Transform FPG data — transform_glucose","text":"Rescales FPG data [7.4,5.1] [0,100]","code":""},{"path":"/reference/transform_glucose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform FPG data — transform_glucose","text":"","code":"transform_glucose(x)"},{"path":"/reference/transform_glucose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform FPG data — transform_glucose","text":"x Indicator value.","code":""},{"path":"/reference/transform_hep_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform Raw Indicator Values for HEP Billion — transform_hep_data","title":"Transform Raw Indicator Values for HEP Billion — transform_hep_data","text":"transform_hep_data() applies transformations HEP Billion indicators transformed indicator values can used within Billions calculations. Details specific transformations applied can found within Billions methods report.","code":""},{"path":"/reference/transform_hep_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform Raw Indicator Values for HEP Billion — transform_hep_data","text":"","code":"transform_hep_data(   df,   scenario_col = NULL,   value_col = \"value\",   transform_glue = \"transform_{value_col}\",   source = \"WUENIC/IVB/WHO Technical Programme\",   ind_ids = billion_ind_codes(\"hep\", include_calculated = TRUE),   extrapolate_to = 2025,   recycle = FALSE,   ... )"},{"path":"/reference/transform_hep_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform Raw Indicator Values for HEP Billion — transform_hep_data","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. value_col Column name column indicator values. transform_glue Glue expression passed glue::glue(). Defaults 'transform_{value_col}' create new column names prefixing transform_ original name. source Source use prevent data flat extrapolated one unique value. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). extrapolate_to Year extrapolate Prevent data , defaults 2025 recycle Boolean indicate data recycled ... additional parameters pass recycle_data","code":""},{"path":"/reference/transform_hep_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform Raw Indicator Values for HEP Billion — transform_hep_data","text":"Data frame long format.","code":""},{"path":"/reference/transform_hep_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transform Raw Indicator Values for HEP Billion — transform_hep_data","text":"Currently, function changes Prevent campaign data calculating total sum campaigns year use Prevent calculations. details HEP Billion calculation process function ties rest, see vignette: vignette(\"hep\", package = \"billionaiRe\")","code":""},{"path":"/reference/transform_hosp_beds.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform hospital beds data — transform_hosp_beds","title":"Transform hospital beds data — transform_hosp_beds","text":"Rescales hospital beds according Billions methods report","code":""},{"path":"/reference/transform_hosp_beds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform hospital beds data — transform_hosp_beds","text":"","code":"transform_hosp_beds(x)"},{"path":"/reference/transform_hosp_beds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform hospital beds data — transform_hosp_beds","text":"x Indicator value.","code":""},{"path":"/reference/transform_hpop_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform Raw Indicator Values for HPOP Billion — transform_hpop_data","title":"Transform Raw Indicator Values for HPOP Billion — transform_hpop_data","text":"transform_hpop_data() applies transformations HPOP Billion indicators transformed indicator values can used within Billions calculations. Details specific transformations applied can found within Billions methods report. Values transform column, already exists, replaced HPOP indicators data value_col column, otherwise column keeps original data.","code":""},{"path":"/reference/transform_hpop_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform Raw Indicator Values for HPOP Billion — transform_hpop_data","text":"","code":"transform_hpop_data(   df,   value_col = \"value\",   transform_glue = \"transform_{value_col}\",   ind_ids = billion_ind_codes(\"hpop\"),   recycle = FALSE,   ... )"},{"path":"/reference/transform_hpop_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform Raw Indicator Values for HPOP Billion — transform_hpop_data","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. value_col Column name column indicator values. transform_glue Glue expression passed glue::glue(). Defaults 'transform_{value_col}' create new column names prefixing transform_ original name. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). recycle Boolean indicate data recycled ... additional parameters pass recycle_data","code":""},{"path":"/reference/transform_hpop_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform Raw Indicator Values for HPOP Billion — transform_hpop_data","text":"Data frame long format.","code":""},{"path":"/reference/transform_hpop_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transform Raw Indicator Values for HPOP Billion — transform_hpop_data","text":"details HPOP Billion calculation process function ties rest, see vignette: vignette(\"hpop\", package = \"billionaiRe\")","code":""},{"path":"/reference/transform_hpop_single.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform a transformation on a single column — transform_hpop_single","title":"Perform a transformation on a single column — transform_hpop_single","text":"function used within transform_hpop_data() generate transformed data single column.","code":""},{"path":"/reference/transform_hpop_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform a transformation on a single column — transform_hpop_single","text":"","code":"transform_hpop_single(df, value_col, transform_col, ind_ids)"},{"path":"/reference/transform_hpop_single.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform a transformation on a single column — transform_hpop_single","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. value_col Column name column indicator values. transform_col Column put transformed values ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes().","code":""},{"path":"/reference/transform_hpop_single.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform a transformation on a single column — transform_hpop_single","text":"single column data frame transformed values.","code":""},{"path":"/reference/transform_hwf.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform health workforce data — transform_hwf","title":"Transform health workforce data — transform_hwf","text":"Rescales healh workforce data  according Billions methods report","code":""},{"path":"/reference/transform_hwf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform health workforce data — transform_hwf","text":"","code":"transform_hwf(x)"},{"path":"/reference/transform_hwf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform health workforce data — transform_hwf","text":"x Indicator value.","code":""},{"path":"/reference/transform_inversion.html","id":null,"dir":"Reference","previous_headings":"","what":"Reverse indicator and cap — transform_inversion","title":"Reverse indicator and cap — transform_inversion","text":"Reverse indicator capbetween 0 100","code":""},{"path":"/reference/transform_inversion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reverse indicator and cap — transform_inversion","text":"","code":"transform_inversion(x)"},{"path":"/reference/transform_inversion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reverse indicator and cap — transform_inversion","text":"x Indicator value.","code":""},{"path":"/reference/transform_prev_cmpgn_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform Prevent campaigns data — transform_prev_cmpgn_data","title":"Transform Prevent campaigns data — transform_prev_cmpgn_data","text":"Prevent campaign data uses aggregates across years vaccine provides protection specific pathogen. Thus, want specific aggregation analysis can brought overall HEP calculations. function just . pathogen, take data latest year observed, separate year provided. rolling sums , ensure rows make sense (filtering instance years pathogens reported country).","code":""},{"path":"/reference/transform_prev_cmpgn_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform Prevent campaigns data — transform_prev_cmpgn_data","text":"","code":"transform_prev_cmpgn_data(   df,   scenario_col,   value_col,   transform_value_col,   source,   ind_ids,   extrapolate_to )"},{"path":"/reference/transform_prev_cmpgn_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform Prevent campaigns data — transform_prev_cmpgn_data","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. value_col Column name column indicator values. transform_value_col Column name column(s) transformed indicator values, used calculate contributions. source Source use prevent data flat extrapolated one unique value. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). extrapolate_to Year extrapolate Prevent data , defaults 2025","code":""},{"path":"/reference/transform_prev_cmpgn_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transform Prevent campaigns data — transform_prev_cmpgn_data","text":"transform values flat extrapolated latest year specific year, default 2023 latest year values provided specific pathogen, years used calculating rolling average , otherwise, latest year observed values used.","code":""},{"path":"/reference/transform_prev_routine_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform Prevent routine data — transform_prev_routine_data","title":"Transform Prevent routine data — transform_prev_routine_data","text":"Prevent routine data now stored raw using percent coverage indicator. want transform back numerator value use within pathogen_calc.","code":""},{"path":"/reference/transform_prev_routine_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform Prevent routine data — transform_prev_routine_data","text":"","code":"transform_prev_routine_data(   df,   value_col,   transform_value_col,   scenario_col,   ind_ids )"},{"path":"/reference/transform_prev_routine_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform Prevent routine data — transform_prev_routine_data","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. value_col Column name column indicator values. transform_value_col Column name column(s) transformed indicator values, used calculate contributions. scenario_col Column name column scenario identifiers. Useful calculating contributions data long format rather wide format. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes().","code":""},{"path":"/reference/transform_road_safety.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform road safety data — transform_road_safety","title":"Transform road safety data — transform_road_safety","text":"Rescales road safety data using SDI ratio according Billions methods report","code":""},{"path":"/reference/transform_road_safety.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform road safety data — transform_road_safety","text":"","code":"transform_road_safety(x, iso3)"},{"path":"/reference/transform_road_safety.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform road safety data — transform_road_safety","text":"x Indicator value. iso3 Country ISO3 code.","code":""},{"path":"/reference/transform_suicide_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform suicide rate data — transform_suicide_rate","title":"Transform suicide rate data — transform_suicide_rate","text":"Rescales suicide rate data according Billions methods report","code":""},{"path":"/reference/transform_suicide_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform suicide rate data — transform_suicide_rate","text":"","code":"transform_suicide_rate(x)"},{"path":"/reference/transform_suicide_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform suicide rate data — transform_suicide_rate","text":"x Indicator value.","code":""},{"path":"/reference/transform_transfats.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform transfats policy data — transform_transfats","title":"Transform transfats policy data — transform_transfats","text":"Rescales transfats policy data according Billions methods report","code":""},{"path":"/reference/transform_transfats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform transfats policy data — transform_transfats","text":"","code":"transform_transfats(x)"},{"path":"/reference/transform_transfats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform transfats policy data — transform_transfats","text":"x Indicator value.","code":""},{"path":"/reference/transform_uhc_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform Raw Indicator Values for UHC Billion — transform_uhc_data","title":"Transform Raw Indicator Values for UHC Billion — transform_uhc_data","text":"transform_uhc_data() applies transformations UHC Billion indicators transformed indicator values can used within Billions calculations. Details specific transformations applied can found within Billions methods report. Values transform column, already exists, replaced UHC indicators data value column, otherwise column keeps original data.","code":""},{"path":"/reference/transform_uhc_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform Raw Indicator Values for UHC Billion — transform_uhc_data","text":"","code":"transform_uhc_data(   df,   value_col = \"value\",   transform_glue = \"transform_{value_col}\",   ind_ids = billion_ind_codes(\"uhc\"),   recycle = FALSE,   ... )"},{"path":"/reference/transform_uhc_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform Raw Indicator Values for UHC Billion — transform_uhc_data","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. value_col Column name column indicator values. transform_glue Glue expression passed glue::glue(). Defaults 'transform_{value_col}' create new column names prefixing transform_ original name. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes(). recycle Boolean indicate data recycled ... additional parameters pass recycle_data","code":""},{"path":"/reference/transform_uhc_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform Raw Indicator Values for UHC Billion — transform_uhc_data","text":"Data frame long format.","code":""},{"path":"/reference/transform_uhc_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transform Raw Indicator Values for UHC Billion — transform_uhc_data","text":"details UHC Billion calculation process function ties rest, see vignette: vignette(\"uhc\", package = \"billionaiRe\")","code":""},{"path":"/reference/transform_uhc_single.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform a transformation on a single column — transform_uhc_single","title":"Perform a transformation on a single column — transform_uhc_single","text":"function used within transform_uhc_data() generate transformed data single column.","code":""},{"path":"/reference/transform_uhc_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform a transformation on a single column — transform_uhc_single","text":"","code":"transform_uhc_single(df, value_col, transform_value_col, ind_ids)"},{"path":"/reference/transform_uhc_single.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform a transformation on a single column — transform_uhc_single","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. value_col Column name column indicator values. transform_value_col Column name column(s) transformed indicator values ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes().","code":""},{"path":"/reference/transform_uhc_single.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform a transformation on a single column — transform_uhc_single","text":"single column data frame transformed values.","code":""},{"path":"/reference/transform_uhc_tobacco.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform UHC tobacco data — transform_uhc_tobacco","title":"Transform UHC tobacco data — transform_uhc_tobacco","text":"Reverses indicator rescales [29,100] [0,100]","code":""},{"path":"/reference/transform_uhc_tobacco.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform UHC tobacco data — transform_uhc_tobacco","text":"","code":"transform_uhc_tobacco(x)"},{"path":"/reference/transform_uhc_tobacco.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform UHC tobacco data — transform_uhc_tobacco","text":"x Indicator value.","code":""},{"path":"/reference/trim_transforms.html","id":null,"dir":"Reference","previous_headings":"","what":"Trim all transformed data — trim_transforms","title":"Trim all transformed data — trim_transforms","text":"Trims transform data ensure values 0 100","code":""},{"path":"/reference/trim_transforms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trim all transformed data — trim_transforms","text":"","code":"trim_transforms(x, min_val = 0, max_val = 100)"},{"path":"/reference/trim_transforms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trim all transformed data — trim_transforms","text":"x Indicator value. min_val Minimum possible value transform take max_val Maximum possible value transform take","code":""},{"path":"/reference/trim_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Trim values — trim_values","title":"Trim values — trim_values","text":"scenario allows change value fixed percentage provided year provided baseline year. provides values scenarios stated \"Reduce INDICATOR XX% YEAR\"","code":""},{"path":"/reference/trim_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trim values — trim_values","text":"","code":"trim_values(   df,   col,   value_col = \"value\",   trim = TRUE,   small_is_best = FALSE,   keep_better_values = FALSE,   upper_limit = 100,   lower_limit = 0,   trim_years = TRUE,   start_year = 2018,   end_year = 2025 )"},{"path":"/reference/trim_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trim values — trim_values","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. col column trim values . removed returning data frame. value_col Column name column indicator values. column used return results. trim logical indicate data trimmed upper_limit lower_limit. small_is_best Logical identify lower value better higher one (e.g. lower obesity positive public health outcome, obesity rate small_is_best = TRUE). keep_better_values logical indicate \"better\" values kept value_col present. Follows direction set small_is_best.  instance, small_is_best TRUE, value_col lower col kept. upper_limit upper limit indicator caped. lower_limit lower_limit limit indicator caped. trim_years logical indicate years start_year end_year removed start_year Start year scenario, defaults 2018. end_year End year scenario, defaults 2025","code":""},{"path":"/reference/trim_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trim values — trim_values","text":"trimed data frame, removing col column, putting trimmed values value_col","code":""},{"path":"/reference/trim_values.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Trim values — trim_values","text":"percent_change parameter understood percentage change, percentage point change, usually intended formulations. indeed percentage change required, please use scenario_aroc. instance, calculate scenario \"reduce 2018 value (90%) 30% 2025\", results 2025 value 63% 60%. returned scenario portion straight line drawn baseline_year value target_year. values years start_year end_year returned.","code":""},{"path":"/reference/trim_years.html","id":null,"dir":"Reference","previous_headings":"","what":"Trim values — trim_years","title":"Trim values — trim_years","text":"scenario allows change value fixed percentage provided year provided baseline year. provides values scenarios stated \"Reduce INDICATOR XX% YEAR\"","code":""},{"path":"/reference/trim_years.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trim values — trim_years","text":"","code":"trim_years(df, trim_years, start_year, end_year)"},{"path":"/reference/trim_years.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trim values — trim_years","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. trim_years logical indicate years start_year end_year removed start_year Start year scenario, defaults 2018. end_year End year scenario, defaults 2025","code":""},{"path":"/reference/trim_years.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trim values — trim_years","text":"Dataframe scenario rows","code":""},{"path":"/reference/trim_years.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Trim values — trim_years","text":"percent_change parameter understood percentage change, percentage point change, usually intended formulations. indeed percentage change required, please use scenario_aroc. instance, calculate scenario \"reduce 2018 value (90%) 30% 2025\", results 2025 value 63% 60%. returned scenario portion straight line drawn baseline_year value target_year. values years start_year end_year returned.","code":""},{"path":"/reference/uhc_df.html","id":null,"dir":"Reference","previous_headings":"","what":"UHC example data — uhc_df","title":"UHC example data — uhc_df","text":"Fake UHC data used test Billions calculations code within billionaiRe package.","code":""},{"path":"/reference/uhc_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UHC example data — uhc_df","text":"","code":"uhc_df"},{"path":"/reference/uhc_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"UHC example data — uhc_df","text":"data frame 30 rows 5 variables: iso3 Country ISO3 codes. year Year. ind UHC indicator code. value Raw indicator value. type Data type.","code":""},{"path":"/reference/uhc_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"UHC example data — uhc_df","text":"See UHC vignette example use: vignette(\"uhc\", package = \"billionaiRe\")","code":""},{"path":"/reference/untransform_alcohol.html","id":null,"dir":"Reference","previous_headings":"","what":"Untransform alcohol data — untransform_alcohol","title":"Untransform alcohol data — untransform_alcohol","text":"Untransforms alcohol data according Billions methods report","code":""},{"path":"/reference/untransform_alcohol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Untransform alcohol data — untransform_alcohol","text":"","code":"untransform_alcohol(x)"},{"path":"/reference/untransform_alcohol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Untransform alcohol data — untransform_alcohol","text":"x Indicator value.","code":""},{"path":"/reference/untransform_bp.html","id":null,"dir":"Reference","previous_headings":"","what":"Untransform blood pressure data — untransform_bp","title":"Untransform blood pressure data — untransform_bp","text":"Reverses transformation transform_bp()","code":""},{"path":"/reference/untransform_bp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Untransform blood pressure data — untransform_bp","text":"","code":"untransform_bp(x)"},{"path":"/reference/untransform_bp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Untransform blood pressure data — untransform_bp","text":"x Indicator value.","code":""},{"path":"/reference/untransform_glucose.html","id":null,"dir":"Reference","previous_headings":"","what":"Unransform FPG data — untransform_glucose","title":"Unransform FPG data — untransform_glucose","text":"Reverses transformation transform_glucose()","code":""},{"path":"/reference/untransform_glucose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unransform FPG data — untransform_glucose","text":"","code":"untransform_glucose(x)"},{"path":"/reference/untransform_glucose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unransform FPG data — untransform_glucose","text":"x Indicator value.","code":""},{"path":"/reference/untransform_hosp_beds.html","id":null,"dir":"Reference","previous_headings":"","what":"Untransform hospital beds data — untransform_hosp_beds","title":"Untransform hospital beds data — untransform_hosp_beds","text":"Reverses transformation transform_hosp_beds()","code":""},{"path":"/reference/untransform_hosp_beds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Untransform hospital beds data — untransform_hosp_beds","text":"","code":"untransform_hosp_beds(x)"},{"path":"/reference/untransform_hosp_beds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Untransform hospital beds data — untransform_hosp_beds","text":"x Indicator value.","code":""},{"path":"/reference/untransform_hpop_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Untransform Indicator Values for HPOP Billion — untransform_hpop_data","title":"Untransform Indicator Values for HPOP Billion — untransform_hpop_data","text":"untransform_hpop_data() reverses transformations HPOP Billion indicators return raw indicator values. Details specific transformations applied can found within Billions methods report.","code":""},{"path":"/reference/untransform_hpop_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Untransform Indicator Values for HPOP Billion — untransform_hpop_data","text":"","code":"untransform_hpop_data(   df,   transform_value_col = \"transform_value_col\",   value_col = stringr::str_remove(transform_value_col, \"transform_\"),   ind_ids = billion_ind_codes(\"hpop\") )"},{"path":"/reference/untransform_hpop_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Untransform Indicator Values for HPOP Billion — untransform_hpop_data","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. transform_value_col Column name(s) column transformed values retrieve. value_col Column name(s) column place untransformed values. Must length transform_value_col. column already exists, values overwritten wherever ind transform_value_col available untransformed Billion, otherwise, column retains values. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes().","code":""},{"path":"/reference/untransform_hpop_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Untransform Indicator Values for HPOP Billion — untransform_hpop_data","text":"Data frame long format.","code":""},{"path":"/reference/untransform_hpop_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Untransform Indicator Values for HPOP Billion — untransform_hpop_data","text":"details HPOP Billion calculation process function ties rest, see vignette: vignette(\"hpop\", package = \"billionaiRe\")","code":""},{"path":"/reference/untransform_hpop_single.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform a transformation on a single column — untransform_hpop_single","title":"Perform a transformation on a single column — untransform_hpop_single","text":"function used within untransform_hpop_data() generate transformed data single column.","code":""},{"path":"/reference/untransform_hpop_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform a transformation on a single column — untransform_hpop_single","text":"","code":"untransform_hpop_single(df, transform_value_col, value_col, ind_ids)"},{"path":"/reference/untransform_hpop_single.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform a transformation on a single column — untransform_hpop_single","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. transform_value_col Column name(s) column transformed values retrieve. value_col Column name(s) column place untransformed values. Must length transform_value_col. column already exists, values overwritten wherever ind transform_value_col available untransformed Billion, otherwise, column retains values. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes().","code":""},{"path":"/reference/untransform_hpop_single.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform a transformation on a single column — untransform_hpop_single","text":"single column data frame transformed values.","code":""},{"path":"/reference/untransform_hwf.html","id":null,"dir":"Reference","previous_headings":"","what":"Untransform health workforce data — untransform_hwf","title":"Untransform health workforce data — untransform_hwf","text":"Reverses transformation transform_hwf()","code":""},{"path":"/reference/untransform_hwf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Untransform health workforce data — untransform_hwf","text":"","code":"untransform_hwf(x)"},{"path":"/reference/untransform_hwf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Untransform health workforce data — untransform_hwf","text":"x Indicator value.","code":""},{"path":"/reference/untransform_road_safety.html","id":null,"dir":"Reference","previous_headings":"","what":"Untransform road safety data — untransform_road_safety","title":"Untransform road safety data — untransform_road_safety","text":"Unscales road safety data using SDI ratio according Billions methods report","code":""},{"path":"/reference/untransform_road_safety.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Untransform road safety data — untransform_road_safety","text":"","code":"untransform_road_safety(x, iso3)"},{"path":"/reference/untransform_road_safety.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Untransform road safety data — untransform_road_safety","text":"x Indicator value. iso3 Country ISO3 code.","code":""},{"path":"/reference/untransform_suicide_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Untransform suicide rate date — untransform_suicide_rate","title":"Untransform suicide rate date — untransform_suicide_rate","text":"Rescales transformed suicide rate date according Billions methods report","code":""},{"path":"/reference/untransform_suicide_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Untransform suicide rate date — untransform_suicide_rate","text":"","code":"untransform_suicide_rate(x)"},{"path":"/reference/untransform_suicide_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Untransform suicide rate date — untransform_suicide_rate","text":"x Indicator value.","code":""},{"path":"/reference/untransform_transfats.html","id":null,"dir":"Reference","previous_headings":"","what":"Untransform transfats policy data — untransform_transfats","title":"Untransform transfats policy data — untransform_transfats","text":"Unscales transfats policy data according Billions methods report","code":""},{"path":"/reference/untransform_transfats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Untransform transfats policy data — untransform_transfats","text":"","code":"untransform_transfats(x)"},{"path":"/reference/untransform_transfats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Untransform transfats policy data — untransform_transfats","text":"x Indicator value.","code":""},{"path":"/reference/untransform_uhc_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Untransform Indicator Values for UHC Billion — untransform_uhc_data","title":"Untransform Indicator Values for UHC Billion — untransform_uhc_data","text":"untransform_uhc_data() reverses transformations UHC Billion indicators return raw indicator values. Details specific transformations applied can found within Billions methods report.","code":""},{"path":"/reference/untransform_uhc_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Untransform Indicator Values for UHC Billion — untransform_uhc_data","text":"","code":"untransform_uhc_data(   df,   transform_value_col = \"transform_value\",   value_col = stringr::str_remove(transform_value_col, \"transform_\"),   ind_ids = billion_ind_codes(\"uhc\") )"},{"path":"/reference/untransform_uhc_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Untransform Indicator Values for UHC Billion — untransform_uhc_data","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. transform_value_col Column name(s) column transformed values retrieve. value_col Column name(s) column place untransformed values. Must length transform_value_col. column already exists, values overwritten wherever ind transform_value_col available untransformed Billion, otherwise, column retains values. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes().","code":""},{"path":"/reference/untransform_uhc_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Untransform Indicator Values for UHC Billion — untransform_uhc_data","text":"Data frame long format.","code":""},{"path":"/reference/untransform_uhc_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Untransform Indicator Values for UHC Billion — untransform_uhc_data","text":"details UHC Billion calculation process function ties rest, see vignette: vignette(\"uhc\", package = \"billionaiRe\")","code":""},{"path":"/reference/untransform_uhc_single.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform a transformation on a single column — untransform_uhc_single","title":"Perform a transformation on a single column — untransform_uhc_single","text":"function used within untransform_uhc_data() generate transformed data single column.","code":""},{"path":"/reference/untransform_uhc_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform a transformation on a single column — untransform_uhc_single","text":"","code":"untransform_uhc_single(df, transform_value_col, value_col, ind_ids)"},{"path":"/reference/untransform_uhc_single.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform a transformation on a single column — untransform_uhc_single","text":"df Data frame long format, 1 row corresponds specific country, year, indicator. transform_value_col Column name(s) column transformed values retrieve. value_col Column name(s) column place untransformed values. Must length transform_value_col. column already exists, values overwritten wherever ind transform_value_col available untransformed Billion, otherwise, column retains values. ind_ids Named vector indicator codes input indicators Billion. Although separate indicator codes can used standard, must supplied named vector names correspond output billion_ind_codes().","code":""},{"path":"/reference/untransform_uhc_single.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform a transformation on a single column — untransform_uhc_single","text":"single column data frame transformed values.","code":""},{"path":"/reference/upload_billion_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload Billions indicator data — upload_billion_data","title":"Upload Billions indicator data — upload_billion_data","text":"upload_billion_data() allows easily upload data frame correct location World Health Data Hub. default, appends current timestamp file name, can also accept timestamp specified user.","code":""},{"path":"/reference/upload_billion_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload Billions indicator data — upload_billion_data","text":"","code":"upload_billion_data(   df,   data_type = c(\"wrangled_data\", \"projected_data\", \"final_data\"),   billion = c(\"hep\", \"hpop\", \"uhc\"),   ind_code,   version = whdh::get_formatted_timestamp(),   na_rm = TRUE,   experiment = NULL,   silent = TRUE )"},{"path":"/reference/upload_billion_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload Billions indicator data — upload_billion_data","text":"df (data.frame) data frame data_type (string) type data load. wrangled_data (default): raw data wrangled suitable form analysis. projected_data:  data fully projected target year yet transformed calculated upon. final_data: complete set billions data transformed values, contributions, calculations available. billion (string) One \"hep\", \"hpop\", \"uhc\". Ignored data_type = \"final_data\". ind_code (string) name indicator upload data . Ignored data_type = \"final_data\". version yyyy-mm-ddTHH-MM-SS formatted string. default current date time, returned whdh::get_formatted_timestamp(). na_rm (logical) Specifies whether remove rows value missing. Defaults FALSE. experiment (string) Either NULL string (\"unofficial\" default). Identifies Bronze/Silver/Gold data layers data uploaded located. empty string. NULL, root folder data layers 3B folder (.e., \"official\" data stored). example, 3B/Silver/.... string, root folder data layers sub-folder within Sandbox layer 3B data lake (e.g., experiment = \"my_exp\", data download 3B/Sandbox/my_exp/{data_layer}/...) silent (logical) Specifies whether show authentication messages progress bar. Defaults TRUE.","code":""},{"path":"/reference/upload_billion_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upload Billions indicator data — upload_billion_data","text":"data frame. Note modified version input function (removing empty rows na_rm = TRUE call save_wrangled_output()) carried output.","code":""},{"path":"/reference/upload_billion_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Upload Billions indicator data — upload_billion_data","text":"function requires user whdh package installed setup access data. quetions getting relevant permissions, please contact kanjim@.int messeillere@.int.","code":""},{"path":"/reference/warning_col_missing_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Warn user when any/all of the row are missing values for the the specified column — warning_col_missing_values","title":"Warn user when any/all of the row are missing values for the the specified column — warning_col_missing_values","text":"Warn user /row missing values specified column","code":""},{"path":"/reference/warning_col_missing_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Warn user when any/all of the row are missing values for the the specified column — warning_col_missing_values","text":"","code":"warning_col_missing_values(df, col_name, how)"},{"path":"/reference/warning_col_missing_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Warn user when any/all of the row are missing values for the the specified column — warning_col_missing_values","text":"df Input data frame col_name string specifying name column string specifying whether check /missing values","code":""},{"path":"/reference/wrangle_gho_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Put GHO data into billionaiRe format — wrangle_gho_data","title":"Put GHO data into billionaiRe format — wrangle_gho_data","text":"wrangle_gho_data takes data returned GHO OData API, obtained using  [ghost:gho_data()]https://gpw13.github.io/ghost/reference/gho_data.html, transforms data ready put xMart database used within billionaiRe package. Currently, providing source type inputs values entire data frame, work multiple indicators loaded GHO data frame.","code":""},{"path":"/reference/wrangle_gho_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Put GHO data into billionaiRe format — wrangle_gho_data","text":"","code":"wrangle_gho_data(df, source = NULL, type = NULL, ind = NULL, scenario = NULL)"},{"path":"/reference/wrangle_gho_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Put GHO data into billionaiRe format — wrangle_gho_data","text":"df data frame GHO format, returned [ghost:gho_data()]https://gpw13.github.io/ghost/reference/gho_data.html. source Character string source provided data frame source already available GHO. NULL, source column generated GHO's DataSourceDim column. type Character string type provided data frame. NULL, type column just filled NA_character_. ind Character string indicator provided data frame. NULL, indicator determined applying convert_ind_codes function IndicatorCode field GHO data. scenario (Character) string scenario provided data frame. NULL, scenario set NA_character.","code":""},{"path":"/reference/wrangle_gho_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Put GHO data into billionaiRe format — wrangle_gho_data","text":"data frame.","code":""},{"path":"/reference/wrangle_gho_rural_urban_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrangle GHO data with TOTL/RUR/URB dimensions — wrangle_gho_rural_urban_data","title":"Wrangle GHO data with TOTL/RUR/URB dimensions — wrangle_gho_rural_urban_data","text":"#'wrangle_gho_rural_urban_data() exapnds functionality wrangle_gho_data() also handling indicators TOTL/RUR/URB values Dim1 column GHO data response, first pivoting data frame selecting total, rural, urban values given (iso3, year) combination (order preference).","code":""},{"path":"/reference/wrangle_gho_rural_urban_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrangle GHO data with TOTL/RUR/URB dimensions — wrangle_gho_rural_urban_data","text":"","code":"wrangle_gho_rural_urban_data(   df,   source = NULL,   type = NULL,   ind = NULL,   upload_date = NULL,   scenario = NULL,   id_cols = c(\"SpatialDim\", \"TimeDim\"),   names_from = \"Dim1\",   values_from = c(\"NumericValue\", \"High\", \"Low\", \"DataSourceDim\", \"Comments\", \"Date\") )"},{"path":"/reference/wrangle_gho_rural_urban_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrangle GHO data with TOTL/RUR/URB dimensions — wrangle_gho_rural_urban_data","text":"df data frame GHO format, returned [ghost:gho_data()]https://gpw13.github.io/ghost/reference/gho_data.html. source Character string source provided data frame. NULL, source column generated GHO's DataSourceDim column. NULL, overrides source provided GHO. type Character string type provided data frame. NULL, type column filled NA_character_. ind Character string indicator name provided data frame. required argument raise error provided. RUR URB values available, indicator name _rural _urban appended output data frame. upload_date Character string indicating day data last updated GHO scenario (Character) string scenario provided data frame. NULL, scenario set NA_character. id_cols Character vector columns regardless TOTL/RUR/URB dimension. Used argument name pivot_wider. names_from, values_from pair character vectors used arguments name pivot_wider.","code":""},{"path":"/reference/wrangle_gho_rural_urban_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrangle GHO data with TOTL/RUR/URB dimensions — wrangle_gho_rural_urban_data","text":"data frame","code":""},{"path":"/reference/wrangle_gho_rural_urban_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wrangle GHO data with TOTL/RUR/URB dimensions — wrangle_gho_rural_urban_data","text":"also automatically filters 'mixed' time series — .e., instances time series given country contains combination TOTL, RUR, URB values keeping time series associated commonly occuring options. example, time series URB data 2000 2015 TOTL data 2016 2020 cutoff 2015, URB data kept.","code":""},{"path":"/reference/wrangle_gho_rural_urban_data.html","id":"todo","dir":"Reference","previous_headings":"","what":"TODO","title":"Wrangle GHO data with TOTL/RUR/URB dimensions — wrangle_gho_rural_urban_data","text":"Convert generic unspool_gho_dim function can work DimType, just TOTL/RUR/URB. Re-write make work better wrangle_gho_data avoid significant amount redundant logic. means , eventually, users may gho_data(.) %>% unspool_gho_dim(.) %>% wrangle_gho_data(.)","code":""},{"path":"/reference/wrangle_unsd_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Put UNSD data into billionaiRe format — wrangle_unsd_data","title":"Put UNSD data into billionaiRe format — wrangle_unsd_data","text":"wrangle_unsd_data() takes data returned UNSD API, obtained using [goalie::sdg_data()]https://gpw13.github.io/goalie/reference/sdg_data.html, transforms data ready put xMart database used within billionaiRe package. Currently, providing source type inputs values entire data frame, work multiple indicators loaded SDG data frame. well, UNSD series code kept data frame indicators_df contains UNSD codes can convert two.","code":""},{"path":"/reference/wrangle_unsd_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Put UNSD data into billionaiRe format — wrangle_unsd_data","text":"","code":"wrangle_unsd_data(df, source = NULL, type = NULL, scenario = NULL)"},{"path":"/reference/wrangle_unsd_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Put UNSD data into billionaiRe format — wrangle_unsd_data","text":"df data frame UNSD format, returned [goalie::sdg_data()]https://gpw13.github.io/goalie/reference/sdg_data.html. source Character string source provided data frame source already available UNSD database. NULL, source column generated UNSD's Source column. type Character string type provided data frame. NULL, type column generated UNSD's Nature column. \"C\" \"CA\" turned \"reported\", \"E\" \"M\" \"estimated\". scenario (Character) string scenario provided data frame. NULL, scenario set NA_character.","code":""},{"path":"/reference/wrangle_unsd_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Put UNSD data into billionaiRe format — wrangle_unsd_data","text":"data frame.","code":""},{"path":"/reference/xmart_col_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the column types for xMart columns — xmart_col_types","title":"Get the column types for xMart columns — xmart_col_types","text":"helper function specifying expected column types Triple Billions data.","code":""},{"path":"/reference/xmart_col_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the column types for xMart columns — xmart_col_types","text":"","code":"xmart_col_types(data_type = c(\"wrangled_data\", \"projected_data\", \"final_data\"))"},{"path":"/reference/xmart_col_types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the column types for xMart columns — xmart_col_types","text":"data_type (string): type data wrangled_data (default): raw data wrangled suitable form analysis. projected_data:  data fully projected target year yet transformed calculated upon. final_data: complete set billions data transformed values, contributions, calculations available.","code":""},{"path":"/reference/xmart_col_types.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the column types for xMart columns — xmart_col_types","text":"named vector column specifications","code":""},{"path":"/reference/xmart_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Get names of xMart4 columns — xmart_cols","title":"Get names of xMart4 columns — xmart_cols","text":"Returns character vector names columns expected Triple Billions xMart tables.","code":""},{"path":"/reference/xmart_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get names of xMart4 columns — xmart_cols","text":"","code":"xmart_cols(data_type = c(\"wrangled_data\", \"projected_data\", \"final_data\"))"},{"path":"/reference/xmart_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get names of xMart4 columns — xmart_cols","text":"data_type (string): type data wrangled_data (default): raw data wrangled suitable form analysis. projected_data:  data fully projected target year yet transformed calculated upon. final_data: complete set billions data transformed values, contributions, calculations available.","code":""},{"path":"/reference/xmart_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get names of xMart4 columns — xmart_cols","text":"character vector","code":""},{"path":"/news/index.html","id":"billionaire-070","dir":"Changelog","previous_headings":"","what":"billionaiRe 0.7.0","title":"billionaiRe 0.7.0","text":"Pass version 0.7.0 removing unused column parameters. Remove ind, year, iso3, type source functions parameters Rename parameters value, transform_value, scenario, contribution contribution_pct value_col, transform_value_col, scenario_col, contribution_col contribution_pct_col respectively.","code":""},{"path":"/news/index.html","id":"billionaire-0610","dir":"Changelog","previous_headings":"","what":"billionaiRe 0.6.10","title":"billionaiRe 0.6.10","text":"save_wrangled_output now saves files columns capitalised load_billion_data_whdh changes column names lower case downloading data WHDH simplify WHDH => xMart pipelines.","code":""},{"path":"/news/index.html","id":"billionaire-069","dir":"Changelog","previous_headings":"","what":"billionaiRe 0.6.9","title":"billionaiRe 0.6.9","text":"Add scenario_return_previous_trajectory return pre_covid_trajectory covid_shock Add impute_covid_shock impute COVID-19 shock easily Add aroc_type related parameters scenario_dip_recover add alternatives AROC calculated. chiefly allow use average AROC rather just latest value. Corrects bugs","code":""},{"path":"/news/index.html","id":"billionaire-068","dir":"Changelog","previous_headings":"","what":"billionaiRe 0.6.8","title":"billionaiRe 0.6.8","text":"Adds support covid_shock make_default_scenario() now doesn’t require default_scenario scenario column. Updated save_wrangled_output explicitly enforce expectations data frames writing disk. New assertions: assert_col_types(), assert_has_names(), assert_distinct_rows(), assert_col_paired_with(). Updated wrangle_data.R functions explicitly cast columns expected types.","code":""},{"path":"/news/index.html","id":"billionaire-067","dir":"Changelog","previous_headings":"","what":"billionaiRe 0.6.7","title":"billionaiRe 0.6.7","text":"Adds upload_billion_data function easy uploads 3B data lake World Health Data Hub (WHDH). Adds assert_timestamp assert_class utilities checks. Removed testit dependencies. Aligned save_wrangled_output upload_billion_data: functions now return modified data frame writing disk/upload. Updated docs xmart_cols save_wrangled_output save_wrangled_output now accepts data_type na_rm arguments Default compression save_wrangled_output changed “gzip” Added assertions save_wrangled_output function now raises error expected columns aren’t available (previously raised warning returned input data frame instead). Bug fix: upload_billion_data now returns data frame (previously returning NULL)","code":""},{"path":"/news/index.html","id":"billionaire-066","dir":"Changelog","previous_headings":"","what":"billionaiRe 0.6.6","title":"billionaiRe 0.6.6","text":"Updates load_billion_data functions incorporating whdh::download_data_asset function use version argument replace date_filter placeholder. load_billion_data now experiment argument, replaces sandbox.","code":""},{"path":"/news/index.html","id":"billionaire-065","dir":"Changelog","previous_headings":"","what":"billionaiRe 0.6.5","title":"billionaiRe 0.6.5","text":"none becomes routine tp becomes reference_infilling add scenario scenario_details wrangled columns wrangling functions xmart_cols expected present now . Adding COVID-19 scenarios.","code":""},{"path":"/news/index.html","id":"billionaire-064","dir":"Changelog","previous_headings":"","what":"billionaiRe 0.6.4","title":"billionaiRe 0.6.4","text":"Adding Sustainable Development Goals acceleration scenarios.","code":""},{"path":"/news/index.html","id":"billionaire-063","dir":"Changelog","previous_headings":"","what":"billionaiRe 0.6.3","title":"billionaiRe 0.6.3","text":"Corrected problems fh indicator transformed correctly. See [issue #35]{https://github.com/gpw13/billionaiRe/issues/35} details. Updated testing data frames accordingly.","code":""},{"path":"/news/index.html","id":"billionaire-062","dir":"Changelog","previous_headings":"","what":"billionaiRe 0.6.2","title":"billionaiRe 0.6.2","text":"Add scenario functions billionaiRe. allow calculate different scenarios based either application one scenario indicators special-case scenarios calculations might differ indicators. See vignette(“scenario”, “billionaiRe”) Bring improvements data_recycling","code":""},{"path":"/news/index.html","id":"billionaire-061","dir":"Changelog","previous_headings":"","what":"billionaiRe 0.6.1","title":"billionaiRe 0.6.1","text":"Add recycle_data functions efficiently recycle data. See vignette(“scenarios”, “billionaiRe”) overview functionality logic behind data recycling.","code":""},{"path":"/news/index.html","id":"billionaire-060","dir":"Changelog","previous_headings":"","what":"billionaiRe 0.6.0","title":"billionaiRe 0.6.0","text":"Various updates facilitate migration Triple Billion data pipeline WHDH * Updated load_billion_data now pull data WHDH data lake default optionally set xMart data_source. Using xMart currently redirects user legacy version load_billion_data, xMart functionality built. * Added get_whdh_path easy generation download/upload paths WHDH data lake * Updated save_wrangled_output work parquet format. * Added save_gho_backup_to_whdh, making easier backup snapshots GHO data WHDH data lake. * Updated billion_ind_codes toggle subindicators (like water_rural, water_urban eSpar categories sub-categories). * Added get_ind_billion determining billion given indicato belongs . * Updated xmart_cols return different sets columns based different types data. * Added new assertions: assert_type, assert_fileext, assert_unique_vector, assert_length, assert_min_length, assert_same_length, assert_equals, assert_x_in_y. * Updated assert_arg_exists custom error messages. * Rearranged utils_asserts.R categorise different assertions.","code":""},{"path":"/news/index.html","id":"billionaire-053","dir":"Changelog","previous_headings":"","what":"billionaiRe 0.5.3","title":"billionaiRe 0.5.3","text":"Export functions introduced version 0.5.0 moved code new package: rapporteur. reduces size billionaiRe package maintain better logic package environment. Introduce basic testing (input-output) package.","code":""},{"path":"/news/index.html","id":"billionaire-052","dir":"Changelog","previous_headings":"","what":"billionaiRe 0.5.2","title":"billionaiRe 0.5.2","text":"Added definitions indicator_df.xlsx Renamed column analysis_code ind indicator_df.xlsx. Removed column ind indicator_df.xlsx. Modified code use ind instead analysis_code.","code":""},{"path":"/news/index.html","id":"billionaire-051","dir":"Changelog","previous_headings":"","what":"billionaiRe 0.5.1","title":"billionaiRe 0.5.1","text":"Combined indicator_df.xlsx indicator_order.xlsx one file. Updated dashboard_id better align current dashboard backend. Changes DESCRIPTION reflecting wppdistro transfer WorldHealthOrganization GitHub org.","code":""},{"path":"/news/index.html","id":"billionaire-050","dir":"Changelog","previous_headings":"","what":"billionaiRe 0.5.0","title":"billionaiRe 0.5.0","text":"Added export_all_countries_summaries_xls export country summary Excel files billions specific billion. Added export_country_summary_xls export one country summary Excel file billions specific billion. Added support functions two preceding functions. Modified indicator_df, indicator_df.xlsx, indicator_df.rda include additional information indicators definition, names, etc. Added indicator_order.xlsx joined indicator_df. Added affected_pathogens, affected_pathogens.xlsx, affected_pathogens.rda indicate pathogens countries affected. Added inst/extdata/country_summary_template.xlsx store Excel template country profiles. Modified default values 2025 instead 2023. Added pre-commit hooks style ensure consistency code commit. See pre-commit repository information.","code":""},{"path":"/news/index.html","id":"billionaire-044","dir":"Changelog","previous_headings":"","what":"billionaiRe 0.4.4","title":"billionaiRe 0.4.4","text":"Added calculate_contribution_sums ability calculate regional global sums HEP, HPOP, UHC billions given year.","code":""},{"path":"/news/index.html","id":"billionaire-043","dir":"Changelog","previous_headings":"","what":"billionaiRe 0.4.3","title":"billionaiRe 0.4.3","text":"Added wrangled_rural_urban_gho_data() functionality supplant wrangle_gho_data() indicators data additional RESIDENCEAREATYPE dimension possible values TOTL, URB RUR. Added xmart_cols(), has_xmart_cols(), save_wrangled_output() utility functions easier wrangling data updates. Full Billions data table added load_billion_data(), allowing user directly download latest Billions data resultant calculations.","code":""},{"path":"/news/index.html","id":"billionaire-042","dir":"Changelog","previous_headings":"","what":"billionaiRe 0.4.2","title":"billionaiRe 0.4.2","text":"Updated indicator_df.xlsx indicator_df.rda GHO code polio_routine(WHS4_544). Billions calculations now return contribution_percent well contribution values, use dashboard presentations. HPOP Billion calculation returns total Billion without double counting correction, well standard.","code":""},{"path":"/news/index.html","id":"billionaire-041","dir":"Changelog","previous_headings":"","what":"billionaiRe 0.4.1","title":"billionaiRe 0.4.1","text":"Updated wrangle_who_data function additional assertions warnings Updated indicator_df.xlsx indicator_df.rda GHO code measles_routine (WHS8_110)","code":""},{"path":"/news/index.html","id":"billionaire-040","dir":"Changelog","previous_headings":"","what":"billionaiRe 0.4.0","title":"billionaiRe 0.4.0","text":"Updated three Billions functions produce data long format immediate upload xMart. Developed three Billions calculated various scenarios, defined long format scenario column wide format multiple value columns. Expanded HEP Billion allow use ebola, COVID, measles campaign data within Prevent indicator.","code":""},{"path":"/news/index.html","id":"billionaire-030","dir":"Changelog","previous_headings":"","what":"billionaiRe 0.3.0","title":"billionaiRe 0.3.0","text":"Updated data loading functions 3 xMart databases available: unprojected data, projected data, final input data Billions. Added untransform_hpop_data() untransform_uhc_data() transformed data converted back original domain raw data. Allow multiple columns transformed untransformed using transform_... untransform_... functions UHC HPOP Billions. Clear error messages added non-distinct rows df ind, iso3, year.","code":""},{"path":"/news/index.html","id":"billionaire-021","dir":"Changelog","previous_headings":"","what":"billionaiRe 0.2.1","title":"billionaiRe 0.2.1","text":"Changed transform_glucose() domain 5.1 7.4, previously one 5.1 7.4. Fixed pop_links ensure IPV double counting correction correct","code":""},{"path":"/news/index.html","id":"billionaire-020","dir":"Changelog","previous_headings":"","what":"billionaiRe 0.2.0","title":"billionaiRe 0.2.0","text":"Added NEWS.md file track changes package. Implemented HEP Billions pipeline.","code":""},{"path":"/news/index.html","id":"billionaire-010","dir":"Changelog","previous_headings":"","what":"billionaiRe 0.1.0","title":"billionaiRe 0.1.0","text":"Initial release package. UHC HPOP Billions available calculation billionaiRe API.","code":""}]
