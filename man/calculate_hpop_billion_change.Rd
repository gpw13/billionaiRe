% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calculate_hpop_billion.R
\name{calculate_hpop_billion_change}
\alias{calculate_hpop_billion_change}
\title{Calculate the HPOP Billion using columns of change}
\usage{
calculate_hpop_billion_change(
  df,
  change = "contribution_percent",
  contribution = "contribution",
  ind = "ind",
  iso3 = "iso3",
  year = "year",
  population = "population",
  end_year = 2019:2023,
  pop_year = 2023,
  scenario = NULL,
  ind_ids = billion_ind_codes("hpop")
)
}
\arguments{
\item{df}{Data frame in long format, where 1 row corresponds to a specific
country, year, and indicator.}

\item{change}{Column name of column(s) with change value}

\item{contribution}{Column name of column(s) to store contribution (population)
values. Must be the same length as \code{transform_value}.}

\item{ind}{Column name of column with indicator names.}

\item{iso3}{Column name of column with country ISO3 codes.}

\item{year}{Column name of column with years.}

\item{population}{Column name of column with population figures.}

\item{end_year}{End year(s) for contribution calculation, defaults to 2019 to 2023.}

\item{pop_year}{Year used to pull in HPOP populations, defaults to 2023.}

\item{scenario}{Column name of column with scenario identifiers. Useful for
calculating contributions on data in long format rather than wide format.}

\item{ind_ids}{Named vector of indicator codes for input indicators to the Billion.
Although separate indicator codes can be used than the standard, they must
be supplied as a named vector where the names correspond to the output of
\code{billion_ind_codes()}.}
}
\description{
\code{calculate_hpop_billion_change()} uses the standard HPOP methodology to calculate
the Billions estimates for all end years. It is used within \code{\link[=calculate_hpop_billion]{calculate_hpop_billion()}}
to calculate the Billion and return the data in long format. Called by itself,
it expects a column of changes to be passed in, and
returns the Billion for all \code{end_year} values.
}
